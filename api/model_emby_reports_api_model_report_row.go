/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the EmbyReportsApiModelReportRow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbyReportsApiModelReportRow{}

// EmbyReportsApiModelReportRow struct for EmbyReportsApiModelReportRow
type EmbyReportsApiModelReportRow struct {
	Id *string `json:"Id,omitempty"`
	HasImageTagsBackdrop *bool `json:"HasImageTagsBackdrop,omitempty"`
	HasImageTagsPrimary *bool `json:"HasImageTagsPrimary,omitempty"`
	HasImageTagsLogo *bool `json:"HasImageTagsLogo,omitempty"`
	HasLocalTrailer *bool `json:"HasLocalTrailer,omitempty"`
	HasLockData *bool `json:"HasLockData,omitempty"`
	HasEmbeddedImage *bool `json:"HasEmbeddedImage,omitempty"`
	HasSubtitles *bool `json:"HasSubtitles,omitempty"`
	HasSpecials *bool `json:"HasSpecials,omitempty"`
	Columns []EmbyReportsApiModelReportItem `json:"Columns,omitempty"`
	RowType *string `json:"RowType,omitempty"`
	UserId *string `json:"UserId,omitempty"`
}

// NewEmbyReportsApiModelReportRow instantiates a new EmbyReportsApiModelReportRow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbyReportsApiModelReportRow() *EmbyReportsApiModelReportRow {
	this := EmbyReportsApiModelReportRow{}
	return &this
}

// NewEmbyReportsApiModelReportRowWithDefaults instantiates a new EmbyReportsApiModelReportRow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbyReportsApiModelReportRowWithDefaults() *EmbyReportsApiModelReportRow {
	this := EmbyReportsApiModelReportRow{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportRow) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportRow) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportRow) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EmbyReportsApiModelReportRow) SetId(v string) {
	o.Id = &v
}

// GetHasImageTagsBackdrop returns the HasImageTagsBackdrop field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportRow) GetHasImageTagsBackdrop() bool {
	if o == nil || IsNil(o.HasImageTagsBackdrop) {
		var ret bool
		return ret
	}
	return *o.HasImageTagsBackdrop
}

// GetHasImageTagsBackdropOk returns a tuple with the HasImageTagsBackdrop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportRow) GetHasImageTagsBackdropOk() (*bool, bool) {
	if o == nil || IsNil(o.HasImageTagsBackdrop) {
		return nil, false
	}
	return o.HasImageTagsBackdrop, true
}

// HasHasImageTagsBackdrop returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportRow) HasHasImageTagsBackdrop() bool {
	if o != nil && !IsNil(o.HasImageTagsBackdrop) {
		return true
	}

	return false
}

// SetHasImageTagsBackdrop gets a reference to the given bool and assigns it to the HasImageTagsBackdrop field.
func (o *EmbyReportsApiModelReportRow) SetHasImageTagsBackdrop(v bool) {
	o.HasImageTagsBackdrop = &v
}

// GetHasImageTagsPrimary returns the HasImageTagsPrimary field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportRow) GetHasImageTagsPrimary() bool {
	if o == nil || IsNil(o.HasImageTagsPrimary) {
		var ret bool
		return ret
	}
	return *o.HasImageTagsPrimary
}

// GetHasImageTagsPrimaryOk returns a tuple with the HasImageTagsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportRow) GetHasImageTagsPrimaryOk() (*bool, bool) {
	if o == nil || IsNil(o.HasImageTagsPrimary) {
		return nil, false
	}
	return o.HasImageTagsPrimary, true
}

// HasHasImageTagsPrimary returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportRow) HasHasImageTagsPrimary() bool {
	if o != nil && !IsNil(o.HasImageTagsPrimary) {
		return true
	}

	return false
}

// SetHasImageTagsPrimary gets a reference to the given bool and assigns it to the HasImageTagsPrimary field.
func (o *EmbyReportsApiModelReportRow) SetHasImageTagsPrimary(v bool) {
	o.HasImageTagsPrimary = &v
}

// GetHasImageTagsLogo returns the HasImageTagsLogo field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportRow) GetHasImageTagsLogo() bool {
	if o == nil || IsNil(o.HasImageTagsLogo) {
		var ret bool
		return ret
	}
	return *o.HasImageTagsLogo
}

// GetHasImageTagsLogoOk returns a tuple with the HasImageTagsLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportRow) GetHasImageTagsLogoOk() (*bool, bool) {
	if o == nil || IsNil(o.HasImageTagsLogo) {
		return nil, false
	}
	return o.HasImageTagsLogo, true
}

// HasHasImageTagsLogo returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportRow) HasHasImageTagsLogo() bool {
	if o != nil && !IsNil(o.HasImageTagsLogo) {
		return true
	}

	return false
}

// SetHasImageTagsLogo gets a reference to the given bool and assigns it to the HasImageTagsLogo field.
func (o *EmbyReportsApiModelReportRow) SetHasImageTagsLogo(v bool) {
	o.HasImageTagsLogo = &v
}

// GetHasLocalTrailer returns the HasLocalTrailer field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportRow) GetHasLocalTrailer() bool {
	if o == nil || IsNil(o.HasLocalTrailer) {
		var ret bool
		return ret
	}
	return *o.HasLocalTrailer
}

// GetHasLocalTrailerOk returns a tuple with the HasLocalTrailer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportRow) GetHasLocalTrailerOk() (*bool, bool) {
	if o == nil || IsNil(o.HasLocalTrailer) {
		return nil, false
	}
	return o.HasLocalTrailer, true
}

// HasHasLocalTrailer returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportRow) HasHasLocalTrailer() bool {
	if o != nil && !IsNil(o.HasLocalTrailer) {
		return true
	}

	return false
}

// SetHasLocalTrailer gets a reference to the given bool and assigns it to the HasLocalTrailer field.
func (o *EmbyReportsApiModelReportRow) SetHasLocalTrailer(v bool) {
	o.HasLocalTrailer = &v
}

// GetHasLockData returns the HasLockData field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportRow) GetHasLockData() bool {
	if o == nil || IsNil(o.HasLockData) {
		var ret bool
		return ret
	}
	return *o.HasLockData
}

// GetHasLockDataOk returns a tuple with the HasLockData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportRow) GetHasLockDataOk() (*bool, bool) {
	if o == nil || IsNil(o.HasLockData) {
		return nil, false
	}
	return o.HasLockData, true
}

// HasHasLockData returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportRow) HasHasLockData() bool {
	if o != nil && !IsNil(o.HasLockData) {
		return true
	}

	return false
}

// SetHasLockData gets a reference to the given bool and assigns it to the HasLockData field.
func (o *EmbyReportsApiModelReportRow) SetHasLockData(v bool) {
	o.HasLockData = &v
}

// GetHasEmbeddedImage returns the HasEmbeddedImage field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportRow) GetHasEmbeddedImage() bool {
	if o == nil || IsNil(o.HasEmbeddedImage) {
		var ret bool
		return ret
	}
	return *o.HasEmbeddedImage
}

// GetHasEmbeddedImageOk returns a tuple with the HasEmbeddedImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportRow) GetHasEmbeddedImageOk() (*bool, bool) {
	if o == nil || IsNil(o.HasEmbeddedImage) {
		return nil, false
	}
	return o.HasEmbeddedImage, true
}

// HasHasEmbeddedImage returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportRow) HasHasEmbeddedImage() bool {
	if o != nil && !IsNil(o.HasEmbeddedImage) {
		return true
	}

	return false
}

// SetHasEmbeddedImage gets a reference to the given bool and assigns it to the HasEmbeddedImage field.
func (o *EmbyReportsApiModelReportRow) SetHasEmbeddedImage(v bool) {
	o.HasEmbeddedImage = &v
}

// GetHasSubtitles returns the HasSubtitles field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportRow) GetHasSubtitles() bool {
	if o == nil || IsNil(o.HasSubtitles) {
		var ret bool
		return ret
	}
	return *o.HasSubtitles
}

// GetHasSubtitlesOk returns a tuple with the HasSubtitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportRow) GetHasSubtitlesOk() (*bool, bool) {
	if o == nil || IsNil(o.HasSubtitles) {
		return nil, false
	}
	return o.HasSubtitles, true
}

// HasHasSubtitles returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportRow) HasHasSubtitles() bool {
	if o != nil && !IsNil(o.HasSubtitles) {
		return true
	}

	return false
}

// SetHasSubtitles gets a reference to the given bool and assigns it to the HasSubtitles field.
func (o *EmbyReportsApiModelReportRow) SetHasSubtitles(v bool) {
	o.HasSubtitles = &v
}

// GetHasSpecials returns the HasSpecials field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportRow) GetHasSpecials() bool {
	if o == nil || IsNil(o.HasSpecials) {
		var ret bool
		return ret
	}
	return *o.HasSpecials
}

// GetHasSpecialsOk returns a tuple with the HasSpecials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportRow) GetHasSpecialsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasSpecials) {
		return nil, false
	}
	return o.HasSpecials, true
}

// HasHasSpecials returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportRow) HasHasSpecials() bool {
	if o != nil && !IsNil(o.HasSpecials) {
		return true
	}

	return false
}

// SetHasSpecials gets a reference to the given bool and assigns it to the HasSpecials field.
func (o *EmbyReportsApiModelReportRow) SetHasSpecials(v bool) {
	o.HasSpecials = &v
}

// GetColumns returns the Columns field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportRow) GetColumns() []EmbyReportsApiModelReportItem {
	if o == nil || IsNil(o.Columns) {
		var ret []EmbyReportsApiModelReportItem
		return ret
	}
	return o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportRow) GetColumnsOk() ([]EmbyReportsApiModelReportItem, bool) {
	if o == nil || IsNil(o.Columns) {
		return nil, false
	}
	return o.Columns, true
}

// HasColumns returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportRow) HasColumns() bool {
	if o != nil && !IsNil(o.Columns) {
		return true
	}

	return false
}

// SetColumns gets a reference to the given []EmbyReportsApiModelReportItem and assigns it to the Columns field.
func (o *EmbyReportsApiModelReportRow) SetColumns(v []EmbyReportsApiModelReportItem) {
	o.Columns = v
}

// GetRowType returns the RowType field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportRow) GetRowType() string {
	if o == nil || IsNil(o.RowType) {
		var ret string
		return ret
	}
	return *o.RowType
}

// GetRowTypeOk returns a tuple with the RowType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportRow) GetRowTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RowType) {
		return nil, false
	}
	return o.RowType, true
}

// HasRowType returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportRow) HasRowType() bool {
	if o != nil && !IsNil(o.RowType) {
		return true
	}

	return false
}

// SetRowType gets a reference to the given string and assigns it to the RowType field.
func (o *EmbyReportsApiModelReportRow) SetRowType(v string) {
	o.RowType = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportRow) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportRow) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportRow) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *EmbyReportsApiModelReportRow) SetUserId(v string) {
	o.UserId = &v
}

func (o EmbyReportsApiModelReportRow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbyReportsApiModelReportRow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.HasImageTagsBackdrop) {
		toSerialize["HasImageTagsBackdrop"] = o.HasImageTagsBackdrop
	}
	if !IsNil(o.HasImageTagsPrimary) {
		toSerialize["HasImageTagsPrimary"] = o.HasImageTagsPrimary
	}
	if !IsNil(o.HasImageTagsLogo) {
		toSerialize["HasImageTagsLogo"] = o.HasImageTagsLogo
	}
	if !IsNil(o.HasLocalTrailer) {
		toSerialize["HasLocalTrailer"] = o.HasLocalTrailer
	}
	if !IsNil(o.HasLockData) {
		toSerialize["HasLockData"] = o.HasLockData
	}
	if !IsNil(o.HasEmbeddedImage) {
		toSerialize["HasEmbeddedImage"] = o.HasEmbeddedImage
	}
	if !IsNil(o.HasSubtitles) {
		toSerialize["HasSubtitles"] = o.HasSubtitles
	}
	if !IsNil(o.HasSpecials) {
		toSerialize["HasSpecials"] = o.HasSpecials
	}
	if !IsNil(o.Columns) {
		toSerialize["Columns"] = o.Columns
	}
	if !IsNil(o.RowType) {
		toSerialize["RowType"] = o.RowType
	}
	if !IsNil(o.UserId) {
		toSerialize["UserId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableEmbyReportsApiModelReportRow struct {
	value *EmbyReportsApiModelReportRow
	isSet bool
}

func (v NullableEmbyReportsApiModelReportRow) Get() *EmbyReportsApiModelReportRow {
	return v.value
}

func (v *NullableEmbyReportsApiModelReportRow) Set(val *EmbyReportsApiModelReportRow) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbyReportsApiModelReportRow) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbyReportsApiModelReportRow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbyReportsApiModelReportRow(val *EmbyReportsApiModelReportRow) *NullableEmbyReportsApiModelReportRow {
	return &NullableEmbyReportsApiModelReportRow{value: val, isSet: true}
}

func (v NullableEmbyReportsApiModelReportRow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbyReportsApiModelReportRow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


