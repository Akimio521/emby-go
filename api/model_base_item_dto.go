/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the BaseItemDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseItemDto{}

// BaseItemDto struct for BaseItemDto
type BaseItemDto struct {
	Name *string `json:"Name,omitempty"`
	OriginalTitle *string `json:"OriginalTitle,omitempty"`
	ServerId *string `json:"ServerId,omitempty"`
	Id *string `json:"Id,omitempty"`
	Etag *string `json:"Etag,omitempty"`
	PlaylistItemId *string `json:"PlaylistItemId,omitempty"`
	DateCreated NullableTime `json:"DateCreated,omitempty"`
	ExtraType *string `json:"ExtraType,omitempty"`
	AirsBeforeSeasonNumber NullableInt32 `json:"AirsBeforeSeasonNumber,omitempty"`
	AirsAfterSeasonNumber NullableInt32 `json:"AirsAfterSeasonNumber,omitempty"`
	AirsBeforeEpisodeNumber NullableInt32 `json:"AirsBeforeEpisodeNumber,omitempty"`
	DisplaySpecialsWithSeasons NullableBool `json:"DisplaySpecialsWithSeasons,omitempty"`
	CanDelete NullableBool `json:"CanDelete,omitempty"`
	CanDownload NullableBool `json:"CanDownload,omitempty"`
	HasSubtitles NullableBool `json:"HasSubtitles,omitempty"`
	SupportsResume NullableBool `json:"SupportsResume,omitempty"`
	PreferredMetadataLanguage *string `json:"PreferredMetadataLanguage,omitempty"`
	PreferredMetadataCountryCode *string `json:"PreferredMetadataCountryCode,omitempty"`
	SupportsSync NullableBool `json:"SupportsSync,omitempty"`
	Container *string `json:"Container,omitempty"`
	SortName *string `json:"SortName,omitempty"`
	ForcedSortName *string `json:"ForcedSortName,omitempty"`
	Video3DFormat *string `json:"Video3DFormat,omitempty"`
	PremiereDate NullableTime `json:"PremiereDate,omitempty"`
	ExternalUrls []ExternalUrl `json:"ExternalUrls,omitempty"`
	MediaSources []MediaSourceInfo `json:"MediaSources,omitempty"`
	CriticRating NullableFloat32 `json:"CriticRating,omitempty"`
	GameSystemId NullableInt64 `json:"GameSystemId,omitempty"`
	GameSystem *string `json:"GameSystem,omitempty"`
	ProductionLocations []string `json:"ProductionLocations,omitempty"`
	Path *string `json:"Path,omitempty"`
	OfficialRating *string `json:"OfficialRating,omitempty"`
	CustomRating *string `json:"CustomRating,omitempty"`
	ChannelId *string `json:"ChannelId,omitempty"`
	ChannelName *string `json:"ChannelName,omitempty"`
	Overview *string `json:"Overview,omitempty"`
	Taglines []string `json:"Taglines,omitempty"`
	Genres []string `json:"Genres,omitempty"`
	CommunityRating NullableFloat32 `json:"CommunityRating,omitempty"`
	RunTimeTicks NullableInt64 `json:"RunTimeTicks,omitempty"`
	PlayAccess *string `json:"PlayAccess,omitempty"`
	AspectRatio *string `json:"AspectRatio,omitempty"`
	ProductionYear NullableInt32 `json:"ProductionYear,omitempty"`
	Number *string `json:"Number,omitempty"`
	ChannelNumber *string `json:"ChannelNumber,omitempty"`
	IndexNumber NullableInt32 `json:"IndexNumber,omitempty"`
	IndexNumberEnd NullableInt32 `json:"IndexNumberEnd,omitempty"`
	ParentIndexNumber NullableInt32 `json:"ParentIndexNumber,omitempty"`
	RemoteTrailers []MediaUrl `json:"RemoteTrailers,omitempty"`
	ProviderIds *map[string]string `json:"ProviderIds,omitempty"`
	IsFolder NullableBool `json:"IsFolder,omitempty"`
	ParentId *string `json:"ParentId,omitempty"`
	Type *string `json:"Type,omitempty"`
	People []BaseItemPerson `json:"People,omitempty"`
	Studios []NameLongIdPair `json:"Studios,omitempty"`
	GenreItems []NameLongIdPair `json:"GenreItems,omitempty"`
	ParentLogoItemId *string `json:"ParentLogoItemId,omitempty"`
	ParentBackdropItemId *string `json:"ParentBackdropItemId,omitempty"`
	ParentBackdropImageTags []string `json:"ParentBackdropImageTags,omitempty"`
	LocalTrailerCount NullableInt32 `json:"LocalTrailerCount,omitempty"`
	UserData *UserItemDataDto `json:"UserData,omitempty"`
	RecursiveItemCount NullableInt32 `json:"RecursiveItemCount,omitempty"`
	ChildCount NullableInt32 `json:"ChildCount,omitempty"`
	SeriesName *string `json:"SeriesName,omitempty"`
	SeriesId *string `json:"SeriesId,omitempty"`
	SeasonId *string `json:"SeasonId,omitempty"`
	SpecialFeatureCount NullableInt32 `json:"SpecialFeatureCount,omitempty"`
	DisplayPreferencesId *string `json:"DisplayPreferencesId,omitempty"`
	Status *string `json:"Status,omitempty"`
	AirTime *string `json:"AirTime,omitempty"`
	AirDays []string `json:"AirDays,omitempty"`
	Tags []string `json:"Tags,omitempty"`
	PrimaryImageAspectRatio NullableFloat64 `json:"PrimaryImageAspectRatio,omitempty"`
	Artists []string `json:"Artists,omitempty"`
	ArtistItems []NameIdPair `json:"ArtistItems,omitempty"`
	Album *string `json:"Album,omitempty"`
	CollectionType *string `json:"CollectionType,omitempty"`
	DisplayOrder *string `json:"DisplayOrder,omitempty"`
	AlbumId *string `json:"AlbumId,omitempty"`
	AlbumPrimaryImageTag *string `json:"AlbumPrimaryImageTag,omitempty"`
	SeriesPrimaryImageTag *string `json:"SeriesPrimaryImageTag,omitempty"`
	AlbumArtist *string `json:"AlbumArtist,omitempty"`
	AlbumArtists []NameIdPair `json:"AlbumArtists,omitempty"`
	SeasonName *string `json:"SeasonName,omitempty"`
	MediaStreams []MediaStream `json:"MediaStreams,omitempty"`
	PartCount NullableInt32 `json:"PartCount,omitempty"`
	ImageTags *map[string]string `json:"ImageTags,omitempty"`
	BackdropImageTags []string `json:"BackdropImageTags,omitempty"`
	ParentLogoImageTag *string `json:"ParentLogoImageTag,omitempty"`
	ParentArtItemId *string `json:"ParentArtItemId,omitempty"`
	ParentArtImageTag *string `json:"ParentArtImageTag,omitempty"`
	SeriesThumbImageTag *string `json:"SeriesThumbImageTag,omitempty"`
	SeriesStudio *string `json:"SeriesStudio,omitempty"`
	ParentThumbItemId *string `json:"ParentThumbItemId,omitempty"`
	ParentThumbImageTag *string `json:"ParentThumbImageTag,omitempty"`
	ParentPrimaryImageItemId *string `json:"ParentPrimaryImageItemId,omitempty"`
	ParentPrimaryImageTag *string `json:"ParentPrimaryImageTag,omitempty"`
	Chapters []ChapterInfo `json:"Chapters,omitempty"`
	LocationType *string `json:"LocationType,omitempty"`
	MediaType *string `json:"MediaType,omitempty"`
	EndDate NullableTime `json:"EndDate,omitempty"`
	LockedFields []string `json:"LockedFields,omitempty"`
	LockData NullableBool `json:"LockData,omitempty"`
	Width NullableInt32 `json:"Width,omitempty"`
	Height NullableInt32 `json:"Height,omitempty"`
	CameraMake *string `json:"CameraMake,omitempty"`
	CameraModel *string `json:"CameraModel,omitempty"`
	Software *string `json:"Software,omitempty"`
	ExposureTime NullableFloat64 `json:"ExposureTime,omitempty"`
	FocalLength NullableFloat64 `json:"FocalLength,omitempty"`
	ImageOrientation *string `json:"ImageOrientation,omitempty"`
	Aperture NullableFloat64 `json:"Aperture,omitempty"`
	ShutterSpeed NullableFloat64 `json:"ShutterSpeed,omitempty"`
	Latitude NullableFloat64 `json:"Latitude,omitempty"`
	Longitude NullableFloat64 `json:"Longitude,omitempty"`
	Altitude NullableFloat64 `json:"Altitude,omitempty"`
	IsoSpeedRating NullableInt32 `json:"IsoSpeedRating,omitempty"`
	SeriesTimerId *string `json:"SeriesTimerId,omitempty"`
	ChannelPrimaryImageTag *string `json:"ChannelPrimaryImageTag,omitempty"`
	StartDate NullableTime `json:"StartDate,omitempty"`
	CompletionPercentage NullableFloat64 `json:"CompletionPercentage,omitempty"`
	IsRepeat NullableBool `json:"IsRepeat,omitempty"`
	IsNew NullableBool `json:"IsNew,omitempty"`
	EpisodeTitle *string `json:"EpisodeTitle,omitempty"`
	IsMovie NullableBool `json:"IsMovie,omitempty"`
	IsSports NullableBool `json:"IsSports,omitempty"`
	IsSeries NullableBool `json:"IsSeries,omitempty"`
	IsLive NullableBool `json:"IsLive,omitempty"`
	IsNews NullableBool `json:"IsNews,omitempty"`
	IsKids NullableBool `json:"IsKids,omitempty"`
	IsPremiere NullableBool `json:"IsPremiere,omitempty"`
	TimerId *string `json:"TimerId,omitempty"`
	CurrentProgram *BaseItemDto `json:"CurrentProgram,omitempty"`
	MovieCount NullableInt32 `json:"MovieCount,omitempty"`
	SeriesCount NullableInt32 `json:"SeriesCount,omitempty"`
	AlbumCount NullableInt32 `json:"AlbumCount,omitempty"`
	SongCount NullableInt32 `json:"SongCount,omitempty"`
	MusicVideoCount NullableInt32 `json:"MusicVideoCount,omitempty"`
}

// NewBaseItemDto instantiates a new BaseItemDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseItemDto() *BaseItemDto {
	this := BaseItemDto{}
	return &this
}

// NewBaseItemDtoWithDefaults instantiates a new BaseItemDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseItemDtoWithDefaults() *BaseItemDto {
	this := BaseItemDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BaseItemDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BaseItemDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BaseItemDto) SetName(v string) {
	o.Name = &v
}

// GetOriginalTitle returns the OriginalTitle field value if set, zero value otherwise.
func (o *BaseItemDto) GetOriginalTitle() string {
	if o == nil || IsNil(o.OriginalTitle) {
		var ret string
		return ret
	}
	return *o.OriginalTitle
}

// GetOriginalTitleOk returns a tuple with the OriginalTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetOriginalTitleOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalTitle) {
		return nil, false
	}
	return o.OriginalTitle, true
}

// HasOriginalTitle returns a boolean if a field has been set.
func (o *BaseItemDto) HasOriginalTitle() bool {
	if o != nil && !IsNil(o.OriginalTitle) {
		return true
	}

	return false
}

// SetOriginalTitle gets a reference to the given string and assigns it to the OriginalTitle field.
func (o *BaseItemDto) SetOriginalTitle(v string) {
	o.OriginalTitle = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *BaseItemDto) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *BaseItemDto) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *BaseItemDto) SetServerId(v string) {
	o.ServerId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BaseItemDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BaseItemDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BaseItemDto) SetId(v string) {
	o.Id = &v
}

// GetEtag returns the Etag field value if set, zero value otherwise.
func (o *BaseItemDto) GetEtag() string {
	if o == nil || IsNil(o.Etag) {
		var ret string
		return ret
	}
	return *o.Etag
}

// GetEtagOk returns a tuple with the Etag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetEtagOk() (*string, bool) {
	if o == nil || IsNil(o.Etag) {
		return nil, false
	}
	return o.Etag, true
}

// HasEtag returns a boolean if a field has been set.
func (o *BaseItemDto) HasEtag() bool {
	if o != nil && !IsNil(o.Etag) {
		return true
	}

	return false
}

// SetEtag gets a reference to the given string and assigns it to the Etag field.
func (o *BaseItemDto) SetEtag(v string) {
	o.Etag = &v
}

// GetPlaylistItemId returns the PlaylistItemId field value if set, zero value otherwise.
func (o *BaseItemDto) GetPlaylistItemId() string {
	if o == nil || IsNil(o.PlaylistItemId) {
		var ret string
		return ret
	}
	return *o.PlaylistItemId
}

// GetPlaylistItemIdOk returns a tuple with the PlaylistItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetPlaylistItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlaylistItemId) {
		return nil, false
	}
	return o.PlaylistItemId, true
}

// HasPlaylistItemId returns a boolean if a field has been set.
func (o *BaseItemDto) HasPlaylistItemId() bool {
	if o != nil && !IsNil(o.PlaylistItemId) {
		return true
	}

	return false
}

// SetPlaylistItemId gets a reference to the given string and assigns it to the PlaylistItemId field.
func (o *BaseItemDto) SetPlaylistItemId(v string) {
	o.PlaylistItemId = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *BaseItemDto) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableTime and assigns it to the DateCreated field.
func (o *BaseItemDto) SetDateCreated(v time.Time) {
	o.DateCreated.Set(&v)
}
// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *BaseItemDto) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *BaseItemDto) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetExtraType returns the ExtraType field value if set, zero value otherwise.
func (o *BaseItemDto) GetExtraType() string {
	if o == nil || IsNil(o.ExtraType) {
		var ret string
		return ret
	}
	return *o.ExtraType
}

// GetExtraTypeOk returns a tuple with the ExtraType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetExtraTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraType) {
		return nil, false
	}
	return o.ExtraType, true
}

// HasExtraType returns a boolean if a field has been set.
func (o *BaseItemDto) HasExtraType() bool {
	if o != nil && !IsNil(o.ExtraType) {
		return true
	}

	return false
}

// SetExtraType gets a reference to the given string and assigns it to the ExtraType field.
func (o *BaseItemDto) SetExtraType(v string) {
	o.ExtraType = &v
}

// GetAirsBeforeSeasonNumber returns the AirsBeforeSeasonNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetAirsBeforeSeasonNumber() int32 {
	if o == nil || IsNil(o.AirsBeforeSeasonNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.AirsBeforeSeasonNumber.Get()
}

// GetAirsBeforeSeasonNumberOk returns a tuple with the AirsBeforeSeasonNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetAirsBeforeSeasonNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AirsBeforeSeasonNumber.Get(), o.AirsBeforeSeasonNumber.IsSet()
}

// HasAirsBeforeSeasonNumber returns a boolean if a field has been set.
func (o *BaseItemDto) HasAirsBeforeSeasonNumber() bool {
	if o != nil && o.AirsBeforeSeasonNumber.IsSet() {
		return true
	}

	return false
}

// SetAirsBeforeSeasonNumber gets a reference to the given NullableInt32 and assigns it to the AirsBeforeSeasonNumber field.
func (o *BaseItemDto) SetAirsBeforeSeasonNumber(v int32) {
	o.AirsBeforeSeasonNumber.Set(&v)
}
// SetAirsBeforeSeasonNumberNil sets the value for AirsBeforeSeasonNumber to be an explicit nil
func (o *BaseItemDto) SetAirsBeforeSeasonNumberNil() {
	o.AirsBeforeSeasonNumber.Set(nil)
}

// UnsetAirsBeforeSeasonNumber ensures that no value is present for AirsBeforeSeasonNumber, not even an explicit nil
func (o *BaseItemDto) UnsetAirsBeforeSeasonNumber() {
	o.AirsBeforeSeasonNumber.Unset()
}

// GetAirsAfterSeasonNumber returns the AirsAfterSeasonNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetAirsAfterSeasonNumber() int32 {
	if o == nil || IsNil(o.AirsAfterSeasonNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.AirsAfterSeasonNumber.Get()
}

// GetAirsAfterSeasonNumberOk returns a tuple with the AirsAfterSeasonNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetAirsAfterSeasonNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AirsAfterSeasonNumber.Get(), o.AirsAfterSeasonNumber.IsSet()
}

// HasAirsAfterSeasonNumber returns a boolean if a field has been set.
func (o *BaseItemDto) HasAirsAfterSeasonNumber() bool {
	if o != nil && o.AirsAfterSeasonNumber.IsSet() {
		return true
	}

	return false
}

// SetAirsAfterSeasonNumber gets a reference to the given NullableInt32 and assigns it to the AirsAfterSeasonNumber field.
func (o *BaseItemDto) SetAirsAfterSeasonNumber(v int32) {
	o.AirsAfterSeasonNumber.Set(&v)
}
// SetAirsAfterSeasonNumberNil sets the value for AirsAfterSeasonNumber to be an explicit nil
func (o *BaseItemDto) SetAirsAfterSeasonNumberNil() {
	o.AirsAfterSeasonNumber.Set(nil)
}

// UnsetAirsAfterSeasonNumber ensures that no value is present for AirsAfterSeasonNumber, not even an explicit nil
func (o *BaseItemDto) UnsetAirsAfterSeasonNumber() {
	o.AirsAfterSeasonNumber.Unset()
}

// GetAirsBeforeEpisodeNumber returns the AirsBeforeEpisodeNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetAirsBeforeEpisodeNumber() int32 {
	if o == nil || IsNil(o.AirsBeforeEpisodeNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.AirsBeforeEpisodeNumber.Get()
}

// GetAirsBeforeEpisodeNumberOk returns a tuple with the AirsBeforeEpisodeNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetAirsBeforeEpisodeNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AirsBeforeEpisodeNumber.Get(), o.AirsBeforeEpisodeNumber.IsSet()
}

// HasAirsBeforeEpisodeNumber returns a boolean if a field has been set.
func (o *BaseItemDto) HasAirsBeforeEpisodeNumber() bool {
	if o != nil && o.AirsBeforeEpisodeNumber.IsSet() {
		return true
	}

	return false
}

// SetAirsBeforeEpisodeNumber gets a reference to the given NullableInt32 and assigns it to the AirsBeforeEpisodeNumber field.
func (o *BaseItemDto) SetAirsBeforeEpisodeNumber(v int32) {
	o.AirsBeforeEpisodeNumber.Set(&v)
}
// SetAirsBeforeEpisodeNumberNil sets the value for AirsBeforeEpisodeNumber to be an explicit nil
func (o *BaseItemDto) SetAirsBeforeEpisodeNumberNil() {
	o.AirsBeforeEpisodeNumber.Set(nil)
}

// UnsetAirsBeforeEpisodeNumber ensures that no value is present for AirsBeforeEpisodeNumber, not even an explicit nil
func (o *BaseItemDto) UnsetAirsBeforeEpisodeNumber() {
	o.AirsBeforeEpisodeNumber.Unset()
}

// GetDisplaySpecialsWithSeasons returns the DisplaySpecialsWithSeasons field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetDisplaySpecialsWithSeasons() bool {
	if o == nil || IsNil(o.DisplaySpecialsWithSeasons.Get()) {
		var ret bool
		return ret
	}
	return *o.DisplaySpecialsWithSeasons.Get()
}

// GetDisplaySpecialsWithSeasonsOk returns a tuple with the DisplaySpecialsWithSeasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetDisplaySpecialsWithSeasonsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplaySpecialsWithSeasons.Get(), o.DisplaySpecialsWithSeasons.IsSet()
}

// HasDisplaySpecialsWithSeasons returns a boolean if a field has been set.
func (o *BaseItemDto) HasDisplaySpecialsWithSeasons() bool {
	if o != nil && o.DisplaySpecialsWithSeasons.IsSet() {
		return true
	}

	return false
}

// SetDisplaySpecialsWithSeasons gets a reference to the given NullableBool and assigns it to the DisplaySpecialsWithSeasons field.
func (o *BaseItemDto) SetDisplaySpecialsWithSeasons(v bool) {
	o.DisplaySpecialsWithSeasons.Set(&v)
}
// SetDisplaySpecialsWithSeasonsNil sets the value for DisplaySpecialsWithSeasons to be an explicit nil
func (o *BaseItemDto) SetDisplaySpecialsWithSeasonsNil() {
	o.DisplaySpecialsWithSeasons.Set(nil)
}

// UnsetDisplaySpecialsWithSeasons ensures that no value is present for DisplaySpecialsWithSeasons, not even an explicit nil
func (o *BaseItemDto) UnsetDisplaySpecialsWithSeasons() {
	o.DisplaySpecialsWithSeasons.Unset()
}

// GetCanDelete returns the CanDelete field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetCanDelete() bool {
	if o == nil || IsNil(o.CanDelete.Get()) {
		var ret bool
		return ret
	}
	return *o.CanDelete.Get()
}

// GetCanDeleteOk returns a tuple with the CanDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetCanDeleteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanDelete.Get(), o.CanDelete.IsSet()
}

// HasCanDelete returns a boolean if a field has been set.
func (o *BaseItemDto) HasCanDelete() bool {
	if o != nil && o.CanDelete.IsSet() {
		return true
	}

	return false
}

// SetCanDelete gets a reference to the given NullableBool and assigns it to the CanDelete field.
func (o *BaseItemDto) SetCanDelete(v bool) {
	o.CanDelete.Set(&v)
}
// SetCanDeleteNil sets the value for CanDelete to be an explicit nil
func (o *BaseItemDto) SetCanDeleteNil() {
	o.CanDelete.Set(nil)
}

// UnsetCanDelete ensures that no value is present for CanDelete, not even an explicit nil
func (o *BaseItemDto) UnsetCanDelete() {
	o.CanDelete.Unset()
}

// GetCanDownload returns the CanDownload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetCanDownload() bool {
	if o == nil || IsNil(o.CanDownload.Get()) {
		var ret bool
		return ret
	}
	return *o.CanDownload.Get()
}

// GetCanDownloadOk returns a tuple with the CanDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetCanDownloadOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanDownload.Get(), o.CanDownload.IsSet()
}

// HasCanDownload returns a boolean if a field has been set.
func (o *BaseItemDto) HasCanDownload() bool {
	if o != nil && o.CanDownload.IsSet() {
		return true
	}

	return false
}

// SetCanDownload gets a reference to the given NullableBool and assigns it to the CanDownload field.
func (o *BaseItemDto) SetCanDownload(v bool) {
	o.CanDownload.Set(&v)
}
// SetCanDownloadNil sets the value for CanDownload to be an explicit nil
func (o *BaseItemDto) SetCanDownloadNil() {
	o.CanDownload.Set(nil)
}

// UnsetCanDownload ensures that no value is present for CanDownload, not even an explicit nil
func (o *BaseItemDto) UnsetCanDownload() {
	o.CanDownload.Unset()
}

// GetHasSubtitles returns the HasSubtitles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetHasSubtitles() bool {
	if o == nil || IsNil(o.HasSubtitles.Get()) {
		var ret bool
		return ret
	}
	return *o.HasSubtitles.Get()
}

// GetHasSubtitlesOk returns a tuple with the HasSubtitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetHasSubtitlesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasSubtitles.Get(), o.HasSubtitles.IsSet()
}

// HasHasSubtitles returns a boolean if a field has been set.
func (o *BaseItemDto) HasHasSubtitles() bool {
	if o != nil && o.HasSubtitles.IsSet() {
		return true
	}

	return false
}

// SetHasSubtitles gets a reference to the given NullableBool and assigns it to the HasSubtitles field.
func (o *BaseItemDto) SetHasSubtitles(v bool) {
	o.HasSubtitles.Set(&v)
}
// SetHasSubtitlesNil sets the value for HasSubtitles to be an explicit nil
func (o *BaseItemDto) SetHasSubtitlesNil() {
	o.HasSubtitles.Set(nil)
}

// UnsetHasSubtitles ensures that no value is present for HasSubtitles, not even an explicit nil
func (o *BaseItemDto) UnsetHasSubtitles() {
	o.HasSubtitles.Unset()
}

// GetSupportsResume returns the SupportsResume field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetSupportsResume() bool {
	if o == nil || IsNil(o.SupportsResume.Get()) {
		var ret bool
		return ret
	}
	return *o.SupportsResume.Get()
}

// GetSupportsResumeOk returns a tuple with the SupportsResume field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetSupportsResumeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportsResume.Get(), o.SupportsResume.IsSet()
}

// HasSupportsResume returns a boolean if a field has been set.
func (o *BaseItemDto) HasSupportsResume() bool {
	if o != nil && o.SupportsResume.IsSet() {
		return true
	}

	return false
}

// SetSupportsResume gets a reference to the given NullableBool and assigns it to the SupportsResume field.
func (o *BaseItemDto) SetSupportsResume(v bool) {
	o.SupportsResume.Set(&v)
}
// SetSupportsResumeNil sets the value for SupportsResume to be an explicit nil
func (o *BaseItemDto) SetSupportsResumeNil() {
	o.SupportsResume.Set(nil)
}

// UnsetSupportsResume ensures that no value is present for SupportsResume, not even an explicit nil
func (o *BaseItemDto) UnsetSupportsResume() {
	o.SupportsResume.Unset()
}

// GetPreferredMetadataLanguage returns the PreferredMetadataLanguage field value if set, zero value otherwise.
func (o *BaseItemDto) GetPreferredMetadataLanguage() string {
	if o == nil || IsNil(o.PreferredMetadataLanguage) {
		var ret string
		return ret
	}
	return *o.PreferredMetadataLanguage
}

// GetPreferredMetadataLanguageOk returns a tuple with the PreferredMetadataLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetPreferredMetadataLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredMetadataLanguage) {
		return nil, false
	}
	return o.PreferredMetadataLanguage, true
}

// HasPreferredMetadataLanguage returns a boolean if a field has been set.
func (o *BaseItemDto) HasPreferredMetadataLanguage() bool {
	if o != nil && !IsNil(o.PreferredMetadataLanguage) {
		return true
	}

	return false
}

// SetPreferredMetadataLanguage gets a reference to the given string and assigns it to the PreferredMetadataLanguage field.
func (o *BaseItemDto) SetPreferredMetadataLanguage(v string) {
	o.PreferredMetadataLanguage = &v
}

// GetPreferredMetadataCountryCode returns the PreferredMetadataCountryCode field value if set, zero value otherwise.
func (o *BaseItemDto) GetPreferredMetadataCountryCode() string {
	if o == nil || IsNil(o.PreferredMetadataCountryCode) {
		var ret string
		return ret
	}
	return *o.PreferredMetadataCountryCode
}

// GetPreferredMetadataCountryCodeOk returns a tuple with the PreferredMetadataCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetPreferredMetadataCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredMetadataCountryCode) {
		return nil, false
	}
	return o.PreferredMetadataCountryCode, true
}

// HasPreferredMetadataCountryCode returns a boolean if a field has been set.
func (o *BaseItemDto) HasPreferredMetadataCountryCode() bool {
	if o != nil && !IsNil(o.PreferredMetadataCountryCode) {
		return true
	}

	return false
}

// SetPreferredMetadataCountryCode gets a reference to the given string and assigns it to the PreferredMetadataCountryCode field.
func (o *BaseItemDto) SetPreferredMetadataCountryCode(v string) {
	o.PreferredMetadataCountryCode = &v
}

// GetSupportsSync returns the SupportsSync field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetSupportsSync() bool {
	if o == nil || IsNil(o.SupportsSync.Get()) {
		var ret bool
		return ret
	}
	return *o.SupportsSync.Get()
}

// GetSupportsSyncOk returns a tuple with the SupportsSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetSupportsSyncOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportsSync.Get(), o.SupportsSync.IsSet()
}

// HasSupportsSync returns a boolean if a field has been set.
func (o *BaseItemDto) HasSupportsSync() bool {
	if o != nil && o.SupportsSync.IsSet() {
		return true
	}

	return false
}

// SetSupportsSync gets a reference to the given NullableBool and assigns it to the SupportsSync field.
func (o *BaseItemDto) SetSupportsSync(v bool) {
	o.SupportsSync.Set(&v)
}
// SetSupportsSyncNil sets the value for SupportsSync to be an explicit nil
func (o *BaseItemDto) SetSupportsSyncNil() {
	o.SupportsSync.Set(nil)
}

// UnsetSupportsSync ensures that no value is present for SupportsSync, not even an explicit nil
func (o *BaseItemDto) UnsetSupportsSync() {
	o.SupportsSync.Unset()
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *BaseItemDto) GetContainer() string {
	if o == nil || IsNil(o.Container) {
		var ret string
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetContainerOk() (*string, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *BaseItemDto) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given string and assigns it to the Container field.
func (o *BaseItemDto) SetContainer(v string) {
	o.Container = &v
}

// GetSortName returns the SortName field value if set, zero value otherwise.
func (o *BaseItemDto) GetSortName() string {
	if o == nil || IsNil(o.SortName) {
		var ret string
		return ret
	}
	return *o.SortName
}

// GetSortNameOk returns a tuple with the SortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetSortNameOk() (*string, bool) {
	if o == nil || IsNil(o.SortName) {
		return nil, false
	}
	return o.SortName, true
}

// HasSortName returns a boolean if a field has been set.
func (o *BaseItemDto) HasSortName() bool {
	if o != nil && !IsNil(o.SortName) {
		return true
	}

	return false
}

// SetSortName gets a reference to the given string and assigns it to the SortName field.
func (o *BaseItemDto) SetSortName(v string) {
	o.SortName = &v
}

// GetForcedSortName returns the ForcedSortName field value if set, zero value otherwise.
func (o *BaseItemDto) GetForcedSortName() string {
	if o == nil || IsNil(o.ForcedSortName) {
		var ret string
		return ret
	}
	return *o.ForcedSortName
}

// GetForcedSortNameOk returns a tuple with the ForcedSortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetForcedSortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ForcedSortName) {
		return nil, false
	}
	return o.ForcedSortName, true
}

// HasForcedSortName returns a boolean if a field has been set.
func (o *BaseItemDto) HasForcedSortName() bool {
	if o != nil && !IsNil(o.ForcedSortName) {
		return true
	}

	return false
}

// SetForcedSortName gets a reference to the given string and assigns it to the ForcedSortName field.
func (o *BaseItemDto) SetForcedSortName(v string) {
	o.ForcedSortName = &v
}

// GetVideo3DFormat returns the Video3DFormat field value if set, zero value otherwise.
func (o *BaseItemDto) GetVideo3DFormat() string {
	if o == nil || IsNil(o.Video3DFormat) {
		var ret string
		return ret
	}
	return *o.Video3DFormat
}

// GetVideo3DFormatOk returns a tuple with the Video3DFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetVideo3DFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Video3DFormat) {
		return nil, false
	}
	return o.Video3DFormat, true
}

// HasVideo3DFormat returns a boolean if a field has been set.
func (o *BaseItemDto) HasVideo3DFormat() bool {
	if o != nil && !IsNil(o.Video3DFormat) {
		return true
	}

	return false
}

// SetVideo3DFormat gets a reference to the given string and assigns it to the Video3DFormat field.
func (o *BaseItemDto) SetVideo3DFormat(v string) {
	o.Video3DFormat = &v
}

// GetPremiereDate returns the PremiereDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetPremiereDate() time.Time {
	if o == nil || IsNil(o.PremiereDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PremiereDate.Get()
}

// GetPremiereDateOk returns a tuple with the PremiereDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetPremiereDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PremiereDate.Get(), o.PremiereDate.IsSet()
}

// HasPremiereDate returns a boolean if a field has been set.
func (o *BaseItemDto) HasPremiereDate() bool {
	if o != nil && o.PremiereDate.IsSet() {
		return true
	}

	return false
}

// SetPremiereDate gets a reference to the given NullableTime and assigns it to the PremiereDate field.
func (o *BaseItemDto) SetPremiereDate(v time.Time) {
	o.PremiereDate.Set(&v)
}
// SetPremiereDateNil sets the value for PremiereDate to be an explicit nil
func (o *BaseItemDto) SetPremiereDateNil() {
	o.PremiereDate.Set(nil)
}

// UnsetPremiereDate ensures that no value is present for PremiereDate, not even an explicit nil
func (o *BaseItemDto) UnsetPremiereDate() {
	o.PremiereDate.Unset()
}

// GetExternalUrls returns the ExternalUrls field value if set, zero value otherwise.
func (o *BaseItemDto) GetExternalUrls() []ExternalUrl {
	if o == nil || IsNil(o.ExternalUrls) {
		var ret []ExternalUrl
		return ret
	}
	return o.ExternalUrls
}

// GetExternalUrlsOk returns a tuple with the ExternalUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetExternalUrlsOk() ([]ExternalUrl, bool) {
	if o == nil || IsNil(o.ExternalUrls) {
		return nil, false
	}
	return o.ExternalUrls, true
}

// HasExternalUrls returns a boolean if a field has been set.
func (o *BaseItemDto) HasExternalUrls() bool {
	if o != nil && !IsNil(o.ExternalUrls) {
		return true
	}

	return false
}

// SetExternalUrls gets a reference to the given []ExternalUrl and assigns it to the ExternalUrls field.
func (o *BaseItemDto) SetExternalUrls(v []ExternalUrl) {
	o.ExternalUrls = v
}

// GetMediaSources returns the MediaSources field value if set, zero value otherwise.
func (o *BaseItemDto) GetMediaSources() []MediaSourceInfo {
	if o == nil || IsNil(o.MediaSources) {
		var ret []MediaSourceInfo
		return ret
	}
	return o.MediaSources
}

// GetMediaSourcesOk returns a tuple with the MediaSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetMediaSourcesOk() ([]MediaSourceInfo, bool) {
	if o == nil || IsNil(o.MediaSources) {
		return nil, false
	}
	return o.MediaSources, true
}

// HasMediaSources returns a boolean if a field has been set.
func (o *BaseItemDto) HasMediaSources() bool {
	if o != nil && !IsNil(o.MediaSources) {
		return true
	}

	return false
}

// SetMediaSources gets a reference to the given []MediaSourceInfo and assigns it to the MediaSources field.
func (o *BaseItemDto) SetMediaSources(v []MediaSourceInfo) {
	o.MediaSources = v
}

// GetCriticRating returns the CriticRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetCriticRating() float32 {
	if o == nil || IsNil(o.CriticRating.Get()) {
		var ret float32
		return ret
	}
	return *o.CriticRating.Get()
}

// GetCriticRatingOk returns a tuple with the CriticRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetCriticRatingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CriticRating.Get(), o.CriticRating.IsSet()
}

// HasCriticRating returns a boolean if a field has been set.
func (o *BaseItemDto) HasCriticRating() bool {
	if o != nil && o.CriticRating.IsSet() {
		return true
	}

	return false
}

// SetCriticRating gets a reference to the given NullableFloat32 and assigns it to the CriticRating field.
func (o *BaseItemDto) SetCriticRating(v float32) {
	o.CriticRating.Set(&v)
}
// SetCriticRatingNil sets the value for CriticRating to be an explicit nil
func (o *BaseItemDto) SetCriticRatingNil() {
	o.CriticRating.Set(nil)
}

// UnsetCriticRating ensures that no value is present for CriticRating, not even an explicit nil
func (o *BaseItemDto) UnsetCriticRating() {
	o.CriticRating.Unset()
}

// GetGameSystemId returns the GameSystemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetGameSystemId() int64 {
	if o == nil || IsNil(o.GameSystemId.Get()) {
		var ret int64
		return ret
	}
	return *o.GameSystemId.Get()
}

// GetGameSystemIdOk returns a tuple with the GameSystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetGameSystemIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.GameSystemId.Get(), o.GameSystemId.IsSet()
}

// HasGameSystemId returns a boolean if a field has been set.
func (o *BaseItemDto) HasGameSystemId() bool {
	if o != nil && o.GameSystemId.IsSet() {
		return true
	}

	return false
}

// SetGameSystemId gets a reference to the given NullableInt64 and assigns it to the GameSystemId field.
func (o *BaseItemDto) SetGameSystemId(v int64) {
	o.GameSystemId.Set(&v)
}
// SetGameSystemIdNil sets the value for GameSystemId to be an explicit nil
func (o *BaseItemDto) SetGameSystemIdNil() {
	o.GameSystemId.Set(nil)
}

// UnsetGameSystemId ensures that no value is present for GameSystemId, not even an explicit nil
func (o *BaseItemDto) UnsetGameSystemId() {
	o.GameSystemId.Unset()
}

// GetGameSystem returns the GameSystem field value if set, zero value otherwise.
func (o *BaseItemDto) GetGameSystem() string {
	if o == nil || IsNil(o.GameSystem) {
		var ret string
		return ret
	}
	return *o.GameSystem
}

// GetGameSystemOk returns a tuple with the GameSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetGameSystemOk() (*string, bool) {
	if o == nil || IsNil(o.GameSystem) {
		return nil, false
	}
	return o.GameSystem, true
}

// HasGameSystem returns a boolean if a field has been set.
func (o *BaseItemDto) HasGameSystem() bool {
	if o != nil && !IsNil(o.GameSystem) {
		return true
	}

	return false
}

// SetGameSystem gets a reference to the given string and assigns it to the GameSystem field.
func (o *BaseItemDto) SetGameSystem(v string) {
	o.GameSystem = &v
}

// GetProductionLocations returns the ProductionLocations field value if set, zero value otherwise.
func (o *BaseItemDto) GetProductionLocations() []string {
	if o == nil || IsNil(o.ProductionLocations) {
		var ret []string
		return ret
	}
	return o.ProductionLocations
}

// GetProductionLocationsOk returns a tuple with the ProductionLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetProductionLocationsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProductionLocations) {
		return nil, false
	}
	return o.ProductionLocations, true
}

// HasProductionLocations returns a boolean if a field has been set.
func (o *BaseItemDto) HasProductionLocations() bool {
	if o != nil && !IsNil(o.ProductionLocations) {
		return true
	}

	return false
}

// SetProductionLocations gets a reference to the given []string and assigns it to the ProductionLocations field.
func (o *BaseItemDto) SetProductionLocations(v []string) {
	o.ProductionLocations = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *BaseItemDto) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *BaseItemDto) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *BaseItemDto) SetPath(v string) {
	o.Path = &v
}

// GetOfficialRating returns the OfficialRating field value if set, zero value otherwise.
func (o *BaseItemDto) GetOfficialRating() string {
	if o == nil || IsNil(o.OfficialRating) {
		var ret string
		return ret
	}
	return *o.OfficialRating
}

// GetOfficialRatingOk returns a tuple with the OfficialRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetOfficialRatingOk() (*string, bool) {
	if o == nil || IsNil(o.OfficialRating) {
		return nil, false
	}
	return o.OfficialRating, true
}

// HasOfficialRating returns a boolean if a field has been set.
func (o *BaseItemDto) HasOfficialRating() bool {
	if o != nil && !IsNil(o.OfficialRating) {
		return true
	}

	return false
}

// SetOfficialRating gets a reference to the given string and assigns it to the OfficialRating field.
func (o *BaseItemDto) SetOfficialRating(v string) {
	o.OfficialRating = &v
}

// GetCustomRating returns the CustomRating field value if set, zero value otherwise.
func (o *BaseItemDto) GetCustomRating() string {
	if o == nil || IsNil(o.CustomRating) {
		var ret string
		return ret
	}
	return *o.CustomRating
}

// GetCustomRatingOk returns a tuple with the CustomRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetCustomRatingOk() (*string, bool) {
	if o == nil || IsNil(o.CustomRating) {
		return nil, false
	}
	return o.CustomRating, true
}

// HasCustomRating returns a boolean if a field has been set.
func (o *BaseItemDto) HasCustomRating() bool {
	if o != nil && !IsNil(o.CustomRating) {
		return true
	}

	return false
}

// SetCustomRating gets a reference to the given string and assigns it to the CustomRating field.
func (o *BaseItemDto) SetCustomRating(v string) {
	o.CustomRating = &v
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *BaseItemDto) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId) {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *BaseItemDto) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *BaseItemDto) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise.
func (o *BaseItemDto) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName) {
		var ret string
		return ret
	}
	return *o.ChannelName
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetChannelNameOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelName) {
		return nil, false
	}
	return o.ChannelName, true
}

// HasChannelName returns a boolean if a field has been set.
func (o *BaseItemDto) HasChannelName() bool {
	if o != nil && !IsNil(o.ChannelName) {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given string and assigns it to the ChannelName field.
func (o *BaseItemDto) SetChannelName(v string) {
	o.ChannelName = &v
}

// GetOverview returns the Overview field value if set, zero value otherwise.
func (o *BaseItemDto) GetOverview() string {
	if o == nil || IsNil(o.Overview) {
		var ret string
		return ret
	}
	return *o.Overview
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetOverviewOk() (*string, bool) {
	if o == nil || IsNil(o.Overview) {
		return nil, false
	}
	return o.Overview, true
}

// HasOverview returns a boolean if a field has been set.
func (o *BaseItemDto) HasOverview() bool {
	if o != nil && !IsNil(o.Overview) {
		return true
	}

	return false
}

// SetOverview gets a reference to the given string and assigns it to the Overview field.
func (o *BaseItemDto) SetOverview(v string) {
	o.Overview = &v
}

// GetTaglines returns the Taglines field value if set, zero value otherwise.
func (o *BaseItemDto) GetTaglines() []string {
	if o == nil || IsNil(o.Taglines) {
		var ret []string
		return ret
	}
	return o.Taglines
}

// GetTaglinesOk returns a tuple with the Taglines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetTaglinesOk() ([]string, bool) {
	if o == nil || IsNil(o.Taglines) {
		return nil, false
	}
	return o.Taglines, true
}

// HasTaglines returns a boolean if a field has been set.
func (o *BaseItemDto) HasTaglines() bool {
	if o != nil && !IsNil(o.Taglines) {
		return true
	}

	return false
}

// SetTaglines gets a reference to the given []string and assigns it to the Taglines field.
func (o *BaseItemDto) SetTaglines(v []string) {
	o.Taglines = v
}

// GetGenres returns the Genres field value if set, zero value otherwise.
func (o *BaseItemDto) GetGenres() []string {
	if o == nil || IsNil(o.Genres) {
		var ret []string
		return ret
	}
	return o.Genres
}

// GetGenresOk returns a tuple with the Genres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetGenresOk() ([]string, bool) {
	if o == nil || IsNil(o.Genres) {
		return nil, false
	}
	return o.Genres, true
}

// HasGenres returns a boolean if a field has been set.
func (o *BaseItemDto) HasGenres() bool {
	if o != nil && !IsNil(o.Genres) {
		return true
	}

	return false
}

// SetGenres gets a reference to the given []string and assigns it to the Genres field.
func (o *BaseItemDto) SetGenres(v []string) {
	o.Genres = v
}

// GetCommunityRating returns the CommunityRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetCommunityRating() float32 {
	if o == nil || IsNil(o.CommunityRating.Get()) {
		var ret float32
		return ret
	}
	return *o.CommunityRating.Get()
}

// GetCommunityRatingOk returns a tuple with the CommunityRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetCommunityRatingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommunityRating.Get(), o.CommunityRating.IsSet()
}

// HasCommunityRating returns a boolean if a field has been set.
func (o *BaseItemDto) HasCommunityRating() bool {
	if o != nil && o.CommunityRating.IsSet() {
		return true
	}

	return false
}

// SetCommunityRating gets a reference to the given NullableFloat32 and assigns it to the CommunityRating field.
func (o *BaseItemDto) SetCommunityRating(v float32) {
	o.CommunityRating.Set(&v)
}
// SetCommunityRatingNil sets the value for CommunityRating to be an explicit nil
func (o *BaseItemDto) SetCommunityRatingNil() {
	o.CommunityRating.Set(nil)
}

// UnsetCommunityRating ensures that no value is present for CommunityRating, not even an explicit nil
func (o *BaseItemDto) UnsetCommunityRating() {
	o.CommunityRating.Unset()
}

// GetRunTimeTicks returns the RunTimeTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetRunTimeTicks() int64 {
	if o == nil || IsNil(o.RunTimeTicks.Get()) {
		var ret int64
		return ret
	}
	return *o.RunTimeTicks.Get()
}

// GetRunTimeTicksOk returns a tuple with the RunTimeTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetRunTimeTicksOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunTimeTicks.Get(), o.RunTimeTicks.IsSet()
}

// HasRunTimeTicks returns a boolean if a field has been set.
func (o *BaseItemDto) HasRunTimeTicks() bool {
	if o != nil && o.RunTimeTicks.IsSet() {
		return true
	}

	return false
}

// SetRunTimeTicks gets a reference to the given NullableInt64 and assigns it to the RunTimeTicks field.
func (o *BaseItemDto) SetRunTimeTicks(v int64) {
	o.RunTimeTicks.Set(&v)
}
// SetRunTimeTicksNil sets the value for RunTimeTicks to be an explicit nil
func (o *BaseItemDto) SetRunTimeTicksNil() {
	o.RunTimeTicks.Set(nil)
}

// UnsetRunTimeTicks ensures that no value is present for RunTimeTicks, not even an explicit nil
func (o *BaseItemDto) UnsetRunTimeTicks() {
	o.RunTimeTicks.Unset()
}

// GetPlayAccess returns the PlayAccess field value if set, zero value otherwise.
func (o *BaseItemDto) GetPlayAccess() string {
	if o == nil || IsNil(o.PlayAccess) {
		var ret string
		return ret
	}
	return *o.PlayAccess
}

// GetPlayAccessOk returns a tuple with the PlayAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetPlayAccessOk() (*string, bool) {
	if o == nil || IsNil(o.PlayAccess) {
		return nil, false
	}
	return o.PlayAccess, true
}

// HasPlayAccess returns a boolean if a field has been set.
func (o *BaseItemDto) HasPlayAccess() bool {
	if o != nil && !IsNil(o.PlayAccess) {
		return true
	}

	return false
}

// SetPlayAccess gets a reference to the given string and assigns it to the PlayAccess field.
func (o *BaseItemDto) SetPlayAccess(v string) {
	o.PlayAccess = &v
}

// GetAspectRatio returns the AspectRatio field value if set, zero value otherwise.
func (o *BaseItemDto) GetAspectRatio() string {
	if o == nil || IsNil(o.AspectRatio) {
		var ret string
		return ret
	}
	return *o.AspectRatio
}

// GetAspectRatioOk returns a tuple with the AspectRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetAspectRatioOk() (*string, bool) {
	if o == nil || IsNil(o.AspectRatio) {
		return nil, false
	}
	return o.AspectRatio, true
}

// HasAspectRatio returns a boolean if a field has been set.
func (o *BaseItemDto) HasAspectRatio() bool {
	if o != nil && !IsNil(o.AspectRatio) {
		return true
	}

	return false
}

// SetAspectRatio gets a reference to the given string and assigns it to the AspectRatio field.
func (o *BaseItemDto) SetAspectRatio(v string) {
	o.AspectRatio = &v
}

// GetProductionYear returns the ProductionYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetProductionYear() int32 {
	if o == nil || IsNil(o.ProductionYear.Get()) {
		var ret int32
		return ret
	}
	return *o.ProductionYear.Get()
}

// GetProductionYearOk returns a tuple with the ProductionYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetProductionYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductionYear.Get(), o.ProductionYear.IsSet()
}

// HasProductionYear returns a boolean if a field has been set.
func (o *BaseItemDto) HasProductionYear() bool {
	if o != nil && o.ProductionYear.IsSet() {
		return true
	}

	return false
}

// SetProductionYear gets a reference to the given NullableInt32 and assigns it to the ProductionYear field.
func (o *BaseItemDto) SetProductionYear(v int32) {
	o.ProductionYear.Set(&v)
}
// SetProductionYearNil sets the value for ProductionYear to be an explicit nil
func (o *BaseItemDto) SetProductionYearNil() {
	o.ProductionYear.Set(nil)
}

// UnsetProductionYear ensures that no value is present for ProductionYear, not even an explicit nil
func (o *BaseItemDto) UnsetProductionYear() {
	o.ProductionYear.Unset()
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *BaseItemDto) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *BaseItemDto) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *BaseItemDto) SetNumber(v string) {
	o.Number = &v
}

// GetChannelNumber returns the ChannelNumber field value if set, zero value otherwise.
func (o *BaseItemDto) GetChannelNumber() string {
	if o == nil || IsNil(o.ChannelNumber) {
		var ret string
		return ret
	}
	return *o.ChannelNumber
}

// GetChannelNumberOk returns a tuple with the ChannelNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetChannelNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelNumber) {
		return nil, false
	}
	return o.ChannelNumber, true
}

// HasChannelNumber returns a boolean if a field has been set.
func (o *BaseItemDto) HasChannelNumber() bool {
	if o != nil && !IsNil(o.ChannelNumber) {
		return true
	}

	return false
}

// SetChannelNumber gets a reference to the given string and assigns it to the ChannelNumber field.
func (o *BaseItemDto) SetChannelNumber(v string) {
	o.ChannelNumber = &v
}

// GetIndexNumber returns the IndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetIndexNumber() int32 {
	if o == nil || IsNil(o.IndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.IndexNumber.Get()
}

// GetIndexNumberOk returns a tuple with the IndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexNumber.Get(), o.IndexNumber.IsSet()
}

// HasIndexNumber returns a boolean if a field has been set.
func (o *BaseItemDto) HasIndexNumber() bool {
	if o != nil && o.IndexNumber.IsSet() {
		return true
	}

	return false
}

// SetIndexNumber gets a reference to the given NullableInt32 and assigns it to the IndexNumber field.
func (o *BaseItemDto) SetIndexNumber(v int32) {
	o.IndexNumber.Set(&v)
}
// SetIndexNumberNil sets the value for IndexNumber to be an explicit nil
func (o *BaseItemDto) SetIndexNumberNil() {
	o.IndexNumber.Set(nil)
}

// UnsetIndexNumber ensures that no value is present for IndexNumber, not even an explicit nil
func (o *BaseItemDto) UnsetIndexNumber() {
	o.IndexNumber.Unset()
}

// GetIndexNumberEnd returns the IndexNumberEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetIndexNumberEnd() int32 {
	if o == nil || IsNil(o.IndexNumberEnd.Get()) {
		var ret int32
		return ret
	}
	return *o.IndexNumberEnd.Get()
}

// GetIndexNumberEndOk returns a tuple with the IndexNumberEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetIndexNumberEndOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexNumberEnd.Get(), o.IndexNumberEnd.IsSet()
}

// HasIndexNumberEnd returns a boolean if a field has been set.
func (o *BaseItemDto) HasIndexNumberEnd() bool {
	if o != nil && o.IndexNumberEnd.IsSet() {
		return true
	}

	return false
}

// SetIndexNumberEnd gets a reference to the given NullableInt32 and assigns it to the IndexNumberEnd field.
func (o *BaseItemDto) SetIndexNumberEnd(v int32) {
	o.IndexNumberEnd.Set(&v)
}
// SetIndexNumberEndNil sets the value for IndexNumberEnd to be an explicit nil
func (o *BaseItemDto) SetIndexNumberEndNil() {
	o.IndexNumberEnd.Set(nil)
}

// UnsetIndexNumberEnd ensures that no value is present for IndexNumberEnd, not even an explicit nil
func (o *BaseItemDto) UnsetIndexNumberEnd() {
	o.IndexNumberEnd.Unset()
}

// GetParentIndexNumber returns the ParentIndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetParentIndexNumber() int32 {
	if o == nil || IsNil(o.ParentIndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentIndexNumber.Get()
}

// GetParentIndexNumberOk returns a tuple with the ParentIndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetParentIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentIndexNumber.Get(), o.ParentIndexNumber.IsSet()
}

// HasParentIndexNumber returns a boolean if a field has been set.
func (o *BaseItemDto) HasParentIndexNumber() bool {
	if o != nil && o.ParentIndexNumber.IsSet() {
		return true
	}

	return false
}

// SetParentIndexNumber gets a reference to the given NullableInt32 and assigns it to the ParentIndexNumber field.
func (o *BaseItemDto) SetParentIndexNumber(v int32) {
	o.ParentIndexNumber.Set(&v)
}
// SetParentIndexNumberNil sets the value for ParentIndexNumber to be an explicit nil
func (o *BaseItemDto) SetParentIndexNumberNil() {
	o.ParentIndexNumber.Set(nil)
}

// UnsetParentIndexNumber ensures that no value is present for ParentIndexNumber, not even an explicit nil
func (o *BaseItemDto) UnsetParentIndexNumber() {
	o.ParentIndexNumber.Unset()
}

// GetRemoteTrailers returns the RemoteTrailers field value if set, zero value otherwise.
func (o *BaseItemDto) GetRemoteTrailers() []MediaUrl {
	if o == nil || IsNil(o.RemoteTrailers) {
		var ret []MediaUrl
		return ret
	}
	return o.RemoteTrailers
}

// GetRemoteTrailersOk returns a tuple with the RemoteTrailers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetRemoteTrailersOk() ([]MediaUrl, bool) {
	if o == nil || IsNil(o.RemoteTrailers) {
		return nil, false
	}
	return o.RemoteTrailers, true
}

// HasRemoteTrailers returns a boolean if a field has been set.
func (o *BaseItemDto) HasRemoteTrailers() bool {
	if o != nil && !IsNil(o.RemoteTrailers) {
		return true
	}

	return false
}

// SetRemoteTrailers gets a reference to the given []MediaUrl and assigns it to the RemoteTrailers field.
func (o *BaseItemDto) SetRemoteTrailers(v []MediaUrl) {
	o.RemoteTrailers = v
}

// GetProviderIds returns the ProviderIds field value if set, zero value otherwise.
func (o *BaseItemDto) GetProviderIds() map[string]string {
	if o == nil || IsNil(o.ProviderIds) {
		var ret map[string]string
		return ret
	}
	return *o.ProviderIds
}

// GetProviderIdsOk returns a tuple with the ProviderIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetProviderIdsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ProviderIds) {
		return nil, false
	}
	return o.ProviderIds, true
}

// HasProviderIds returns a boolean if a field has been set.
func (o *BaseItemDto) HasProviderIds() bool {
	if o != nil && !IsNil(o.ProviderIds) {
		return true
	}

	return false
}

// SetProviderIds gets a reference to the given map[string]string and assigns it to the ProviderIds field.
func (o *BaseItemDto) SetProviderIds(v map[string]string) {
	o.ProviderIds = &v
}

// GetIsFolder returns the IsFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetIsFolder() bool {
	if o == nil || IsNil(o.IsFolder.Get()) {
		var ret bool
		return ret
	}
	return *o.IsFolder.Get()
}

// GetIsFolderOk returns a tuple with the IsFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetIsFolderOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsFolder.Get(), o.IsFolder.IsSet()
}

// HasIsFolder returns a boolean if a field has been set.
func (o *BaseItemDto) HasIsFolder() bool {
	if o != nil && o.IsFolder.IsSet() {
		return true
	}

	return false
}

// SetIsFolder gets a reference to the given NullableBool and assigns it to the IsFolder field.
func (o *BaseItemDto) SetIsFolder(v bool) {
	o.IsFolder.Set(&v)
}
// SetIsFolderNil sets the value for IsFolder to be an explicit nil
func (o *BaseItemDto) SetIsFolderNil() {
	o.IsFolder.Set(nil)
}

// UnsetIsFolder ensures that no value is present for IsFolder, not even an explicit nil
func (o *BaseItemDto) UnsetIsFolder() {
	o.IsFolder.Unset()
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *BaseItemDto) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *BaseItemDto) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *BaseItemDto) SetParentId(v string) {
	o.ParentId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BaseItemDto) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BaseItemDto) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BaseItemDto) SetType(v string) {
	o.Type = &v
}

// GetPeople returns the People field value if set, zero value otherwise.
func (o *BaseItemDto) GetPeople() []BaseItemPerson {
	if o == nil || IsNil(o.People) {
		var ret []BaseItemPerson
		return ret
	}
	return o.People
}

// GetPeopleOk returns a tuple with the People field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetPeopleOk() ([]BaseItemPerson, bool) {
	if o == nil || IsNil(o.People) {
		return nil, false
	}
	return o.People, true
}

// HasPeople returns a boolean if a field has been set.
func (o *BaseItemDto) HasPeople() bool {
	if o != nil && !IsNil(o.People) {
		return true
	}

	return false
}

// SetPeople gets a reference to the given []BaseItemPerson and assigns it to the People field.
func (o *BaseItemDto) SetPeople(v []BaseItemPerson) {
	o.People = v
}

// GetStudios returns the Studios field value if set, zero value otherwise.
func (o *BaseItemDto) GetStudios() []NameLongIdPair {
	if o == nil || IsNil(o.Studios) {
		var ret []NameLongIdPair
		return ret
	}
	return o.Studios
}

// GetStudiosOk returns a tuple with the Studios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetStudiosOk() ([]NameLongIdPair, bool) {
	if o == nil || IsNil(o.Studios) {
		return nil, false
	}
	return o.Studios, true
}

// HasStudios returns a boolean if a field has been set.
func (o *BaseItemDto) HasStudios() bool {
	if o != nil && !IsNil(o.Studios) {
		return true
	}

	return false
}

// SetStudios gets a reference to the given []NameLongIdPair and assigns it to the Studios field.
func (o *BaseItemDto) SetStudios(v []NameLongIdPair) {
	o.Studios = v
}

// GetGenreItems returns the GenreItems field value if set, zero value otherwise.
func (o *BaseItemDto) GetGenreItems() []NameLongIdPair {
	if o == nil || IsNil(o.GenreItems) {
		var ret []NameLongIdPair
		return ret
	}
	return o.GenreItems
}

// GetGenreItemsOk returns a tuple with the GenreItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetGenreItemsOk() ([]NameLongIdPair, bool) {
	if o == nil || IsNil(o.GenreItems) {
		return nil, false
	}
	return o.GenreItems, true
}

// HasGenreItems returns a boolean if a field has been set.
func (o *BaseItemDto) HasGenreItems() bool {
	if o != nil && !IsNil(o.GenreItems) {
		return true
	}

	return false
}

// SetGenreItems gets a reference to the given []NameLongIdPair and assigns it to the GenreItems field.
func (o *BaseItemDto) SetGenreItems(v []NameLongIdPair) {
	o.GenreItems = v
}

// GetParentLogoItemId returns the ParentLogoItemId field value if set, zero value otherwise.
func (o *BaseItemDto) GetParentLogoItemId() string {
	if o == nil || IsNil(o.ParentLogoItemId) {
		var ret string
		return ret
	}
	return *o.ParentLogoItemId
}

// GetParentLogoItemIdOk returns a tuple with the ParentLogoItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetParentLogoItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentLogoItemId) {
		return nil, false
	}
	return o.ParentLogoItemId, true
}

// HasParentLogoItemId returns a boolean if a field has been set.
func (o *BaseItemDto) HasParentLogoItemId() bool {
	if o != nil && !IsNil(o.ParentLogoItemId) {
		return true
	}

	return false
}

// SetParentLogoItemId gets a reference to the given string and assigns it to the ParentLogoItemId field.
func (o *BaseItemDto) SetParentLogoItemId(v string) {
	o.ParentLogoItemId = &v
}

// GetParentBackdropItemId returns the ParentBackdropItemId field value if set, zero value otherwise.
func (o *BaseItemDto) GetParentBackdropItemId() string {
	if o == nil || IsNil(o.ParentBackdropItemId) {
		var ret string
		return ret
	}
	return *o.ParentBackdropItemId
}

// GetParentBackdropItemIdOk returns a tuple with the ParentBackdropItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetParentBackdropItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentBackdropItemId) {
		return nil, false
	}
	return o.ParentBackdropItemId, true
}

// HasParentBackdropItemId returns a boolean if a field has been set.
func (o *BaseItemDto) HasParentBackdropItemId() bool {
	if o != nil && !IsNil(o.ParentBackdropItemId) {
		return true
	}

	return false
}

// SetParentBackdropItemId gets a reference to the given string and assigns it to the ParentBackdropItemId field.
func (o *BaseItemDto) SetParentBackdropItemId(v string) {
	o.ParentBackdropItemId = &v
}

// GetParentBackdropImageTags returns the ParentBackdropImageTags field value if set, zero value otherwise.
func (o *BaseItemDto) GetParentBackdropImageTags() []string {
	if o == nil || IsNil(o.ParentBackdropImageTags) {
		var ret []string
		return ret
	}
	return o.ParentBackdropImageTags
}

// GetParentBackdropImageTagsOk returns a tuple with the ParentBackdropImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetParentBackdropImageTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.ParentBackdropImageTags) {
		return nil, false
	}
	return o.ParentBackdropImageTags, true
}

// HasParentBackdropImageTags returns a boolean if a field has been set.
func (o *BaseItemDto) HasParentBackdropImageTags() bool {
	if o != nil && !IsNil(o.ParentBackdropImageTags) {
		return true
	}

	return false
}

// SetParentBackdropImageTags gets a reference to the given []string and assigns it to the ParentBackdropImageTags field.
func (o *BaseItemDto) SetParentBackdropImageTags(v []string) {
	o.ParentBackdropImageTags = v
}

// GetLocalTrailerCount returns the LocalTrailerCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetLocalTrailerCount() int32 {
	if o == nil || IsNil(o.LocalTrailerCount.Get()) {
		var ret int32
		return ret
	}
	return *o.LocalTrailerCount.Get()
}

// GetLocalTrailerCountOk returns a tuple with the LocalTrailerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetLocalTrailerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalTrailerCount.Get(), o.LocalTrailerCount.IsSet()
}

// HasLocalTrailerCount returns a boolean if a field has been set.
func (o *BaseItemDto) HasLocalTrailerCount() bool {
	if o != nil && o.LocalTrailerCount.IsSet() {
		return true
	}

	return false
}

// SetLocalTrailerCount gets a reference to the given NullableInt32 and assigns it to the LocalTrailerCount field.
func (o *BaseItemDto) SetLocalTrailerCount(v int32) {
	o.LocalTrailerCount.Set(&v)
}
// SetLocalTrailerCountNil sets the value for LocalTrailerCount to be an explicit nil
func (o *BaseItemDto) SetLocalTrailerCountNil() {
	o.LocalTrailerCount.Set(nil)
}

// UnsetLocalTrailerCount ensures that no value is present for LocalTrailerCount, not even an explicit nil
func (o *BaseItemDto) UnsetLocalTrailerCount() {
	o.LocalTrailerCount.Unset()
}

// GetUserData returns the UserData field value if set, zero value otherwise.
func (o *BaseItemDto) GetUserData() UserItemDataDto {
	if o == nil || IsNil(o.UserData) {
		var ret UserItemDataDto
		return ret
	}
	return *o.UserData
}

// GetUserDataOk returns a tuple with the UserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetUserDataOk() (*UserItemDataDto, bool) {
	if o == nil || IsNil(o.UserData) {
		return nil, false
	}
	return o.UserData, true
}

// HasUserData returns a boolean if a field has been set.
func (o *BaseItemDto) HasUserData() bool {
	if o != nil && !IsNil(o.UserData) {
		return true
	}

	return false
}

// SetUserData gets a reference to the given UserItemDataDto and assigns it to the UserData field.
func (o *BaseItemDto) SetUserData(v UserItemDataDto) {
	o.UserData = &v
}

// GetRecursiveItemCount returns the RecursiveItemCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetRecursiveItemCount() int32 {
	if o == nil || IsNil(o.RecursiveItemCount.Get()) {
		var ret int32
		return ret
	}
	return *o.RecursiveItemCount.Get()
}

// GetRecursiveItemCountOk returns a tuple with the RecursiveItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetRecursiveItemCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecursiveItemCount.Get(), o.RecursiveItemCount.IsSet()
}

// HasRecursiveItemCount returns a boolean if a field has been set.
func (o *BaseItemDto) HasRecursiveItemCount() bool {
	if o != nil && o.RecursiveItemCount.IsSet() {
		return true
	}

	return false
}

// SetRecursiveItemCount gets a reference to the given NullableInt32 and assigns it to the RecursiveItemCount field.
func (o *BaseItemDto) SetRecursiveItemCount(v int32) {
	o.RecursiveItemCount.Set(&v)
}
// SetRecursiveItemCountNil sets the value for RecursiveItemCount to be an explicit nil
func (o *BaseItemDto) SetRecursiveItemCountNil() {
	o.RecursiveItemCount.Set(nil)
}

// UnsetRecursiveItemCount ensures that no value is present for RecursiveItemCount, not even an explicit nil
func (o *BaseItemDto) UnsetRecursiveItemCount() {
	o.RecursiveItemCount.Unset()
}

// GetChildCount returns the ChildCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetChildCount() int32 {
	if o == nil || IsNil(o.ChildCount.Get()) {
		var ret int32
		return ret
	}
	return *o.ChildCount.Get()
}

// GetChildCountOk returns a tuple with the ChildCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetChildCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChildCount.Get(), o.ChildCount.IsSet()
}

// HasChildCount returns a boolean if a field has been set.
func (o *BaseItemDto) HasChildCount() bool {
	if o != nil && o.ChildCount.IsSet() {
		return true
	}

	return false
}

// SetChildCount gets a reference to the given NullableInt32 and assigns it to the ChildCount field.
func (o *BaseItemDto) SetChildCount(v int32) {
	o.ChildCount.Set(&v)
}
// SetChildCountNil sets the value for ChildCount to be an explicit nil
func (o *BaseItemDto) SetChildCountNil() {
	o.ChildCount.Set(nil)
}

// UnsetChildCount ensures that no value is present for ChildCount, not even an explicit nil
func (o *BaseItemDto) UnsetChildCount() {
	o.ChildCount.Unset()
}

// GetSeriesName returns the SeriesName field value if set, zero value otherwise.
func (o *BaseItemDto) GetSeriesName() string {
	if o == nil || IsNil(o.SeriesName) {
		var ret string
		return ret
	}
	return *o.SeriesName
}

// GetSeriesNameOk returns a tuple with the SeriesName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetSeriesNameOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesName) {
		return nil, false
	}
	return o.SeriesName, true
}

// HasSeriesName returns a boolean if a field has been set.
func (o *BaseItemDto) HasSeriesName() bool {
	if o != nil && !IsNil(o.SeriesName) {
		return true
	}

	return false
}

// SetSeriesName gets a reference to the given string and assigns it to the SeriesName field.
func (o *BaseItemDto) SetSeriesName(v string) {
	o.SeriesName = &v
}

// GetSeriesId returns the SeriesId field value if set, zero value otherwise.
func (o *BaseItemDto) GetSeriesId() string {
	if o == nil || IsNil(o.SeriesId) {
		var ret string
		return ret
	}
	return *o.SeriesId
}

// GetSeriesIdOk returns a tuple with the SeriesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetSeriesIdOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesId) {
		return nil, false
	}
	return o.SeriesId, true
}

// HasSeriesId returns a boolean if a field has been set.
func (o *BaseItemDto) HasSeriesId() bool {
	if o != nil && !IsNil(o.SeriesId) {
		return true
	}

	return false
}

// SetSeriesId gets a reference to the given string and assigns it to the SeriesId field.
func (o *BaseItemDto) SetSeriesId(v string) {
	o.SeriesId = &v
}

// GetSeasonId returns the SeasonId field value if set, zero value otherwise.
func (o *BaseItemDto) GetSeasonId() string {
	if o == nil || IsNil(o.SeasonId) {
		var ret string
		return ret
	}
	return *o.SeasonId
}

// GetSeasonIdOk returns a tuple with the SeasonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetSeasonIdOk() (*string, bool) {
	if o == nil || IsNil(o.SeasonId) {
		return nil, false
	}
	return o.SeasonId, true
}

// HasSeasonId returns a boolean if a field has been set.
func (o *BaseItemDto) HasSeasonId() bool {
	if o != nil && !IsNil(o.SeasonId) {
		return true
	}

	return false
}

// SetSeasonId gets a reference to the given string and assigns it to the SeasonId field.
func (o *BaseItemDto) SetSeasonId(v string) {
	o.SeasonId = &v
}

// GetSpecialFeatureCount returns the SpecialFeatureCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetSpecialFeatureCount() int32 {
	if o == nil || IsNil(o.SpecialFeatureCount.Get()) {
		var ret int32
		return ret
	}
	return *o.SpecialFeatureCount.Get()
}

// GetSpecialFeatureCountOk returns a tuple with the SpecialFeatureCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetSpecialFeatureCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpecialFeatureCount.Get(), o.SpecialFeatureCount.IsSet()
}

// HasSpecialFeatureCount returns a boolean if a field has been set.
func (o *BaseItemDto) HasSpecialFeatureCount() bool {
	if o != nil && o.SpecialFeatureCount.IsSet() {
		return true
	}

	return false
}

// SetSpecialFeatureCount gets a reference to the given NullableInt32 and assigns it to the SpecialFeatureCount field.
func (o *BaseItemDto) SetSpecialFeatureCount(v int32) {
	o.SpecialFeatureCount.Set(&v)
}
// SetSpecialFeatureCountNil sets the value for SpecialFeatureCount to be an explicit nil
func (o *BaseItemDto) SetSpecialFeatureCountNil() {
	o.SpecialFeatureCount.Set(nil)
}

// UnsetSpecialFeatureCount ensures that no value is present for SpecialFeatureCount, not even an explicit nil
func (o *BaseItemDto) UnsetSpecialFeatureCount() {
	o.SpecialFeatureCount.Unset()
}

// GetDisplayPreferencesId returns the DisplayPreferencesId field value if set, zero value otherwise.
func (o *BaseItemDto) GetDisplayPreferencesId() string {
	if o == nil || IsNil(o.DisplayPreferencesId) {
		var ret string
		return ret
	}
	return *o.DisplayPreferencesId
}

// GetDisplayPreferencesIdOk returns a tuple with the DisplayPreferencesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetDisplayPreferencesIdOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayPreferencesId) {
		return nil, false
	}
	return o.DisplayPreferencesId, true
}

// HasDisplayPreferencesId returns a boolean if a field has been set.
func (o *BaseItemDto) HasDisplayPreferencesId() bool {
	if o != nil && !IsNil(o.DisplayPreferencesId) {
		return true
	}

	return false
}

// SetDisplayPreferencesId gets a reference to the given string and assigns it to the DisplayPreferencesId field.
func (o *BaseItemDto) SetDisplayPreferencesId(v string) {
	o.DisplayPreferencesId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BaseItemDto) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BaseItemDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BaseItemDto) SetStatus(v string) {
	o.Status = &v
}

// GetAirTime returns the AirTime field value if set, zero value otherwise.
func (o *BaseItemDto) GetAirTime() string {
	if o == nil || IsNil(o.AirTime) {
		var ret string
		return ret
	}
	return *o.AirTime
}

// GetAirTimeOk returns a tuple with the AirTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetAirTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AirTime) {
		return nil, false
	}
	return o.AirTime, true
}

// HasAirTime returns a boolean if a field has been set.
func (o *BaseItemDto) HasAirTime() bool {
	if o != nil && !IsNil(o.AirTime) {
		return true
	}

	return false
}

// SetAirTime gets a reference to the given string and assigns it to the AirTime field.
func (o *BaseItemDto) SetAirTime(v string) {
	o.AirTime = &v
}

// GetAirDays returns the AirDays field value if set, zero value otherwise.
func (o *BaseItemDto) GetAirDays() []string {
	if o == nil || IsNil(o.AirDays) {
		var ret []string
		return ret
	}
	return o.AirDays
}

// GetAirDaysOk returns a tuple with the AirDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetAirDaysOk() ([]string, bool) {
	if o == nil || IsNil(o.AirDays) {
		return nil, false
	}
	return o.AirDays, true
}

// HasAirDays returns a boolean if a field has been set.
func (o *BaseItemDto) HasAirDays() bool {
	if o != nil && !IsNil(o.AirDays) {
		return true
	}

	return false
}

// SetAirDays gets a reference to the given []string and assigns it to the AirDays field.
func (o *BaseItemDto) SetAirDays(v []string) {
	o.AirDays = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *BaseItemDto) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *BaseItemDto) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *BaseItemDto) SetTags(v []string) {
	o.Tags = v
}

// GetPrimaryImageAspectRatio returns the PrimaryImageAspectRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetPrimaryImageAspectRatio() float64 {
	if o == nil || IsNil(o.PrimaryImageAspectRatio.Get()) {
		var ret float64
		return ret
	}
	return *o.PrimaryImageAspectRatio.Get()
}

// GetPrimaryImageAspectRatioOk returns a tuple with the PrimaryImageAspectRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetPrimaryImageAspectRatioOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryImageAspectRatio.Get(), o.PrimaryImageAspectRatio.IsSet()
}

// HasPrimaryImageAspectRatio returns a boolean if a field has been set.
func (o *BaseItemDto) HasPrimaryImageAspectRatio() bool {
	if o != nil && o.PrimaryImageAspectRatio.IsSet() {
		return true
	}

	return false
}

// SetPrimaryImageAspectRatio gets a reference to the given NullableFloat64 and assigns it to the PrimaryImageAspectRatio field.
func (o *BaseItemDto) SetPrimaryImageAspectRatio(v float64) {
	o.PrimaryImageAspectRatio.Set(&v)
}
// SetPrimaryImageAspectRatioNil sets the value for PrimaryImageAspectRatio to be an explicit nil
func (o *BaseItemDto) SetPrimaryImageAspectRatioNil() {
	o.PrimaryImageAspectRatio.Set(nil)
}

// UnsetPrimaryImageAspectRatio ensures that no value is present for PrimaryImageAspectRatio, not even an explicit nil
func (o *BaseItemDto) UnsetPrimaryImageAspectRatio() {
	o.PrimaryImageAspectRatio.Unset()
}

// GetArtists returns the Artists field value if set, zero value otherwise.
func (o *BaseItemDto) GetArtists() []string {
	if o == nil || IsNil(o.Artists) {
		var ret []string
		return ret
	}
	return o.Artists
}

// GetArtistsOk returns a tuple with the Artists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetArtistsOk() ([]string, bool) {
	if o == nil || IsNil(o.Artists) {
		return nil, false
	}
	return o.Artists, true
}

// HasArtists returns a boolean if a field has been set.
func (o *BaseItemDto) HasArtists() bool {
	if o != nil && !IsNil(o.Artists) {
		return true
	}

	return false
}

// SetArtists gets a reference to the given []string and assigns it to the Artists field.
func (o *BaseItemDto) SetArtists(v []string) {
	o.Artists = v
}

// GetArtistItems returns the ArtistItems field value if set, zero value otherwise.
func (o *BaseItemDto) GetArtistItems() []NameIdPair {
	if o == nil || IsNil(o.ArtistItems) {
		var ret []NameIdPair
		return ret
	}
	return o.ArtistItems
}

// GetArtistItemsOk returns a tuple with the ArtistItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetArtistItemsOk() ([]NameIdPair, bool) {
	if o == nil || IsNil(o.ArtistItems) {
		return nil, false
	}
	return o.ArtistItems, true
}

// HasArtistItems returns a boolean if a field has been set.
func (o *BaseItemDto) HasArtistItems() bool {
	if o != nil && !IsNil(o.ArtistItems) {
		return true
	}

	return false
}

// SetArtistItems gets a reference to the given []NameIdPair and assigns it to the ArtistItems field.
func (o *BaseItemDto) SetArtistItems(v []NameIdPair) {
	o.ArtistItems = v
}

// GetAlbum returns the Album field value if set, zero value otherwise.
func (o *BaseItemDto) GetAlbum() string {
	if o == nil || IsNil(o.Album) {
		var ret string
		return ret
	}
	return *o.Album
}

// GetAlbumOk returns a tuple with the Album field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetAlbumOk() (*string, bool) {
	if o == nil || IsNil(o.Album) {
		return nil, false
	}
	return o.Album, true
}

// HasAlbum returns a boolean if a field has been set.
func (o *BaseItemDto) HasAlbum() bool {
	if o != nil && !IsNil(o.Album) {
		return true
	}

	return false
}

// SetAlbum gets a reference to the given string and assigns it to the Album field.
func (o *BaseItemDto) SetAlbum(v string) {
	o.Album = &v
}

// GetCollectionType returns the CollectionType field value if set, zero value otherwise.
func (o *BaseItemDto) GetCollectionType() string {
	if o == nil || IsNil(o.CollectionType) {
		var ret string
		return ret
	}
	return *o.CollectionType
}

// GetCollectionTypeOk returns a tuple with the CollectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetCollectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CollectionType) {
		return nil, false
	}
	return o.CollectionType, true
}

// HasCollectionType returns a boolean if a field has been set.
func (o *BaseItemDto) HasCollectionType() bool {
	if o != nil && !IsNil(o.CollectionType) {
		return true
	}

	return false
}

// SetCollectionType gets a reference to the given string and assigns it to the CollectionType field.
func (o *BaseItemDto) SetCollectionType(v string) {
	o.CollectionType = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *BaseItemDto) GetDisplayOrder() string {
	if o == nil || IsNil(o.DisplayOrder) {
		var ret string
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetDisplayOrderOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayOrder) {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *BaseItemDto) HasDisplayOrder() bool {
	if o != nil && !IsNil(o.DisplayOrder) {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given string and assigns it to the DisplayOrder field.
func (o *BaseItemDto) SetDisplayOrder(v string) {
	o.DisplayOrder = &v
}

// GetAlbumId returns the AlbumId field value if set, zero value otherwise.
func (o *BaseItemDto) GetAlbumId() string {
	if o == nil || IsNil(o.AlbumId) {
		var ret string
		return ret
	}
	return *o.AlbumId
}

// GetAlbumIdOk returns a tuple with the AlbumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetAlbumIdOk() (*string, bool) {
	if o == nil || IsNil(o.AlbumId) {
		return nil, false
	}
	return o.AlbumId, true
}

// HasAlbumId returns a boolean if a field has been set.
func (o *BaseItemDto) HasAlbumId() bool {
	if o != nil && !IsNil(o.AlbumId) {
		return true
	}

	return false
}

// SetAlbumId gets a reference to the given string and assigns it to the AlbumId field.
func (o *BaseItemDto) SetAlbumId(v string) {
	o.AlbumId = &v
}

// GetAlbumPrimaryImageTag returns the AlbumPrimaryImageTag field value if set, zero value otherwise.
func (o *BaseItemDto) GetAlbumPrimaryImageTag() string {
	if o == nil || IsNil(o.AlbumPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.AlbumPrimaryImageTag
}

// GetAlbumPrimaryImageTagOk returns a tuple with the AlbumPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetAlbumPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.AlbumPrimaryImageTag) {
		return nil, false
	}
	return o.AlbumPrimaryImageTag, true
}

// HasAlbumPrimaryImageTag returns a boolean if a field has been set.
func (o *BaseItemDto) HasAlbumPrimaryImageTag() bool {
	if o != nil && !IsNil(o.AlbumPrimaryImageTag) {
		return true
	}

	return false
}

// SetAlbumPrimaryImageTag gets a reference to the given string and assigns it to the AlbumPrimaryImageTag field.
func (o *BaseItemDto) SetAlbumPrimaryImageTag(v string) {
	o.AlbumPrimaryImageTag = &v
}

// GetSeriesPrimaryImageTag returns the SeriesPrimaryImageTag field value if set, zero value otherwise.
func (o *BaseItemDto) GetSeriesPrimaryImageTag() string {
	if o == nil || IsNil(o.SeriesPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.SeriesPrimaryImageTag
}

// GetSeriesPrimaryImageTagOk returns a tuple with the SeriesPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetSeriesPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesPrimaryImageTag) {
		return nil, false
	}
	return o.SeriesPrimaryImageTag, true
}

// HasSeriesPrimaryImageTag returns a boolean if a field has been set.
func (o *BaseItemDto) HasSeriesPrimaryImageTag() bool {
	if o != nil && !IsNil(o.SeriesPrimaryImageTag) {
		return true
	}

	return false
}

// SetSeriesPrimaryImageTag gets a reference to the given string and assigns it to the SeriesPrimaryImageTag field.
func (o *BaseItemDto) SetSeriesPrimaryImageTag(v string) {
	o.SeriesPrimaryImageTag = &v
}

// GetAlbumArtist returns the AlbumArtist field value if set, zero value otherwise.
func (o *BaseItemDto) GetAlbumArtist() string {
	if o == nil || IsNil(o.AlbumArtist) {
		var ret string
		return ret
	}
	return *o.AlbumArtist
}

// GetAlbumArtistOk returns a tuple with the AlbumArtist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetAlbumArtistOk() (*string, bool) {
	if o == nil || IsNil(o.AlbumArtist) {
		return nil, false
	}
	return o.AlbumArtist, true
}

// HasAlbumArtist returns a boolean if a field has been set.
func (o *BaseItemDto) HasAlbumArtist() bool {
	if o != nil && !IsNil(o.AlbumArtist) {
		return true
	}

	return false
}

// SetAlbumArtist gets a reference to the given string and assigns it to the AlbumArtist field.
func (o *BaseItemDto) SetAlbumArtist(v string) {
	o.AlbumArtist = &v
}

// GetAlbumArtists returns the AlbumArtists field value if set, zero value otherwise.
func (o *BaseItemDto) GetAlbumArtists() []NameIdPair {
	if o == nil || IsNil(o.AlbumArtists) {
		var ret []NameIdPair
		return ret
	}
	return o.AlbumArtists
}

// GetAlbumArtistsOk returns a tuple with the AlbumArtists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetAlbumArtistsOk() ([]NameIdPair, bool) {
	if o == nil || IsNil(o.AlbumArtists) {
		return nil, false
	}
	return o.AlbumArtists, true
}

// HasAlbumArtists returns a boolean if a field has been set.
func (o *BaseItemDto) HasAlbumArtists() bool {
	if o != nil && !IsNil(o.AlbumArtists) {
		return true
	}

	return false
}

// SetAlbumArtists gets a reference to the given []NameIdPair and assigns it to the AlbumArtists field.
func (o *BaseItemDto) SetAlbumArtists(v []NameIdPair) {
	o.AlbumArtists = v
}

// GetSeasonName returns the SeasonName field value if set, zero value otherwise.
func (o *BaseItemDto) GetSeasonName() string {
	if o == nil || IsNil(o.SeasonName) {
		var ret string
		return ret
	}
	return *o.SeasonName
}

// GetSeasonNameOk returns a tuple with the SeasonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetSeasonNameOk() (*string, bool) {
	if o == nil || IsNil(o.SeasonName) {
		return nil, false
	}
	return o.SeasonName, true
}

// HasSeasonName returns a boolean if a field has been set.
func (o *BaseItemDto) HasSeasonName() bool {
	if o != nil && !IsNil(o.SeasonName) {
		return true
	}

	return false
}

// SetSeasonName gets a reference to the given string and assigns it to the SeasonName field.
func (o *BaseItemDto) SetSeasonName(v string) {
	o.SeasonName = &v
}

// GetMediaStreams returns the MediaStreams field value if set, zero value otherwise.
func (o *BaseItemDto) GetMediaStreams() []MediaStream {
	if o == nil || IsNil(o.MediaStreams) {
		var ret []MediaStream
		return ret
	}
	return o.MediaStreams
}

// GetMediaStreamsOk returns a tuple with the MediaStreams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetMediaStreamsOk() ([]MediaStream, bool) {
	if o == nil || IsNil(o.MediaStreams) {
		return nil, false
	}
	return o.MediaStreams, true
}

// HasMediaStreams returns a boolean if a field has been set.
func (o *BaseItemDto) HasMediaStreams() bool {
	if o != nil && !IsNil(o.MediaStreams) {
		return true
	}

	return false
}

// SetMediaStreams gets a reference to the given []MediaStream and assigns it to the MediaStreams field.
func (o *BaseItemDto) SetMediaStreams(v []MediaStream) {
	o.MediaStreams = v
}

// GetPartCount returns the PartCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetPartCount() int32 {
	if o == nil || IsNil(o.PartCount.Get()) {
		var ret int32
		return ret
	}
	return *o.PartCount.Get()
}

// GetPartCountOk returns a tuple with the PartCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetPartCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PartCount.Get(), o.PartCount.IsSet()
}

// HasPartCount returns a boolean if a field has been set.
func (o *BaseItemDto) HasPartCount() bool {
	if o != nil && o.PartCount.IsSet() {
		return true
	}

	return false
}

// SetPartCount gets a reference to the given NullableInt32 and assigns it to the PartCount field.
func (o *BaseItemDto) SetPartCount(v int32) {
	o.PartCount.Set(&v)
}
// SetPartCountNil sets the value for PartCount to be an explicit nil
func (o *BaseItemDto) SetPartCountNil() {
	o.PartCount.Set(nil)
}

// UnsetPartCount ensures that no value is present for PartCount, not even an explicit nil
func (o *BaseItemDto) UnsetPartCount() {
	o.PartCount.Unset()
}

// GetImageTags returns the ImageTags field value if set, zero value otherwise.
func (o *BaseItemDto) GetImageTags() map[string]string {
	if o == nil || IsNil(o.ImageTags) {
		var ret map[string]string
		return ret
	}
	return *o.ImageTags
}

// GetImageTagsOk returns a tuple with the ImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetImageTagsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ImageTags) {
		return nil, false
	}
	return o.ImageTags, true
}

// HasImageTags returns a boolean if a field has been set.
func (o *BaseItemDto) HasImageTags() bool {
	if o != nil && !IsNil(o.ImageTags) {
		return true
	}

	return false
}

// SetImageTags gets a reference to the given map[string]string and assigns it to the ImageTags field.
func (o *BaseItemDto) SetImageTags(v map[string]string) {
	o.ImageTags = &v
}

// GetBackdropImageTags returns the BackdropImageTags field value if set, zero value otherwise.
func (o *BaseItemDto) GetBackdropImageTags() []string {
	if o == nil || IsNil(o.BackdropImageTags) {
		var ret []string
		return ret
	}
	return o.BackdropImageTags
}

// GetBackdropImageTagsOk returns a tuple with the BackdropImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetBackdropImageTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.BackdropImageTags) {
		return nil, false
	}
	return o.BackdropImageTags, true
}

// HasBackdropImageTags returns a boolean if a field has been set.
func (o *BaseItemDto) HasBackdropImageTags() bool {
	if o != nil && !IsNil(o.BackdropImageTags) {
		return true
	}

	return false
}

// SetBackdropImageTags gets a reference to the given []string and assigns it to the BackdropImageTags field.
func (o *BaseItemDto) SetBackdropImageTags(v []string) {
	o.BackdropImageTags = v
}

// GetParentLogoImageTag returns the ParentLogoImageTag field value if set, zero value otherwise.
func (o *BaseItemDto) GetParentLogoImageTag() string {
	if o == nil || IsNil(o.ParentLogoImageTag) {
		var ret string
		return ret
	}
	return *o.ParentLogoImageTag
}

// GetParentLogoImageTagOk returns a tuple with the ParentLogoImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetParentLogoImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ParentLogoImageTag) {
		return nil, false
	}
	return o.ParentLogoImageTag, true
}

// HasParentLogoImageTag returns a boolean if a field has been set.
func (o *BaseItemDto) HasParentLogoImageTag() bool {
	if o != nil && !IsNil(o.ParentLogoImageTag) {
		return true
	}

	return false
}

// SetParentLogoImageTag gets a reference to the given string and assigns it to the ParentLogoImageTag field.
func (o *BaseItemDto) SetParentLogoImageTag(v string) {
	o.ParentLogoImageTag = &v
}

// GetParentArtItemId returns the ParentArtItemId field value if set, zero value otherwise.
func (o *BaseItemDto) GetParentArtItemId() string {
	if o == nil || IsNil(o.ParentArtItemId) {
		var ret string
		return ret
	}
	return *o.ParentArtItemId
}

// GetParentArtItemIdOk returns a tuple with the ParentArtItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetParentArtItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentArtItemId) {
		return nil, false
	}
	return o.ParentArtItemId, true
}

// HasParentArtItemId returns a boolean if a field has been set.
func (o *BaseItemDto) HasParentArtItemId() bool {
	if o != nil && !IsNil(o.ParentArtItemId) {
		return true
	}

	return false
}

// SetParentArtItemId gets a reference to the given string and assigns it to the ParentArtItemId field.
func (o *BaseItemDto) SetParentArtItemId(v string) {
	o.ParentArtItemId = &v
}

// GetParentArtImageTag returns the ParentArtImageTag field value if set, zero value otherwise.
func (o *BaseItemDto) GetParentArtImageTag() string {
	if o == nil || IsNil(o.ParentArtImageTag) {
		var ret string
		return ret
	}
	return *o.ParentArtImageTag
}

// GetParentArtImageTagOk returns a tuple with the ParentArtImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetParentArtImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ParentArtImageTag) {
		return nil, false
	}
	return o.ParentArtImageTag, true
}

// HasParentArtImageTag returns a boolean if a field has been set.
func (o *BaseItemDto) HasParentArtImageTag() bool {
	if o != nil && !IsNil(o.ParentArtImageTag) {
		return true
	}

	return false
}

// SetParentArtImageTag gets a reference to the given string and assigns it to the ParentArtImageTag field.
func (o *BaseItemDto) SetParentArtImageTag(v string) {
	o.ParentArtImageTag = &v
}

// GetSeriesThumbImageTag returns the SeriesThumbImageTag field value if set, zero value otherwise.
func (o *BaseItemDto) GetSeriesThumbImageTag() string {
	if o == nil || IsNil(o.SeriesThumbImageTag) {
		var ret string
		return ret
	}
	return *o.SeriesThumbImageTag
}

// GetSeriesThumbImageTagOk returns a tuple with the SeriesThumbImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetSeriesThumbImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesThumbImageTag) {
		return nil, false
	}
	return o.SeriesThumbImageTag, true
}

// HasSeriesThumbImageTag returns a boolean if a field has been set.
func (o *BaseItemDto) HasSeriesThumbImageTag() bool {
	if o != nil && !IsNil(o.SeriesThumbImageTag) {
		return true
	}

	return false
}

// SetSeriesThumbImageTag gets a reference to the given string and assigns it to the SeriesThumbImageTag field.
func (o *BaseItemDto) SetSeriesThumbImageTag(v string) {
	o.SeriesThumbImageTag = &v
}

// GetSeriesStudio returns the SeriesStudio field value if set, zero value otherwise.
func (o *BaseItemDto) GetSeriesStudio() string {
	if o == nil || IsNil(o.SeriesStudio) {
		var ret string
		return ret
	}
	return *o.SeriesStudio
}

// GetSeriesStudioOk returns a tuple with the SeriesStudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetSeriesStudioOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesStudio) {
		return nil, false
	}
	return o.SeriesStudio, true
}

// HasSeriesStudio returns a boolean if a field has been set.
func (o *BaseItemDto) HasSeriesStudio() bool {
	if o != nil && !IsNil(o.SeriesStudio) {
		return true
	}

	return false
}

// SetSeriesStudio gets a reference to the given string and assigns it to the SeriesStudio field.
func (o *BaseItemDto) SetSeriesStudio(v string) {
	o.SeriesStudio = &v
}

// GetParentThumbItemId returns the ParentThumbItemId field value if set, zero value otherwise.
func (o *BaseItemDto) GetParentThumbItemId() string {
	if o == nil || IsNil(o.ParentThumbItemId) {
		var ret string
		return ret
	}
	return *o.ParentThumbItemId
}

// GetParentThumbItemIdOk returns a tuple with the ParentThumbItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetParentThumbItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentThumbItemId) {
		return nil, false
	}
	return o.ParentThumbItemId, true
}

// HasParentThumbItemId returns a boolean if a field has been set.
func (o *BaseItemDto) HasParentThumbItemId() bool {
	if o != nil && !IsNil(o.ParentThumbItemId) {
		return true
	}

	return false
}

// SetParentThumbItemId gets a reference to the given string and assigns it to the ParentThumbItemId field.
func (o *BaseItemDto) SetParentThumbItemId(v string) {
	o.ParentThumbItemId = &v
}

// GetParentThumbImageTag returns the ParentThumbImageTag field value if set, zero value otherwise.
func (o *BaseItemDto) GetParentThumbImageTag() string {
	if o == nil || IsNil(o.ParentThumbImageTag) {
		var ret string
		return ret
	}
	return *o.ParentThumbImageTag
}

// GetParentThumbImageTagOk returns a tuple with the ParentThumbImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetParentThumbImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ParentThumbImageTag) {
		return nil, false
	}
	return o.ParentThumbImageTag, true
}

// HasParentThumbImageTag returns a boolean if a field has been set.
func (o *BaseItemDto) HasParentThumbImageTag() bool {
	if o != nil && !IsNil(o.ParentThumbImageTag) {
		return true
	}

	return false
}

// SetParentThumbImageTag gets a reference to the given string and assigns it to the ParentThumbImageTag field.
func (o *BaseItemDto) SetParentThumbImageTag(v string) {
	o.ParentThumbImageTag = &v
}

// GetParentPrimaryImageItemId returns the ParentPrimaryImageItemId field value if set, zero value otherwise.
func (o *BaseItemDto) GetParentPrimaryImageItemId() string {
	if o == nil || IsNil(o.ParentPrimaryImageItemId) {
		var ret string
		return ret
	}
	return *o.ParentPrimaryImageItemId
}

// GetParentPrimaryImageItemIdOk returns a tuple with the ParentPrimaryImageItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetParentPrimaryImageItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentPrimaryImageItemId) {
		return nil, false
	}
	return o.ParentPrimaryImageItemId, true
}

// HasParentPrimaryImageItemId returns a boolean if a field has been set.
func (o *BaseItemDto) HasParentPrimaryImageItemId() bool {
	if o != nil && !IsNil(o.ParentPrimaryImageItemId) {
		return true
	}

	return false
}

// SetParentPrimaryImageItemId gets a reference to the given string and assigns it to the ParentPrimaryImageItemId field.
func (o *BaseItemDto) SetParentPrimaryImageItemId(v string) {
	o.ParentPrimaryImageItemId = &v
}

// GetParentPrimaryImageTag returns the ParentPrimaryImageTag field value if set, zero value otherwise.
func (o *BaseItemDto) GetParentPrimaryImageTag() string {
	if o == nil || IsNil(o.ParentPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.ParentPrimaryImageTag
}

// GetParentPrimaryImageTagOk returns a tuple with the ParentPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetParentPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ParentPrimaryImageTag) {
		return nil, false
	}
	return o.ParentPrimaryImageTag, true
}

// HasParentPrimaryImageTag returns a boolean if a field has been set.
func (o *BaseItemDto) HasParentPrimaryImageTag() bool {
	if o != nil && !IsNil(o.ParentPrimaryImageTag) {
		return true
	}

	return false
}

// SetParentPrimaryImageTag gets a reference to the given string and assigns it to the ParentPrimaryImageTag field.
func (o *BaseItemDto) SetParentPrimaryImageTag(v string) {
	o.ParentPrimaryImageTag = &v
}

// GetChapters returns the Chapters field value if set, zero value otherwise.
func (o *BaseItemDto) GetChapters() []ChapterInfo {
	if o == nil || IsNil(o.Chapters) {
		var ret []ChapterInfo
		return ret
	}
	return o.Chapters
}

// GetChaptersOk returns a tuple with the Chapters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetChaptersOk() ([]ChapterInfo, bool) {
	if o == nil || IsNil(o.Chapters) {
		return nil, false
	}
	return o.Chapters, true
}

// HasChapters returns a boolean if a field has been set.
func (o *BaseItemDto) HasChapters() bool {
	if o != nil && !IsNil(o.Chapters) {
		return true
	}

	return false
}

// SetChapters gets a reference to the given []ChapterInfo and assigns it to the Chapters field.
func (o *BaseItemDto) SetChapters(v []ChapterInfo) {
	o.Chapters = v
}

// GetLocationType returns the LocationType field value if set, zero value otherwise.
func (o *BaseItemDto) GetLocationType() string {
	if o == nil || IsNil(o.LocationType) {
		var ret string
		return ret
	}
	return *o.LocationType
}

// GetLocationTypeOk returns a tuple with the LocationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetLocationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LocationType) {
		return nil, false
	}
	return o.LocationType, true
}

// HasLocationType returns a boolean if a field has been set.
func (o *BaseItemDto) HasLocationType() bool {
	if o != nil && !IsNil(o.LocationType) {
		return true
	}

	return false
}

// SetLocationType gets a reference to the given string and assigns it to the LocationType field.
func (o *BaseItemDto) SetLocationType(v string) {
	o.LocationType = &v
}

// GetMediaType returns the MediaType field value if set, zero value otherwise.
func (o *BaseItemDto) GetMediaType() string {
	if o == nil || IsNil(o.MediaType) {
		var ret string
		return ret
	}
	return *o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetMediaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MediaType) {
		return nil, false
	}
	return o.MediaType, true
}

// HasMediaType returns a boolean if a field has been set.
func (o *BaseItemDto) HasMediaType() bool {
	if o != nil && !IsNil(o.MediaType) {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given string and assigns it to the MediaType field.
func (o *BaseItemDto) SetMediaType(v string) {
	o.MediaType = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EndDate.Get()
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDate.Get(), o.EndDate.IsSet()
}

// HasEndDate returns a boolean if a field has been set.
func (o *BaseItemDto) HasEndDate() bool {
	if o != nil && o.EndDate.IsSet() {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given NullableTime and assigns it to the EndDate field.
func (o *BaseItemDto) SetEndDate(v time.Time) {
	o.EndDate.Set(&v)
}
// SetEndDateNil sets the value for EndDate to be an explicit nil
func (o *BaseItemDto) SetEndDateNil() {
	o.EndDate.Set(nil)
}

// UnsetEndDate ensures that no value is present for EndDate, not even an explicit nil
func (o *BaseItemDto) UnsetEndDate() {
	o.EndDate.Unset()
}

// GetLockedFields returns the LockedFields field value if set, zero value otherwise.
func (o *BaseItemDto) GetLockedFields() []string {
	if o == nil || IsNil(o.LockedFields) {
		var ret []string
		return ret
	}
	return o.LockedFields
}

// GetLockedFieldsOk returns a tuple with the LockedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetLockedFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.LockedFields) {
		return nil, false
	}
	return o.LockedFields, true
}

// HasLockedFields returns a boolean if a field has been set.
func (o *BaseItemDto) HasLockedFields() bool {
	if o != nil && !IsNil(o.LockedFields) {
		return true
	}

	return false
}

// SetLockedFields gets a reference to the given []string and assigns it to the LockedFields field.
func (o *BaseItemDto) SetLockedFields(v []string) {
	o.LockedFields = v
}

// GetLockData returns the LockData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetLockData() bool {
	if o == nil || IsNil(o.LockData.Get()) {
		var ret bool
		return ret
	}
	return *o.LockData.Get()
}

// GetLockDataOk returns a tuple with the LockData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetLockDataOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LockData.Get(), o.LockData.IsSet()
}

// HasLockData returns a boolean if a field has been set.
func (o *BaseItemDto) HasLockData() bool {
	if o != nil && o.LockData.IsSet() {
		return true
	}

	return false
}

// SetLockData gets a reference to the given NullableBool and assigns it to the LockData field.
func (o *BaseItemDto) SetLockData(v bool) {
	o.LockData.Set(&v)
}
// SetLockDataNil sets the value for LockData to be an explicit nil
func (o *BaseItemDto) SetLockDataNil() {
	o.LockData.Set(nil)
}

// UnsetLockData ensures that no value is present for LockData, not even an explicit nil
func (o *BaseItemDto) UnsetLockData() {
	o.LockData.Unset()
}

// GetWidth returns the Width field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetWidth() int32 {
	if o == nil || IsNil(o.Width.Get()) {
		var ret int32
		return ret
	}
	return *o.Width.Get()
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Width.Get(), o.Width.IsSet()
}

// HasWidth returns a boolean if a field has been set.
func (o *BaseItemDto) HasWidth() bool {
	if o != nil && o.Width.IsSet() {
		return true
	}

	return false
}

// SetWidth gets a reference to the given NullableInt32 and assigns it to the Width field.
func (o *BaseItemDto) SetWidth(v int32) {
	o.Width.Set(&v)
}
// SetWidthNil sets the value for Width to be an explicit nil
func (o *BaseItemDto) SetWidthNil() {
	o.Width.Set(nil)
}

// UnsetWidth ensures that no value is present for Width, not even an explicit nil
func (o *BaseItemDto) UnsetWidth() {
	o.Width.Unset()
}

// GetHeight returns the Height field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetHeight() int32 {
	if o == nil || IsNil(o.Height.Get()) {
		var ret int32
		return ret
	}
	return *o.Height.Get()
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Height.Get(), o.Height.IsSet()
}

// HasHeight returns a boolean if a field has been set.
func (o *BaseItemDto) HasHeight() bool {
	if o != nil && o.Height.IsSet() {
		return true
	}

	return false
}

// SetHeight gets a reference to the given NullableInt32 and assigns it to the Height field.
func (o *BaseItemDto) SetHeight(v int32) {
	o.Height.Set(&v)
}
// SetHeightNil sets the value for Height to be an explicit nil
func (o *BaseItemDto) SetHeightNil() {
	o.Height.Set(nil)
}

// UnsetHeight ensures that no value is present for Height, not even an explicit nil
func (o *BaseItemDto) UnsetHeight() {
	o.Height.Unset()
}

// GetCameraMake returns the CameraMake field value if set, zero value otherwise.
func (o *BaseItemDto) GetCameraMake() string {
	if o == nil || IsNil(o.CameraMake) {
		var ret string
		return ret
	}
	return *o.CameraMake
}

// GetCameraMakeOk returns a tuple with the CameraMake field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetCameraMakeOk() (*string, bool) {
	if o == nil || IsNil(o.CameraMake) {
		return nil, false
	}
	return o.CameraMake, true
}

// HasCameraMake returns a boolean if a field has been set.
func (o *BaseItemDto) HasCameraMake() bool {
	if o != nil && !IsNil(o.CameraMake) {
		return true
	}

	return false
}

// SetCameraMake gets a reference to the given string and assigns it to the CameraMake field.
func (o *BaseItemDto) SetCameraMake(v string) {
	o.CameraMake = &v
}

// GetCameraModel returns the CameraModel field value if set, zero value otherwise.
func (o *BaseItemDto) GetCameraModel() string {
	if o == nil || IsNil(o.CameraModel) {
		var ret string
		return ret
	}
	return *o.CameraModel
}

// GetCameraModelOk returns a tuple with the CameraModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetCameraModelOk() (*string, bool) {
	if o == nil || IsNil(o.CameraModel) {
		return nil, false
	}
	return o.CameraModel, true
}

// HasCameraModel returns a boolean if a field has been set.
func (o *BaseItemDto) HasCameraModel() bool {
	if o != nil && !IsNil(o.CameraModel) {
		return true
	}

	return false
}

// SetCameraModel gets a reference to the given string and assigns it to the CameraModel field.
func (o *BaseItemDto) SetCameraModel(v string) {
	o.CameraModel = &v
}

// GetSoftware returns the Software field value if set, zero value otherwise.
func (o *BaseItemDto) GetSoftware() string {
	if o == nil || IsNil(o.Software) {
		var ret string
		return ret
	}
	return *o.Software
}

// GetSoftwareOk returns a tuple with the Software field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetSoftwareOk() (*string, bool) {
	if o == nil || IsNil(o.Software) {
		return nil, false
	}
	return o.Software, true
}

// HasSoftware returns a boolean if a field has been set.
func (o *BaseItemDto) HasSoftware() bool {
	if o != nil && !IsNil(o.Software) {
		return true
	}

	return false
}

// SetSoftware gets a reference to the given string and assigns it to the Software field.
func (o *BaseItemDto) SetSoftware(v string) {
	o.Software = &v
}

// GetExposureTime returns the ExposureTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetExposureTime() float64 {
	if o == nil || IsNil(o.ExposureTime.Get()) {
		var ret float64
		return ret
	}
	return *o.ExposureTime.Get()
}

// GetExposureTimeOk returns a tuple with the ExposureTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetExposureTimeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExposureTime.Get(), o.ExposureTime.IsSet()
}

// HasExposureTime returns a boolean if a field has been set.
func (o *BaseItemDto) HasExposureTime() bool {
	if o != nil && o.ExposureTime.IsSet() {
		return true
	}

	return false
}

// SetExposureTime gets a reference to the given NullableFloat64 and assigns it to the ExposureTime field.
func (o *BaseItemDto) SetExposureTime(v float64) {
	o.ExposureTime.Set(&v)
}
// SetExposureTimeNil sets the value for ExposureTime to be an explicit nil
func (o *BaseItemDto) SetExposureTimeNil() {
	o.ExposureTime.Set(nil)
}

// UnsetExposureTime ensures that no value is present for ExposureTime, not even an explicit nil
func (o *BaseItemDto) UnsetExposureTime() {
	o.ExposureTime.Unset()
}

// GetFocalLength returns the FocalLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetFocalLength() float64 {
	if o == nil || IsNil(o.FocalLength.Get()) {
		var ret float64
		return ret
	}
	return *o.FocalLength.Get()
}

// GetFocalLengthOk returns a tuple with the FocalLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetFocalLengthOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.FocalLength.Get(), o.FocalLength.IsSet()
}

// HasFocalLength returns a boolean if a field has been set.
func (o *BaseItemDto) HasFocalLength() bool {
	if o != nil && o.FocalLength.IsSet() {
		return true
	}

	return false
}

// SetFocalLength gets a reference to the given NullableFloat64 and assigns it to the FocalLength field.
func (o *BaseItemDto) SetFocalLength(v float64) {
	o.FocalLength.Set(&v)
}
// SetFocalLengthNil sets the value for FocalLength to be an explicit nil
func (o *BaseItemDto) SetFocalLengthNil() {
	o.FocalLength.Set(nil)
}

// UnsetFocalLength ensures that no value is present for FocalLength, not even an explicit nil
func (o *BaseItemDto) UnsetFocalLength() {
	o.FocalLength.Unset()
}

// GetImageOrientation returns the ImageOrientation field value if set, zero value otherwise.
func (o *BaseItemDto) GetImageOrientation() string {
	if o == nil || IsNil(o.ImageOrientation) {
		var ret string
		return ret
	}
	return *o.ImageOrientation
}

// GetImageOrientationOk returns a tuple with the ImageOrientation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetImageOrientationOk() (*string, bool) {
	if o == nil || IsNil(o.ImageOrientation) {
		return nil, false
	}
	return o.ImageOrientation, true
}

// HasImageOrientation returns a boolean if a field has been set.
func (o *BaseItemDto) HasImageOrientation() bool {
	if o != nil && !IsNil(o.ImageOrientation) {
		return true
	}

	return false
}

// SetImageOrientation gets a reference to the given string and assigns it to the ImageOrientation field.
func (o *BaseItemDto) SetImageOrientation(v string) {
	o.ImageOrientation = &v
}

// GetAperture returns the Aperture field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetAperture() float64 {
	if o == nil || IsNil(o.Aperture.Get()) {
		var ret float64
		return ret
	}
	return *o.Aperture.Get()
}

// GetApertureOk returns a tuple with the Aperture field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetApertureOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Aperture.Get(), o.Aperture.IsSet()
}

// HasAperture returns a boolean if a field has been set.
func (o *BaseItemDto) HasAperture() bool {
	if o != nil && o.Aperture.IsSet() {
		return true
	}

	return false
}

// SetAperture gets a reference to the given NullableFloat64 and assigns it to the Aperture field.
func (o *BaseItemDto) SetAperture(v float64) {
	o.Aperture.Set(&v)
}
// SetApertureNil sets the value for Aperture to be an explicit nil
func (o *BaseItemDto) SetApertureNil() {
	o.Aperture.Set(nil)
}

// UnsetAperture ensures that no value is present for Aperture, not even an explicit nil
func (o *BaseItemDto) UnsetAperture() {
	o.Aperture.Unset()
}

// GetShutterSpeed returns the ShutterSpeed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetShutterSpeed() float64 {
	if o == nil || IsNil(o.ShutterSpeed.Get()) {
		var ret float64
		return ret
	}
	return *o.ShutterSpeed.Get()
}

// GetShutterSpeedOk returns a tuple with the ShutterSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetShutterSpeedOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShutterSpeed.Get(), o.ShutterSpeed.IsSet()
}

// HasShutterSpeed returns a boolean if a field has been set.
func (o *BaseItemDto) HasShutterSpeed() bool {
	if o != nil && o.ShutterSpeed.IsSet() {
		return true
	}

	return false
}

// SetShutterSpeed gets a reference to the given NullableFloat64 and assigns it to the ShutterSpeed field.
func (o *BaseItemDto) SetShutterSpeed(v float64) {
	o.ShutterSpeed.Set(&v)
}
// SetShutterSpeedNil sets the value for ShutterSpeed to be an explicit nil
func (o *BaseItemDto) SetShutterSpeedNil() {
	o.ShutterSpeed.Set(nil)
}

// UnsetShutterSpeed ensures that no value is present for ShutterSpeed, not even an explicit nil
func (o *BaseItemDto) UnsetShutterSpeed() {
	o.ShutterSpeed.Unset()
}

// GetLatitude returns the Latitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetLatitude() float64 {
	if o == nil || IsNil(o.Latitude.Get()) {
		var ret float64
		return ret
	}
	return *o.Latitude.Get()
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetLatitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Latitude.Get(), o.Latitude.IsSet()
}

// HasLatitude returns a boolean if a field has been set.
func (o *BaseItemDto) HasLatitude() bool {
	if o != nil && o.Latitude.IsSet() {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given NullableFloat64 and assigns it to the Latitude field.
func (o *BaseItemDto) SetLatitude(v float64) {
	o.Latitude.Set(&v)
}
// SetLatitudeNil sets the value for Latitude to be an explicit nil
func (o *BaseItemDto) SetLatitudeNil() {
	o.Latitude.Set(nil)
}

// UnsetLatitude ensures that no value is present for Latitude, not even an explicit nil
func (o *BaseItemDto) UnsetLatitude() {
	o.Latitude.Unset()
}

// GetLongitude returns the Longitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetLongitude() float64 {
	if o == nil || IsNil(o.Longitude.Get()) {
		var ret float64
		return ret
	}
	return *o.Longitude.Get()
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetLongitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Longitude.Get(), o.Longitude.IsSet()
}

// HasLongitude returns a boolean if a field has been set.
func (o *BaseItemDto) HasLongitude() bool {
	if o != nil && o.Longitude.IsSet() {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given NullableFloat64 and assigns it to the Longitude field.
func (o *BaseItemDto) SetLongitude(v float64) {
	o.Longitude.Set(&v)
}
// SetLongitudeNil sets the value for Longitude to be an explicit nil
func (o *BaseItemDto) SetLongitudeNil() {
	o.Longitude.Set(nil)
}

// UnsetLongitude ensures that no value is present for Longitude, not even an explicit nil
func (o *BaseItemDto) UnsetLongitude() {
	o.Longitude.Unset()
}

// GetAltitude returns the Altitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetAltitude() float64 {
	if o == nil || IsNil(o.Altitude.Get()) {
		var ret float64
		return ret
	}
	return *o.Altitude.Get()
}

// GetAltitudeOk returns a tuple with the Altitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetAltitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Altitude.Get(), o.Altitude.IsSet()
}

// HasAltitude returns a boolean if a field has been set.
func (o *BaseItemDto) HasAltitude() bool {
	if o != nil && o.Altitude.IsSet() {
		return true
	}

	return false
}

// SetAltitude gets a reference to the given NullableFloat64 and assigns it to the Altitude field.
func (o *BaseItemDto) SetAltitude(v float64) {
	o.Altitude.Set(&v)
}
// SetAltitudeNil sets the value for Altitude to be an explicit nil
func (o *BaseItemDto) SetAltitudeNil() {
	o.Altitude.Set(nil)
}

// UnsetAltitude ensures that no value is present for Altitude, not even an explicit nil
func (o *BaseItemDto) UnsetAltitude() {
	o.Altitude.Unset()
}

// GetIsoSpeedRating returns the IsoSpeedRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetIsoSpeedRating() int32 {
	if o == nil || IsNil(o.IsoSpeedRating.Get()) {
		var ret int32
		return ret
	}
	return *o.IsoSpeedRating.Get()
}

// GetIsoSpeedRatingOk returns a tuple with the IsoSpeedRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetIsoSpeedRatingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsoSpeedRating.Get(), o.IsoSpeedRating.IsSet()
}

// HasIsoSpeedRating returns a boolean if a field has been set.
func (o *BaseItemDto) HasIsoSpeedRating() bool {
	if o != nil && o.IsoSpeedRating.IsSet() {
		return true
	}

	return false
}

// SetIsoSpeedRating gets a reference to the given NullableInt32 and assigns it to the IsoSpeedRating field.
func (o *BaseItemDto) SetIsoSpeedRating(v int32) {
	o.IsoSpeedRating.Set(&v)
}
// SetIsoSpeedRatingNil sets the value for IsoSpeedRating to be an explicit nil
func (o *BaseItemDto) SetIsoSpeedRatingNil() {
	o.IsoSpeedRating.Set(nil)
}

// UnsetIsoSpeedRating ensures that no value is present for IsoSpeedRating, not even an explicit nil
func (o *BaseItemDto) UnsetIsoSpeedRating() {
	o.IsoSpeedRating.Unset()
}

// GetSeriesTimerId returns the SeriesTimerId field value if set, zero value otherwise.
func (o *BaseItemDto) GetSeriesTimerId() string {
	if o == nil || IsNil(o.SeriesTimerId) {
		var ret string
		return ret
	}
	return *o.SeriesTimerId
}

// GetSeriesTimerIdOk returns a tuple with the SeriesTimerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetSeriesTimerIdOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesTimerId) {
		return nil, false
	}
	return o.SeriesTimerId, true
}

// HasSeriesTimerId returns a boolean if a field has been set.
func (o *BaseItemDto) HasSeriesTimerId() bool {
	if o != nil && !IsNil(o.SeriesTimerId) {
		return true
	}

	return false
}

// SetSeriesTimerId gets a reference to the given string and assigns it to the SeriesTimerId field.
func (o *BaseItemDto) SetSeriesTimerId(v string) {
	o.SeriesTimerId = &v
}

// GetChannelPrimaryImageTag returns the ChannelPrimaryImageTag field value if set, zero value otherwise.
func (o *BaseItemDto) GetChannelPrimaryImageTag() string {
	if o == nil || IsNil(o.ChannelPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.ChannelPrimaryImageTag
}

// GetChannelPrimaryImageTagOk returns a tuple with the ChannelPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetChannelPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelPrimaryImageTag) {
		return nil, false
	}
	return o.ChannelPrimaryImageTag, true
}

// HasChannelPrimaryImageTag returns a boolean if a field has been set.
func (o *BaseItemDto) HasChannelPrimaryImageTag() bool {
	if o != nil && !IsNil(o.ChannelPrimaryImageTag) {
		return true
	}

	return false
}

// SetChannelPrimaryImageTag gets a reference to the given string and assigns it to the ChannelPrimaryImageTag field.
func (o *BaseItemDto) SetChannelPrimaryImageTag(v string) {
	o.ChannelPrimaryImageTag = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// HasStartDate returns a boolean if a field has been set.
func (o *BaseItemDto) HasStartDate() bool {
	if o != nil && o.StartDate.IsSet() {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given NullableTime and assigns it to the StartDate field.
func (o *BaseItemDto) SetStartDate(v time.Time) {
	o.StartDate.Set(&v)
}
// SetStartDateNil sets the value for StartDate to be an explicit nil
func (o *BaseItemDto) SetStartDateNil() {
	o.StartDate.Set(nil)
}

// UnsetStartDate ensures that no value is present for StartDate, not even an explicit nil
func (o *BaseItemDto) UnsetStartDate() {
	o.StartDate.Unset()
}

// GetCompletionPercentage returns the CompletionPercentage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetCompletionPercentage() float64 {
	if o == nil || IsNil(o.CompletionPercentage.Get()) {
		var ret float64
		return ret
	}
	return *o.CompletionPercentage.Get()
}

// GetCompletionPercentageOk returns a tuple with the CompletionPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetCompletionPercentageOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletionPercentage.Get(), o.CompletionPercentage.IsSet()
}

// HasCompletionPercentage returns a boolean if a field has been set.
func (o *BaseItemDto) HasCompletionPercentage() bool {
	if o != nil && o.CompletionPercentage.IsSet() {
		return true
	}

	return false
}

// SetCompletionPercentage gets a reference to the given NullableFloat64 and assigns it to the CompletionPercentage field.
func (o *BaseItemDto) SetCompletionPercentage(v float64) {
	o.CompletionPercentage.Set(&v)
}
// SetCompletionPercentageNil sets the value for CompletionPercentage to be an explicit nil
func (o *BaseItemDto) SetCompletionPercentageNil() {
	o.CompletionPercentage.Set(nil)
}

// UnsetCompletionPercentage ensures that no value is present for CompletionPercentage, not even an explicit nil
func (o *BaseItemDto) UnsetCompletionPercentage() {
	o.CompletionPercentage.Unset()
}

// GetIsRepeat returns the IsRepeat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetIsRepeat() bool {
	if o == nil || IsNil(o.IsRepeat.Get()) {
		var ret bool
		return ret
	}
	return *o.IsRepeat.Get()
}

// GetIsRepeatOk returns a tuple with the IsRepeat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetIsRepeatOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsRepeat.Get(), o.IsRepeat.IsSet()
}

// HasIsRepeat returns a boolean if a field has been set.
func (o *BaseItemDto) HasIsRepeat() bool {
	if o != nil && o.IsRepeat.IsSet() {
		return true
	}

	return false
}

// SetIsRepeat gets a reference to the given NullableBool and assigns it to the IsRepeat field.
func (o *BaseItemDto) SetIsRepeat(v bool) {
	o.IsRepeat.Set(&v)
}
// SetIsRepeatNil sets the value for IsRepeat to be an explicit nil
func (o *BaseItemDto) SetIsRepeatNil() {
	o.IsRepeat.Set(nil)
}

// UnsetIsRepeat ensures that no value is present for IsRepeat, not even an explicit nil
func (o *BaseItemDto) UnsetIsRepeat() {
	o.IsRepeat.Unset()
}

// GetIsNew returns the IsNew field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetIsNew() bool {
	if o == nil || IsNil(o.IsNew.Get()) {
		var ret bool
		return ret
	}
	return *o.IsNew.Get()
}

// GetIsNewOk returns a tuple with the IsNew field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetIsNewOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsNew.Get(), o.IsNew.IsSet()
}

// HasIsNew returns a boolean if a field has been set.
func (o *BaseItemDto) HasIsNew() bool {
	if o != nil && o.IsNew.IsSet() {
		return true
	}

	return false
}

// SetIsNew gets a reference to the given NullableBool and assigns it to the IsNew field.
func (o *BaseItemDto) SetIsNew(v bool) {
	o.IsNew.Set(&v)
}
// SetIsNewNil sets the value for IsNew to be an explicit nil
func (o *BaseItemDto) SetIsNewNil() {
	o.IsNew.Set(nil)
}

// UnsetIsNew ensures that no value is present for IsNew, not even an explicit nil
func (o *BaseItemDto) UnsetIsNew() {
	o.IsNew.Unset()
}

// GetEpisodeTitle returns the EpisodeTitle field value if set, zero value otherwise.
func (o *BaseItemDto) GetEpisodeTitle() string {
	if o == nil || IsNil(o.EpisodeTitle) {
		var ret string
		return ret
	}
	return *o.EpisodeTitle
}

// GetEpisodeTitleOk returns a tuple with the EpisodeTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetEpisodeTitleOk() (*string, bool) {
	if o == nil || IsNil(o.EpisodeTitle) {
		return nil, false
	}
	return o.EpisodeTitle, true
}

// HasEpisodeTitle returns a boolean if a field has been set.
func (o *BaseItemDto) HasEpisodeTitle() bool {
	if o != nil && !IsNil(o.EpisodeTitle) {
		return true
	}

	return false
}

// SetEpisodeTitle gets a reference to the given string and assigns it to the EpisodeTitle field.
func (o *BaseItemDto) SetEpisodeTitle(v string) {
	o.EpisodeTitle = &v
}

// GetIsMovie returns the IsMovie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetIsMovie() bool {
	if o == nil || IsNil(o.IsMovie.Get()) {
		var ret bool
		return ret
	}
	return *o.IsMovie.Get()
}

// GetIsMovieOk returns a tuple with the IsMovie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetIsMovieOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsMovie.Get(), o.IsMovie.IsSet()
}

// HasIsMovie returns a boolean if a field has been set.
func (o *BaseItemDto) HasIsMovie() bool {
	if o != nil && o.IsMovie.IsSet() {
		return true
	}

	return false
}

// SetIsMovie gets a reference to the given NullableBool and assigns it to the IsMovie field.
func (o *BaseItemDto) SetIsMovie(v bool) {
	o.IsMovie.Set(&v)
}
// SetIsMovieNil sets the value for IsMovie to be an explicit nil
func (o *BaseItemDto) SetIsMovieNil() {
	o.IsMovie.Set(nil)
}

// UnsetIsMovie ensures that no value is present for IsMovie, not even an explicit nil
func (o *BaseItemDto) UnsetIsMovie() {
	o.IsMovie.Unset()
}

// GetIsSports returns the IsSports field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetIsSports() bool {
	if o == nil || IsNil(o.IsSports.Get()) {
		var ret bool
		return ret
	}
	return *o.IsSports.Get()
}

// GetIsSportsOk returns a tuple with the IsSports field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetIsSportsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsSports.Get(), o.IsSports.IsSet()
}

// HasIsSports returns a boolean if a field has been set.
func (o *BaseItemDto) HasIsSports() bool {
	if o != nil && o.IsSports.IsSet() {
		return true
	}

	return false
}

// SetIsSports gets a reference to the given NullableBool and assigns it to the IsSports field.
func (o *BaseItemDto) SetIsSports(v bool) {
	o.IsSports.Set(&v)
}
// SetIsSportsNil sets the value for IsSports to be an explicit nil
func (o *BaseItemDto) SetIsSportsNil() {
	o.IsSports.Set(nil)
}

// UnsetIsSports ensures that no value is present for IsSports, not even an explicit nil
func (o *BaseItemDto) UnsetIsSports() {
	o.IsSports.Unset()
}

// GetIsSeries returns the IsSeries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetIsSeries() bool {
	if o == nil || IsNil(o.IsSeries.Get()) {
		var ret bool
		return ret
	}
	return *o.IsSeries.Get()
}

// GetIsSeriesOk returns a tuple with the IsSeries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetIsSeriesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsSeries.Get(), o.IsSeries.IsSet()
}

// HasIsSeries returns a boolean if a field has been set.
func (o *BaseItemDto) HasIsSeries() bool {
	if o != nil && o.IsSeries.IsSet() {
		return true
	}

	return false
}

// SetIsSeries gets a reference to the given NullableBool and assigns it to the IsSeries field.
func (o *BaseItemDto) SetIsSeries(v bool) {
	o.IsSeries.Set(&v)
}
// SetIsSeriesNil sets the value for IsSeries to be an explicit nil
func (o *BaseItemDto) SetIsSeriesNil() {
	o.IsSeries.Set(nil)
}

// UnsetIsSeries ensures that no value is present for IsSeries, not even an explicit nil
func (o *BaseItemDto) UnsetIsSeries() {
	o.IsSeries.Unset()
}

// GetIsLive returns the IsLive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetIsLive() bool {
	if o == nil || IsNil(o.IsLive.Get()) {
		var ret bool
		return ret
	}
	return *o.IsLive.Get()
}

// GetIsLiveOk returns a tuple with the IsLive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetIsLiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsLive.Get(), o.IsLive.IsSet()
}

// HasIsLive returns a boolean if a field has been set.
func (o *BaseItemDto) HasIsLive() bool {
	if o != nil && o.IsLive.IsSet() {
		return true
	}

	return false
}

// SetIsLive gets a reference to the given NullableBool and assigns it to the IsLive field.
func (o *BaseItemDto) SetIsLive(v bool) {
	o.IsLive.Set(&v)
}
// SetIsLiveNil sets the value for IsLive to be an explicit nil
func (o *BaseItemDto) SetIsLiveNil() {
	o.IsLive.Set(nil)
}

// UnsetIsLive ensures that no value is present for IsLive, not even an explicit nil
func (o *BaseItemDto) UnsetIsLive() {
	o.IsLive.Unset()
}

// GetIsNews returns the IsNews field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetIsNews() bool {
	if o == nil || IsNil(o.IsNews.Get()) {
		var ret bool
		return ret
	}
	return *o.IsNews.Get()
}

// GetIsNewsOk returns a tuple with the IsNews field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetIsNewsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsNews.Get(), o.IsNews.IsSet()
}

// HasIsNews returns a boolean if a field has been set.
func (o *BaseItemDto) HasIsNews() bool {
	if o != nil && o.IsNews.IsSet() {
		return true
	}

	return false
}

// SetIsNews gets a reference to the given NullableBool and assigns it to the IsNews field.
func (o *BaseItemDto) SetIsNews(v bool) {
	o.IsNews.Set(&v)
}
// SetIsNewsNil sets the value for IsNews to be an explicit nil
func (o *BaseItemDto) SetIsNewsNil() {
	o.IsNews.Set(nil)
}

// UnsetIsNews ensures that no value is present for IsNews, not even an explicit nil
func (o *BaseItemDto) UnsetIsNews() {
	o.IsNews.Unset()
}

// GetIsKids returns the IsKids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetIsKids() bool {
	if o == nil || IsNil(o.IsKids.Get()) {
		var ret bool
		return ret
	}
	return *o.IsKids.Get()
}

// GetIsKidsOk returns a tuple with the IsKids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetIsKidsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsKids.Get(), o.IsKids.IsSet()
}

// HasIsKids returns a boolean if a field has been set.
func (o *BaseItemDto) HasIsKids() bool {
	if o != nil && o.IsKids.IsSet() {
		return true
	}

	return false
}

// SetIsKids gets a reference to the given NullableBool and assigns it to the IsKids field.
func (o *BaseItemDto) SetIsKids(v bool) {
	o.IsKids.Set(&v)
}
// SetIsKidsNil sets the value for IsKids to be an explicit nil
func (o *BaseItemDto) SetIsKidsNil() {
	o.IsKids.Set(nil)
}

// UnsetIsKids ensures that no value is present for IsKids, not even an explicit nil
func (o *BaseItemDto) UnsetIsKids() {
	o.IsKids.Unset()
}

// GetIsPremiere returns the IsPremiere field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetIsPremiere() bool {
	if o == nil || IsNil(o.IsPremiere.Get()) {
		var ret bool
		return ret
	}
	return *o.IsPremiere.Get()
}

// GetIsPremiereOk returns a tuple with the IsPremiere field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetIsPremiereOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsPremiere.Get(), o.IsPremiere.IsSet()
}

// HasIsPremiere returns a boolean if a field has been set.
func (o *BaseItemDto) HasIsPremiere() bool {
	if o != nil && o.IsPremiere.IsSet() {
		return true
	}

	return false
}

// SetIsPremiere gets a reference to the given NullableBool and assigns it to the IsPremiere field.
func (o *BaseItemDto) SetIsPremiere(v bool) {
	o.IsPremiere.Set(&v)
}
// SetIsPremiereNil sets the value for IsPremiere to be an explicit nil
func (o *BaseItemDto) SetIsPremiereNil() {
	o.IsPremiere.Set(nil)
}

// UnsetIsPremiere ensures that no value is present for IsPremiere, not even an explicit nil
func (o *BaseItemDto) UnsetIsPremiere() {
	o.IsPremiere.Unset()
}

// GetTimerId returns the TimerId field value if set, zero value otherwise.
func (o *BaseItemDto) GetTimerId() string {
	if o == nil || IsNil(o.TimerId) {
		var ret string
		return ret
	}
	return *o.TimerId
}

// GetTimerIdOk returns a tuple with the TimerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetTimerIdOk() (*string, bool) {
	if o == nil || IsNil(o.TimerId) {
		return nil, false
	}
	return o.TimerId, true
}

// HasTimerId returns a boolean if a field has been set.
func (o *BaseItemDto) HasTimerId() bool {
	if o != nil && !IsNil(o.TimerId) {
		return true
	}

	return false
}

// SetTimerId gets a reference to the given string and assigns it to the TimerId field.
func (o *BaseItemDto) SetTimerId(v string) {
	o.TimerId = &v
}

// GetCurrentProgram returns the CurrentProgram field value if set, zero value otherwise.
func (o *BaseItemDto) GetCurrentProgram() BaseItemDto {
	if o == nil || IsNil(o.CurrentProgram) {
		var ret BaseItemDto
		return ret
	}
	return *o.CurrentProgram
}

// GetCurrentProgramOk returns a tuple with the CurrentProgram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseItemDto) GetCurrentProgramOk() (*BaseItemDto, bool) {
	if o == nil || IsNil(o.CurrentProgram) {
		return nil, false
	}
	return o.CurrentProgram, true
}

// HasCurrentProgram returns a boolean if a field has been set.
func (o *BaseItemDto) HasCurrentProgram() bool {
	if o != nil && !IsNil(o.CurrentProgram) {
		return true
	}

	return false
}

// SetCurrentProgram gets a reference to the given BaseItemDto and assigns it to the CurrentProgram field.
func (o *BaseItemDto) SetCurrentProgram(v BaseItemDto) {
	o.CurrentProgram = &v
}

// GetMovieCount returns the MovieCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetMovieCount() int32 {
	if o == nil || IsNil(o.MovieCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MovieCount.Get()
}

// GetMovieCountOk returns a tuple with the MovieCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetMovieCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MovieCount.Get(), o.MovieCount.IsSet()
}

// HasMovieCount returns a boolean if a field has been set.
func (o *BaseItemDto) HasMovieCount() bool {
	if o != nil && o.MovieCount.IsSet() {
		return true
	}

	return false
}

// SetMovieCount gets a reference to the given NullableInt32 and assigns it to the MovieCount field.
func (o *BaseItemDto) SetMovieCount(v int32) {
	o.MovieCount.Set(&v)
}
// SetMovieCountNil sets the value for MovieCount to be an explicit nil
func (o *BaseItemDto) SetMovieCountNil() {
	o.MovieCount.Set(nil)
}

// UnsetMovieCount ensures that no value is present for MovieCount, not even an explicit nil
func (o *BaseItemDto) UnsetMovieCount() {
	o.MovieCount.Unset()
}

// GetSeriesCount returns the SeriesCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetSeriesCount() int32 {
	if o == nil || IsNil(o.SeriesCount.Get()) {
		var ret int32
		return ret
	}
	return *o.SeriesCount.Get()
}

// GetSeriesCountOk returns a tuple with the SeriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetSeriesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesCount.Get(), o.SeriesCount.IsSet()
}

// HasSeriesCount returns a boolean if a field has been set.
func (o *BaseItemDto) HasSeriesCount() bool {
	if o != nil && o.SeriesCount.IsSet() {
		return true
	}

	return false
}

// SetSeriesCount gets a reference to the given NullableInt32 and assigns it to the SeriesCount field.
func (o *BaseItemDto) SetSeriesCount(v int32) {
	o.SeriesCount.Set(&v)
}
// SetSeriesCountNil sets the value for SeriesCount to be an explicit nil
func (o *BaseItemDto) SetSeriesCountNil() {
	o.SeriesCount.Set(nil)
}

// UnsetSeriesCount ensures that no value is present for SeriesCount, not even an explicit nil
func (o *BaseItemDto) UnsetSeriesCount() {
	o.SeriesCount.Unset()
}

// GetAlbumCount returns the AlbumCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetAlbumCount() int32 {
	if o == nil || IsNil(o.AlbumCount.Get()) {
		var ret int32
		return ret
	}
	return *o.AlbumCount.Get()
}

// GetAlbumCountOk returns a tuple with the AlbumCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetAlbumCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlbumCount.Get(), o.AlbumCount.IsSet()
}

// HasAlbumCount returns a boolean if a field has been set.
func (o *BaseItemDto) HasAlbumCount() bool {
	if o != nil && o.AlbumCount.IsSet() {
		return true
	}

	return false
}

// SetAlbumCount gets a reference to the given NullableInt32 and assigns it to the AlbumCount field.
func (o *BaseItemDto) SetAlbumCount(v int32) {
	o.AlbumCount.Set(&v)
}
// SetAlbumCountNil sets the value for AlbumCount to be an explicit nil
func (o *BaseItemDto) SetAlbumCountNil() {
	o.AlbumCount.Set(nil)
}

// UnsetAlbumCount ensures that no value is present for AlbumCount, not even an explicit nil
func (o *BaseItemDto) UnsetAlbumCount() {
	o.AlbumCount.Unset()
}

// GetSongCount returns the SongCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetSongCount() int32 {
	if o == nil || IsNil(o.SongCount.Get()) {
		var ret int32
		return ret
	}
	return *o.SongCount.Get()
}

// GetSongCountOk returns a tuple with the SongCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetSongCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SongCount.Get(), o.SongCount.IsSet()
}

// HasSongCount returns a boolean if a field has been set.
func (o *BaseItemDto) HasSongCount() bool {
	if o != nil && o.SongCount.IsSet() {
		return true
	}

	return false
}

// SetSongCount gets a reference to the given NullableInt32 and assigns it to the SongCount field.
func (o *BaseItemDto) SetSongCount(v int32) {
	o.SongCount.Set(&v)
}
// SetSongCountNil sets the value for SongCount to be an explicit nil
func (o *BaseItemDto) SetSongCountNil() {
	o.SongCount.Set(nil)
}

// UnsetSongCount ensures that no value is present for SongCount, not even an explicit nil
func (o *BaseItemDto) UnsetSongCount() {
	o.SongCount.Unset()
}

// GetMusicVideoCount returns the MusicVideoCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseItemDto) GetMusicVideoCount() int32 {
	if o == nil || IsNil(o.MusicVideoCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MusicVideoCount.Get()
}

// GetMusicVideoCountOk returns a tuple with the MusicVideoCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseItemDto) GetMusicVideoCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MusicVideoCount.Get(), o.MusicVideoCount.IsSet()
}

// HasMusicVideoCount returns a boolean if a field has been set.
func (o *BaseItemDto) HasMusicVideoCount() bool {
	if o != nil && o.MusicVideoCount.IsSet() {
		return true
	}

	return false
}

// SetMusicVideoCount gets a reference to the given NullableInt32 and assigns it to the MusicVideoCount field.
func (o *BaseItemDto) SetMusicVideoCount(v int32) {
	o.MusicVideoCount.Set(&v)
}
// SetMusicVideoCountNil sets the value for MusicVideoCount to be an explicit nil
func (o *BaseItemDto) SetMusicVideoCountNil() {
	o.MusicVideoCount.Set(nil)
}

// UnsetMusicVideoCount ensures that no value is present for MusicVideoCount, not even an explicit nil
func (o *BaseItemDto) UnsetMusicVideoCount() {
	o.MusicVideoCount.Unset()
}

func (o BaseItemDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseItemDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.OriginalTitle) {
		toSerialize["OriginalTitle"] = o.OriginalTitle
	}
	if !IsNil(o.ServerId) {
		toSerialize["ServerId"] = o.ServerId
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Etag) {
		toSerialize["Etag"] = o.Etag
	}
	if !IsNil(o.PlaylistItemId) {
		toSerialize["PlaylistItemId"] = o.PlaylistItemId
	}
	if o.DateCreated.IsSet() {
		toSerialize["DateCreated"] = o.DateCreated.Get()
	}
	if !IsNil(o.ExtraType) {
		toSerialize["ExtraType"] = o.ExtraType
	}
	if o.AirsBeforeSeasonNumber.IsSet() {
		toSerialize["AirsBeforeSeasonNumber"] = o.AirsBeforeSeasonNumber.Get()
	}
	if o.AirsAfterSeasonNumber.IsSet() {
		toSerialize["AirsAfterSeasonNumber"] = o.AirsAfterSeasonNumber.Get()
	}
	if o.AirsBeforeEpisodeNumber.IsSet() {
		toSerialize["AirsBeforeEpisodeNumber"] = o.AirsBeforeEpisodeNumber.Get()
	}
	if o.DisplaySpecialsWithSeasons.IsSet() {
		toSerialize["DisplaySpecialsWithSeasons"] = o.DisplaySpecialsWithSeasons.Get()
	}
	if o.CanDelete.IsSet() {
		toSerialize["CanDelete"] = o.CanDelete.Get()
	}
	if o.CanDownload.IsSet() {
		toSerialize["CanDownload"] = o.CanDownload.Get()
	}
	if o.HasSubtitles.IsSet() {
		toSerialize["HasSubtitles"] = o.HasSubtitles.Get()
	}
	if o.SupportsResume.IsSet() {
		toSerialize["SupportsResume"] = o.SupportsResume.Get()
	}
	if !IsNil(o.PreferredMetadataLanguage) {
		toSerialize["PreferredMetadataLanguage"] = o.PreferredMetadataLanguage
	}
	if !IsNil(o.PreferredMetadataCountryCode) {
		toSerialize["PreferredMetadataCountryCode"] = o.PreferredMetadataCountryCode
	}
	if o.SupportsSync.IsSet() {
		toSerialize["SupportsSync"] = o.SupportsSync.Get()
	}
	if !IsNil(o.Container) {
		toSerialize["Container"] = o.Container
	}
	if !IsNil(o.SortName) {
		toSerialize["SortName"] = o.SortName
	}
	if !IsNil(o.ForcedSortName) {
		toSerialize["ForcedSortName"] = o.ForcedSortName
	}
	if !IsNil(o.Video3DFormat) {
		toSerialize["Video3DFormat"] = o.Video3DFormat
	}
	if o.PremiereDate.IsSet() {
		toSerialize["PremiereDate"] = o.PremiereDate.Get()
	}
	if !IsNil(o.ExternalUrls) {
		toSerialize["ExternalUrls"] = o.ExternalUrls
	}
	if !IsNil(o.MediaSources) {
		toSerialize["MediaSources"] = o.MediaSources
	}
	if o.CriticRating.IsSet() {
		toSerialize["CriticRating"] = o.CriticRating.Get()
	}
	if o.GameSystemId.IsSet() {
		toSerialize["GameSystemId"] = o.GameSystemId.Get()
	}
	if !IsNil(o.GameSystem) {
		toSerialize["GameSystem"] = o.GameSystem
	}
	if !IsNil(o.ProductionLocations) {
		toSerialize["ProductionLocations"] = o.ProductionLocations
	}
	if !IsNil(o.Path) {
		toSerialize["Path"] = o.Path
	}
	if !IsNil(o.OfficialRating) {
		toSerialize["OfficialRating"] = o.OfficialRating
	}
	if !IsNil(o.CustomRating) {
		toSerialize["CustomRating"] = o.CustomRating
	}
	if !IsNil(o.ChannelId) {
		toSerialize["ChannelId"] = o.ChannelId
	}
	if !IsNil(o.ChannelName) {
		toSerialize["ChannelName"] = o.ChannelName
	}
	if !IsNil(o.Overview) {
		toSerialize["Overview"] = o.Overview
	}
	if !IsNil(o.Taglines) {
		toSerialize["Taglines"] = o.Taglines
	}
	if !IsNil(o.Genres) {
		toSerialize["Genres"] = o.Genres
	}
	if o.CommunityRating.IsSet() {
		toSerialize["CommunityRating"] = o.CommunityRating.Get()
	}
	if o.RunTimeTicks.IsSet() {
		toSerialize["RunTimeTicks"] = o.RunTimeTicks.Get()
	}
	if !IsNil(o.PlayAccess) {
		toSerialize["PlayAccess"] = o.PlayAccess
	}
	if !IsNil(o.AspectRatio) {
		toSerialize["AspectRatio"] = o.AspectRatio
	}
	if o.ProductionYear.IsSet() {
		toSerialize["ProductionYear"] = o.ProductionYear.Get()
	}
	if !IsNil(o.Number) {
		toSerialize["Number"] = o.Number
	}
	if !IsNil(o.ChannelNumber) {
		toSerialize["ChannelNumber"] = o.ChannelNumber
	}
	if o.IndexNumber.IsSet() {
		toSerialize["IndexNumber"] = o.IndexNumber.Get()
	}
	if o.IndexNumberEnd.IsSet() {
		toSerialize["IndexNumberEnd"] = o.IndexNumberEnd.Get()
	}
	if o.ParentIndexNumber.IsSet() {
		toSerialize["ParentIndexNumber"] = o.ParentIndexNumber.Get()
	}
	if !IsNil(o.RemoteTrailers) {
		toSerialize["RemoteTrailers"] = o.RemoteTrailers
	}
	if !IsNil(o.ProviderIds) {
		toSerialize["ProviderIds"] = o.ProviderIds
	}
	if o.IsFolder.IsSet() {
		toSerialize["IsFolder"] = o.IsFolder.Get()
	}
	if !IsNil(o.ParentId) {
		toSerialize["ParentId"] = o.ParentId
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.People) {
		toSerialize["People"] = o.People
	}
	if !IsNil(o.Studios) {
		toSerialize["Studios"] = o.Studios
	}
	if !IsNil(o.GenreItems) {
		toSerialize["GenreItems"] = o.GenreItems
	}
	if !IsNil(o.ParentLogoItemId) {
		toSerialize["ParentLogoItemId"] = o.ParentLogoItemId
	}
	if !IsNil(o.ParentBackdropItemId) {
		toSerialize["ParentBackdropItemId"] = o.ParentBackdropItemId
	}
	if !IsNil(o.ParentBackdropImageTags) {
		toSerialize["ParentBackdropImageTags"] = o.ParentBackdropImageTags
	}
	if o.LocalTrailerCount.IsSet() {
		toSerialize["LocalTrailerCount"] = o.LocalTrailerCount.Get()
	}
	if !IsNil(o.UserData) {
		toSerialize["UserData"] = o.UserData
	}
	if o.RecursiveItemCount.IsSet() {
		toSerialize["RecursiveItemCount"] = o.RecursiveItemCount.Get()
	}
	if o.ChildCount.IsSet() {
		toSerialize["ChildCount"] = o.ChildCount.Get()
	}
	if !IsNil(o.SeriesName) {
		toSerialize["SeriesName"] = o.SeriesName
	}
	if !IsNil(o.SeriesId) {
		toSerialize["SeriesId"] = o.SeriesId
	}
	if !IsNil(o.SeasonId) {
		toSerialize["SeasonId"] = o.SeasonId
	}
	if o.SpecialFeatureCount.IsSet() {
		toSerialize["SpecialFeatureCount"] = o.SpecialFeatureCount.Get()
	}
	if !IsNil(o.DisplayPreferencesId) {
		toSerialize["DisplayPreferencesId"] = o.DisplayPreferencesId
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.AirTime) {
		toSerialize["AirTime"] = o.AirTime
	}
	if !IsNil(o.AirDays) {
		toSerialize["AirDays"] = o.AirDays
	}
	if !IsNil(o.Tags) {
		toSerialize["Tags"] = o.Tags
	}
	if o.PrimaryImageAspectRatio.IsSet() {
		toSerialize["PrimaryImageAspectRatio"] = o.PrimaryImageAspectRatio.Get()
	}
	if !IsNil(o.Artists) {
		toSerialize["Artists"] = o.Artists
	}
	if !IsNil(o.ArtistItems) {
		toSerialize["ArtistItems"] = o.ArtistItems
	}
	if !IsNil(o.Album) {
		toSerialize["Album"] = o.Album
	}
	if !IsNil(o.CollectionType) {
		toSerialize["CollectionType"] = o.CollectionType
	}
	if !IsNil(o.DisplayOrder) {
		toSerialize["DisplayOrder"] = o.DisplayOrder
	}
	if !IsNil(o.AlbumId) {
		toSerialize["AlbumId"] = o.AlbumId
	}
	if !IsNil(o.AlbumPrimaryImageTag) {
		toSerialize["AlbumPrimaryImageTag"] = o.AlbumPrimaryImageTag
	}
	if !IsNil(o.SeriesPrimaryImageTag) {
		toSerialize["SeriesPrimaryImageTag"] = o.SeriesPrimaryImageTag
	}
	if !IsNil(o.AlbumArtist) {
		toSerialize["AlbumArtist"] = o.AlbumArtist
	}
	if !IsNil(o.AlbumArtists) {
		toSerialize["AlbumArtists"] = o.AlbumArtists
	}
	if !IsNil(o.SeasonName) {
		toSerialize["SeasonName"] = o.SeasonName
	}
	if !IsNil(o.MediaStreams) {
		toSerialize["MediaStreams"] = o.MediaStreams
	}
	if o.PartCount.IsSet() {
		toSerialize["PartCount"] = o.PartCount.Get()
	}
	if !IsNil(o.ImageTags) {
		toSerialize["ImageTags"] = o.ImageTags
	}
	if !IsNil(o.BackdropImageTags) {
		toSerialize["BackdropImageTags"] = o.BackdropImageTags
	}
	if !IsNil(o.ParentLogoImageTag) {
		toSerialize["ParentLogoImageTag"] = o.ParentLogoImageTag
	}
	if !IsNil(o.ParentArtItemId) {
		toSerialize["ParentArtItemId"] = o.ParentArtItemId
	}
	if !IsNil(o.ParentArtImageTag) {
		toSerialize["ParentArtImageTag"] = o.ParentArtImageTag
	}
	if !IsNil(o.SeriesThumbImageTag) {
		toSerialize["SeriesThumbImageTag"] = o.SeriesThumbImageTag
	}
	if !IsNil(o.SeriesStudio) {
		toSerialize["SeriesStudio"] = o.SeriesStudio
	}
	if !IsNil(o.ParentThumbItemId) {
		toSerialize["ParentThumbItemId"] = o.ParentThumbItemId
	}
	if !IsNil(o.ParentThumbImageTag) {
		toSerialize["ParentThumbImageTag"] = o.ParentThumbImageTag
	}
	if !IsNil(o.ParentPrimaryImageItemId) {
		toSerialize["ParentPrimaryImageItemId"] = o.ParentPrimaryImageItemId
	}
	if !IsNil(o.ParentPrimaryImageTag) {
		toSerialize["ParentPrimaryImageTag"] = o.ParentPrimaryImageTag
	}
	if !IsNil(o.Chapters) {
		toSerialize["Chapters"] = o.Chapters
	}
	if !IsNil(o.LocationType) {
		toSerialize["LocationType"] = o.LocationType
	}
	if !IsNil(o.MediaType) {
		toSerialize["MediaType"] = o.MediaType
	}
	if o.EndDate.IsSet() {
		toSerialize["EndDate"] = o.EndDate.Get()
	}
	if !IsNil(o.LockedFields) {
		toSerialize["LockedFields"] = o.LockedFields
	}
	if o.LockData.IsSet() {
		toSerialize["LockData"] = o.LockData.Get()
	}
	if o.Width.IsSet() {
		toSerialize["Width"] = o.Width.Get()
	}
	if o.Height.IsSet() {
		toSerialize["Height"] = o.Height.Get()
	}
	if !IsNil(o.CameraMake) {
		toSerialize["CameraMake"] = o.CameraMake
	}
	if !IsNil(o.CameraModel) {
		toSerialize["CameraModel"] = o.CameraModel
	}
	if !IsNil(o.Software) {
		toSerialize["Software"] = o.Software
	}
	if o.ExposureTime.IsSet() {
		toSerialize["ExposureTime"] = o.ExposureTime.Get()
	}
	if o.FocalLength.IsSet() {
		toSerialize["FocalLength"] = o.FocalLength.Get()
	}
	if !IsNil(o.ImageOrientation) {
		toSerialize["ImageOrientation"] = o.ImageOrientation
	}
	if o.Aperture.IsSet() {
		toSerialize["Aperture"] = o.Aperture.Get()
	}
	if o.ShutterSpeed.IsSet() {
		toSerialize["ShutterSpeed"] = o.ShutterSpeed.Get()
	}
	if o.Latitude.IsSet() {
		toSerialize["Latitude"] = o.Latitude.Get()
	}
	if o.Longitude.IsSet() {
		toSerialize["Longitude"] = o.Longitude.Get()
	}
	if o.Altitude.IsSet() {
		toSerialize["Altitude"] = o.Altitude.Get()
	}
	if o.IsoSpeedRating.IsSet() {
		toSerialize["IsoSpeedRating"] = o.IsoSpeedRating.Get()
	}
	if !IsNil(o.SeriesTimerId) {
		toSerialize["SeriesTimerId"] = o.SeriesTimerId
	}
	if !IsNil(o.ChannelPrimaryImageTag) {
		toSerialize["ChannelPrimaryImageTag"] = o.ChannelPrimaryImageTag
	}
	if o.StartDate.IsSet() {
		toSerialize["StartDate"] = o.StartDate.Get()
	}
	if o.CompletionPercentage.IsSet() {
		toSerialize["CompletionPercentage"] = o.CompletionPercentage.Get()
	}
	if o.IsRepeat.IsSet() {
		toSerialize["IsRepeat"] = o.IsRepeat.Get()
	}
	if o.IsNew.IsSet() {
		toSerialize["IsNew"] = o.IsNew.Get()
	}
	if !IsNil(o.EpisodeTitle) {
		toSerialize["EpisodeTitle"] = o.EpisodeTitle
	}
	if o.IsMovie.IsSet() {
		toSerialize["IsMovie"] = o.IsMovie.Get()
	}
	if o.IsSports.IsSet() {
		toSerialize["IsSports"] = o.IsSports.Get()
	}
	if o.IsSeries.IsSet() {
		toSerialize["IsSeries"] = o.IsSeries.Get()
	}
	if o.IsLive.IsSet() {
		toSerialize["IsLive"] = o.IsLive.Get()
	}
	if o.IsNews.IsSet() {
		toSerialize["IsNews"] = o.IsNews.Get()
	}
	if o.IsKids.IsSet() {
		toSerialize["IsKids"] = o.IsKids.Get()
	}
	if o.IsPremiere.IsSet() {
		toSerialize["IsPremiere"] = o.IsPremiere.Get()
	}
	if !IsNil(o.TimerId) {
		toSerialize["TimerId"] = o.TimerId
	}
	if !IsNil(o.CurrentProgram) {
		toSerialize["CurrentProgram"] = o.CurrentProgram
	}
	if o.MovieCount.IsSet() {
		toSerialize["MovieCount"] = o.MovieCount.Get()
	}
	if o.SeriesCount.IsSet() {
		toSerialize["SeriesCount"] = o.SeriesCount.Get()
	}
	if o.AlbumCount.IsSet() {
		toSerialize["AlbumCount"] = o.AlbumCount.Get()
	}
	if o.SongCount.IsSet() {
		toSerialize["SongCount"] = o.SongCount.Get()
	}
	if o.MusicVideoCount.IsSet() {
		toSerialize["MusicVideoCount"] = o.MusicVideoCount.Get()
	}
	return toSerialize, nil
}

type NullableBaseItemDto struct {
	value *BaseItemDto
	isSet bool
}

func (v NullableBaseItemDto) Get() *BaseItemDto {
	return v.value
}

func (v *NullableBaseItemDto) Set(val *BaseItemDto) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseItemDto) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseItemDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseItemDto(val *BaseItemDto) *NullableBaseItemDto {
	return &NullableBaseItemDto{value: val, isSet: true}
}

func (v NullableBaseItemDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseItemDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


