/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AuthenticateUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticateUser{}

// AuthenticateUser struct for AuthenticateUser
type AuthenticateUser struct {
	Pw *string `json:"Pw,omitempty"`
	Password *string `json:"Password,omitempty"`
}

// NewAuthenticateUser instantiates a new AuthenticateUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticateUser() *AuthenticateUser {
	this := AuthenticateUser{}
	return &this
}

// NewAuthenticateUserWithDefaults instantiates a new AuthenticateUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticateUserWithDefaults() *AuthenticateUser {
	this := AuthenticateUser{}
	return &this
}

// GetPw returns the Pw field value if set, zero value otherwise.
func (o *AuthenticateUser) GetPw() string {
	if o == nil || IsNil(o.Pw) {
		var ret string
		return ret
	}
	return *o.Pw
}

// GetPwOk returns a tuple with the Pw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticateUser) GetPwOk() (*string, bool) {
	if o == nil || IsNil(o.Pw) {
		return nil, false
	}
	return o.Pw, true
}

// HasPw returns a boolean if a field has been set.
func (o *AuthenticateUser) HasPw() bool {
	if o != nil && !IsNil(o.Pw) {
		return true
	}

	return false
}

// SetPw gets a reference to the given string and assigns it to the Pw field.
func (o *AuthenticateUser) SetPw(v string) {
	o.Pw = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *AuthenticateUser) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticateUser) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *AuthenticateUser) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *AuthenticateUser) SetPassword(v string) {
	o.Password = &v
}

func (o AuthenticateUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticateUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pw) {
		toSerialize["Pw"] = o.Pw
	}
	if !IsNil(o.Password) {
		toSerialize["Password"] = o.Password
	}
	return toSerialize, nil
}

type NullableAuthenticateUser struct {
	value *AuthenticateUser
	isSet bool
}

func (v NullableAuthenticateUser) Get() *AuthenticateUser {
	return v.value
}

func (v *NullableAuthenticateUser) Set(val *AuthenticateUser) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticateUser) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticateUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticateUser(val *AuthenticateUser) *NullableAuthenticateUser {
	return &NullableAuthenticateUser{value: val, isSet: true}
}

func (v NullableAuthenticateUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticateUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


