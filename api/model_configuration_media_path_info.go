/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ConfigurationMediaPathInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigurationMediaPathInfo{}

// ConfigurationMediaPathInfo struct for ConfigurationMediaPathInfo
type ConfigurationMediaPathInfo struct {
	Path *string `json:"Path,omitempty"`
	NetworkPath *string `json:"NetworkPath,omitempty"`
}

// NewConfigurationMediaPathInfo instantiates a new ConfigurationMediaPathInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigurationMediaPathInfo() *ConfigurationMediaPathInfo {
	this := ConfigurationMediaPathInfo{}
	return &this
}

// NewConfigurationMediaPathInfoWithDefaults instantiates a new ConfigurationMediaPathInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigurationMediaPathInfoWithDefaults() *ConfigurationMediaPathInfo {
	this := ConfigurationMediaPathInfo{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ConfigurationMediaPathInfo) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationMediaPathInfo) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ConfigurationMediaPathInfo) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ConfigurationMediaPathInfo) SetPath(v string) {
	o.Path = &v
}

// GetNetworkPath returns the NetworkPath field value if set, zero value otherwise.
func (o *ConfigurationMediaPathInfo) GetNetworkPath() string {
	if o == nil || IsNil(o.NetworkPath) {
		var ret string
		return ret
	}
	return *o.NetworkPath
}

// GetNetworkPathOk returns a tuple with the NetworkPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationMediaPathInfo) GetNetworkPathOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkPath) {
		return nil, false
	}
	return o.NetworkPath, true
}

// HasNetworkPath returns a boolean if a field has been set.
func (o *ConfigurationMediaPathInfo) HasNetworkPath() bool {
	if o != nil && !IsNil(o.NetworkPath) {
		return true
	}

	return false
}

// SetNetworkPath gets a reference to the given string and assigns it to the NetworkPath field.
func (o *ConfigurationMediaPathInfo) SetNetworkPath(v string) {
	o.NetworkPath = &v
}

func (o ConfigurationMediaPathInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigurationMediaPathInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["Path"] = o.Path
	}
	if !IsNil(o.NetworkPath) {
		toSerialize["NetworkPath"] = o.NetworkPath
	}
	return toSerialize, nil
}

type NullableConfigurationMediaPathInfo struct {
	value *ConfigurationMediaPathInfo
	isSet bool
}

func (v NullableConfigurationMediaPathInfo) Get() *ConfigurationMediaPathInfo {
	return v.value
}

func (v *NullableConfigurationMediaPathInfo) Set(val *ConfigurationMediaPathInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigurationMediaPathInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigurationMediaPathInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigurationMediaPathInfo(val *ConfigurationMediaPathInfo) *NullableConfigurationMediaPathInfo {
	return &NullableConfigurationMediaPathInfo{value: val, isSet: true}
}

func (v NullableConfigurationMediaPathInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigurationMediaPathInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


