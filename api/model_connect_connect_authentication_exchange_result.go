/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ConnectConnectAuthenticationExchangeResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectConnectAuthenticationExchangeResult{}

// ConnectConnectAuthenticationExchangeResult struct for ConnectConnectAuthenticationExchangeResult
type ConnectConnectAuthenticationExchangeResult struct {
	LocalUserId *string `json:"LocalUserId,omitempty"`
	AccessToken *string `json:"AccessToken,omitempty"`
}

// NewConnectConnectAuthenticationExchangeResult instantiates a new ConnectConnectAuthenticationExchangeResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectConnectAuthenticationExchangeResult() *ConnectConnectAuthenticationExchangeResult {
	this := ConnectConnectAuthenticationExchangeResult{}
	return &this
}

// NewConnectConnectAuthenticationExchangeResultWithDefaults instantiates a new ConnectConnectAuthenticationExchangeResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectConnectAuthenticationExchangeResultWithDefaults() *ConnectConnectAuthenticationExchangeResult {
	this := ConnectConnectAuthenticationExchangeResult{}
	return &this
}

// GetLocalUserId returns the LocalUserId field value if set, zero value otherwise.
func (o *ConnectConnectAuthenticationExchangeResult) GetLocalUserId() string {
	if o == nil || IsNil(o.LocalUserId) {
		var ret string
		return ret
	}
	return *o.LocalUserId
}

// GetLocalUserIdOk returns a tuple with the LocalUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectConnectAuthenticationExchangeResult) GetLocalUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocalUserId) {
		return nil, false
	}
	return o.LocalUserId, true
}

// HasLocalUserId returns a boolean if a field has been set.
func (o *ConnectConnectAuthenticationExchangeResult) HasLocalUserId() bool {
	if o != nil && !IsNil(o.LocalUserId) {
		return true
	}

	return false
}

// SetLocalUserId gets a reference to the given string and assigns it to the LocalUserId field.
func (o *ConnectConnectAuthenticationExchangeResult) SetLocalUserId(v string) {
	o.LocalUserId = &v
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *ConnectConnectAuthenticationExchangeResult) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectConnectAuthenticationExchangeResult) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *ConnectConnectAuthenticationExchangeResult) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *ConnectConnectAuthenticationExchangeResult) SetAccessToken(v string) {
	o.AccessToken = &v
}

func (o ConnectConnectAuthenticationExchangeResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectConnectAuthenticationExchangeResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LocalUserId) {
		toSerialize["LocalUserId"] = o.LocalUserId
	}
	if !IsNil(o.AccessToken) {
		toSerialize["AccessToken"] = o.AccessToken
	}
	return toSerialize, nil
}

type NullableConnectConnectAuthenticationExchangeResult struct {
	value *ConnectConnectAuthenticationExchangeResult
	isSet bool
}

func (v NullableConnectConnectAuthenticationExchangeResult) Get() *ConnectConnectAuthenticationExchangeResult {
	return v.value
}

func (v *NullableConnectConnectAuthenticationExchangeResult) Set(val *ConnectConnectAuthenticationExchangeResult) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectConnectAuthenticationExchangeResult) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectConnectAuthenticationExchangeResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectConnectAuthenticationExchangeResult(val *ConnectConnectAuthenticationExchangeResult) *NullableConnectConnectAuthenticationExchangeResult {
	return &NullableConnectConnectAuthenticationExchangeResult{value: val, isSet: true}
}

func (v NullableConnectConnectAuthenticationExchangeResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectConnectAuthenticationExchangeResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


