/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the LiveTvListingsProviderInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LiveTvListingsProviderInfo{}

// LiveTvListingsProviderInfo struct for LiveTvListingsProviderInfo
type LiveTvListingsProviderInfo struct {
	Name *string `json:"Name,omitempty"`
	SetupUrl *string `json:"SetupUrl,omitempty"`
	Id *string `json:"Id,omitempty"`
	Type *string `json:"Type,omitempty"`
	Username *string `json:"Username,omitempty"`
	Password *string `json:"Password,omitempty"`
	ListingsId *string `json:"ListingsId,omitempty"`
	ZipCode *string `json:"ZipCode,omitempty"`
	Country *string `json:"Country,omitempty"`
	Path *string `json:"Path,omitempty"`
	EnabledTuners []string `json:"EnabledTuners,omitempty"`
	EnableAllTuners *bool `json:"EnableAllTuners,omitempty"`
	NewsCategories []string `json:"NewsCategories,omitempty"`
	SportsCategories []string `json:"SportsCategories,omitempty"`
	KidsCategories []string `json:"KidsCategories,omitempty"`
	MovieCategories []string `json:"MovieCategories,omitempty"`
	ChannelMappings []NameValuePair `json:"ChannelMappings,omitempty"`
	MoviePrefix *string `json:"MoviePrefix,omitempty"`
	PreferredLanguage *string `json:"PreferredLanguage,omitempty"`
	UserAgent *string `json:"UserAgent,omitempty"`
}

// NewLiveTvListingsProviderInfo instantiates a new LiveTvListingsProviderInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveTvListingsProviderInfo() *LiveTvListingsProviderInfo {
	this := LiveTvListingsProviderInfo{}
	return &this
}

// NewLiveTvListingsProviderInfoWithDefaults instantiates a new LiveTvListingsProviderInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveTvListingsProviderInfoWithDefaults() *LiveTvListingsProviderInfo {
	this := LiveTvListingsProviderInfo{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LiveTvListingsProviderInfo) SetName(v string) {
	o.Name = &v
}

// GetSetupUrl returns the SetupUrl field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetSetupUrl() string {
	if o == nil || IsNil(o.SetupUrl) {
		var ret string
		return ret
	}
	return *o.SetupUrl
}

// GetSetupUrlOk returns a tuple with the SetupUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetSetupUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SetupUrl) {
		return nil, false
	}
	return o.SetupUrl, true
}

// HasSetupUrl returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasSetupUrl() bool {
	if o != nil && !IsNil(o.SetupUrl) {
		return true
	}

	return false
}

// SetSetupUrl gets a reference to the given string and assigns it to the SetupUrl field.
func (o *LiveTvListingsProviderInfo) SetSetupUrl(v string) {
	o.SetupUrl = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LiveTvListingsProviderInfo) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *LiveTvListingsProviderInfo) SetType(v string) {
	o.Type = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *LiveTvListingsProviderInfo) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *LiveTvListingsProviderInfo) SetPassword(v string) {
	o.Password = &v
}

// GetListingsId returns the ListingsId field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetListingsId() string {
	if o == nil || IsNil(o.ListingsId) {
		var ret string
		return ret
	}
	return *o.ListingsId
}

// GetListingsIdOk returns a tuple with the ListingsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetListingsIdOk() (*string, bool) {
	if o == nil || IsNil(o.ListingsId) {
		return nil, false
	}
	return o.ListingsId, true
}

// HasListingsId returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasListingsId() bool {
	if o != nil && !IsNil(o.ListingsId) {
		return true
	}

	return false
}

// SetListingsId gets a reference to the given string and assigns it to the ListingsId field.
func (o *LiveTvListingsProviderInfo) SetListingsId(v string) {
	o.ListingsId = &v
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetZipCode() string {
	if o == nil || IsNil(o.ZipCode) {
		var ret string
		return ret
	}
	return *o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetZipCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ZipCode) {
		return nil, false
	}
	return o.ZipCode, true
}

// HasZipCode returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasZipCode() bool {
	if o != nil && !IsNil(o.ZipCode) {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given string and assigns it to the ZipCode field.
func (o *LiveTvListingsProviderInfo) SetZipCode(v string) {
	o.ZipCode = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *LiveTvListingsProviderInfo) SetCountry(v string) {
	o.Country = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *LiveTvListingsProviderInfo) SetPath(v string) {
	o.Path = &v
}

// GetEnabledTuners returns the EnabledTuners field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetEnabledTuners() []string {
	if o == nil || IsNil(o.EnabledTuners) {
		var ret []string
		return ret
	}
	return o.EnabledTuners
}

// GetEnabledTunersOk returns a tuple with the EnabledTuners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetEnabledTunersOk() ([]string, bool) {
	if o == nil || IsNil(o.EnabledTuners) {
		return nil, false
	}
	return o.EnabledTuners, true
}

// HasEnabledTuners returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasEnabledTuners() bool {
	if o != nil && !IsNil(o.EnabledTuners) {
		return true
	}

	return false
}

// SetEnabledTuners gets a reference to the given []string and assigns it to the EnabledTuners field.
func (o *LiveTvListingsProviderInfo) SetEnabledTuners(v []string) {
	o.EnabledTuners = v
}

// GetEnableAllTuners returns the EnableAllTuners field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetEnableAllTuners() bool {
	if o == nil || IsNil(o.EnableAllTuners) {
		var ret bool
		return ret
	}
	return *o.EnableAllTuners
}

// GetEnableAllTunersOk returns a tuple with the EnableAllTuners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetEnableAllTunersOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAllTuners) {
		return nil, false
	}
	return o.EnableAllTuners, true
}

// HasEnableAllTuners returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasEnableAllTuners() bool {
	if o != nil && !IsNil(o.EnableAllTuners) {
		return true
	}

	return false
}

// SetEnableAllTuners gets a reference to the given bool and assigns it to the EnableAllTuners field.
func (o *LiveTvListingsProviderInfo) SetEnableAllTuners(v bool) {
	o.EnableAllTuners = &v
}

// GetNewsCategories returns the NewsCategories field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetNewsCategories() []string {
	if o == nil || IsNil(o.NewsCategories) {
		var ret []string
		return ret
	}
	return o.NewsCategories
}

// GetNewsCategoriesOk returns a tuple with the NewsCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetNewsCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.NewsCategories) {
		return nil, false
	}
	return o.NewsCategories, true
}

// HasNewsCategories returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasNewsCategories() bool {
	if o != nil && !IsNil(o.NewsCategories) {
		return true
	}

	return false
}

// SetNewsCategories gets a reference to the given []string and assigns it to the NewsCategories field.
func (o *LiveTvListingsProviderInfo) SetNewsCategories(v []string) {
	o.NewsCategories = v
}

// GetSportsCategories returns the SportsCategories field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetSportsCategories() []string {
	if o == nil || IsNil(o.SportsCategories) {
		var ret []string
		return ret
	}
	return o.SportsCategories
}

// GetSportsCategoriesOk returns a tuple with the SportsCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetSportsCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.SportsCategories) {
		return nil, false
	}
	return o.SportsCategories, true
}

// HasSportsCategories returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasSportsCategories() bool {
	if o != nil && !IsNil(o.SportsCategories) {
		return true
	}

	return false
}

// SetSportsCategories gets a reference to the given []string and assigns it to the SportsCategories field.
func (o *LiveTvListingsProviderInfo) SetSportsCategories(v []string) {
	o.SportsCategories = v
}

// GetKidsCategories returns the KidsCategories field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetKidsCategories() []string {
	if o == nil || IsNil(o.KidsCategories) {
		var ret []string
		return ret
	}
	return o.KidsCategories
}

// GetKidsCategoriesOk returns a tuple with the KidsCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetKidsCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.KidsCategories) {
		return nil, false
	}
	return o.KidsCategories, true
}

// HasKidsCategories returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasKidsCategories() bool {
	if o != nil && !IsNil(o.KidsCategories) {
		return true
	}

	return false
}

// SetKidsCategories gets a reference to the given []string and assigns it to the KidsCategories field.
func (o *LiveTvListingsProviderInfo) SetKidsCategories(v []string) {
	o.KidsCategories = v
}

// GetMovieCategories returns the MovieCategories field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetMovieCategories() []string {
	if o == nil || IsNil(o.MovieCategories) {
		var ret []string
		return ret
	}
	return o.MovieCategories
}

// GetMovieCategoriesOk returns a tuple with the MovieCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetMovieCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.MovieCategories) {
		return nil, false
	}
	return o.MovieCategories, true
}

// HasMovieCategories returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasMovieCategories() bool {
	if o != nil && !IsNil(o.MovieCategories) {
		return true
	}

	return false
}

// SetMovieCategories gets a reference to the given []string and assigns it to the MovieCategories field.
func (o *LiveTvListingsProviderInfo) SetMovieCategories(v []string) {
	o.MovieCategories = v
}

// GetChannelMappings returns the ChannelMappings field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetChannelMappings() []NameValuePair {
	if o == nil || IsNil(o.ChannelMappings) {
		var ret []NameValuePair
		return ret
	}
	return o.ChannelMappings
}

// GetChannelMappingsOk returns a tuple with the ChannelMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetChannelMappingsOk() ([]NameValuePair, bool) {
	if o == nil || IsNil(o.ChannelMappings) {
		return nil, false
	}
	return o.ChannelMappings, true
}

// HasChannelMappings returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasChannelMappings() bool {
	if o != nil && !IsNil(o.ChannelMappings) {
		return true
	}

	return false
}

// SetChannelMappings gets a reference to the given []NameValuePair and assigns it to the ChannelMappings field.
func (o *LiveTvListingsProviderInfo) SetChannelMappings(v []NameValuePair) {
	o.ChannelMappings = v
}

// GetMoviePrefix returns the MoviePrefix field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetMoviePrefix() string {
	if o == nil || IsNil(o.MoviePrefix) {
		var ret string
		return ret
	}
	return *o.MoviePrefix
}

// GetMoviePrefixOk returns a tuple with the MoviePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetMoviePrefixOk() (*string, bool) {
	if o == nil || IsNil(o.MoviePrefix) {
		return nil, false
	}
	return o.MoviePrefix, true
}

// HasMoviePrefix returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasMoviePrefix() bool {
	if o != nil && !IsNil(o.MoviePrefix) {
		return true
	}

	return false
}

// SetMoviePrefix gets a reference to the given string and assigns it to the MoviePrefix field.
func (o *LiveTvListingsProviderInfo) SetMoviePrefix(v string) {
	o.MoviePrefix = &v
}

// GetPreferredLanguage returns the PreferredLanguage field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetPreferredLanguage() string {
	if o == nil || IsNil(o.PreferredLanguage) {
		var ret string
		return ret
	}
	return *o.PreferredLanguage
}

// GetPreferredLanguageOk returns a tuple with the PreferredLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetPreferredLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredLanguage) {
		return nil, false
	}
	return o.PreferredLanguage, true
}

// HasPreferredLanguage returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasPreferredLanguage() bool {
	if o != nil && !IsNil(o.PreferredLanguage) {
		return true
	}

	return false
}

// SetPreferredLanguage gets a reference to the given string and assigns it to the PreferredLanguage field.
func (o *LiveTvListingsProviderInfo) SetPreferredLanguage(v string) {
	o.PreferredLanguage = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *LiveTvListingsProviderInfo) GetUserAgent() string {
	if o == nil || IsNil(o.UserAgent) {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvListingsProviderInfo) GetUserAgentOk() (*string, bool) {
	if o == nil || IsNil(o.UserAgent) {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *LiveTvListingsProviderInfo) HasUserAgent() bool {
	if o != nil && !IsNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *LiveTvListingsProviderInfo) SetUserAgent(v string) {
	o.UserAgent = &v
}

func (o LiveTvListingsProviderInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LiveTvListingsProviderInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.SetupUrl) {
		toSerialize["SetupUrl"] = o.SetupUrl
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.Username) {
		toSerialize["Username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["Password"] = o.Password
	}
	if !IsNil(o.ListingsId) {
		toSerialize["ListingsId"] = o.ListingsId
	}
	if !IsNil(o.ZipCode) {
		toSerialize["ZipCode"] = o.ZipCode
	}
	if !IsNil(o.Country) {
		toSerialize["Country"] = o.Country
	}
	if !IsNil(o.Path) {
		toSerialize["Path"] = o.Path
	}
	if !IsNil(o.EnabledTuners) {
		toSerialize["EnabledTuners"] = o.EnabledTuners
	}
	if !IsNil(o.EnableAllTuners) {
		toSerialize["EnableAllTuners"] = o.EnableAllTuners
	}
	if !IsNil(o.NewsCategories) {
		toSerialize["NewsCategories"] = o.NewsCategories
	}
	if !IsNil(o.SportsCategories) {
		toSerialize["SportsCategories"] = o.SportsCategories
	}
	if !IsNil(o.KidsCategories) {
		toSerialize["KidsCategories"] = o.KidsCategories
	}
	if !IsNil(o.MovieCategories) {
		toSerialize["MovieCategories"] = o.MovieCategories
	}
	if !IsNil(o.ChannelMappings) {
		toSerialize["ChannelMappings"] = o.ChannelMappings
	}
	if !IsNil(o.MoviePrefix) {
		toSerialize["MoviePrefix"] = o.MoviePrefix
	}
	if !IsNil(o.PreferredLanguage) {
		toSerialize["PreferredLanguage"] = o.PreferredLanguage
	}
	if !IsNil(o.UserAgent) {
		toSerialize["UserAgent"] = o.UserAgent
	}
	return toSerialize, nil
}

type NullableLiveTvListingsProviderInfo struct {
	value *LiveTvListingsProviderInfo
	isSet bool
}

func (v NullableLiveTvListingsProviderInfo) Get() *LiveTvListingsProviderInfo {
	return v.value
}

func (v *NullableLiveTvListingsProviderInfo) Set(val *LiveTvListingsProviderInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveTvListingsProviderInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveTvListingsProviderInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveTvListingsProviderInfo(val *LiveTvListingsProviderInfo) *NullableLiveTvListingsProviderInfo {
	return &NullableLiveTvListingsProviderInfo{value: val, isSet: true}
}

func (v NullableLiveTvListingsProviderInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveTvListingsProviderInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


