/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PlaybackReportingApiCustomQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaybackReportingApiCustomQuery{}

// PlaybackReportingApiCustomQuery struct for PlaybackReportingApiCustomQuery
type PlaybackReportingApiCustomQuery struct {
	CustomQueryString *string `json:"CustomQueryString,omitempty"`
	ReplaceUserId *bool `json:"ReplaceUserId,omitempty"`
}

// NewPlaybackReportingApiCustomQuery instantiates a new PlaybackReportingApiCustomQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaybackReportingApiCustomQuery() *PlaybackReportingApiCustomQuery {
	this := PlaybackReportingApiCustomQuery{}
	return &this
}

// NewPlaybackReportingApiCustomQueryWithDefaults instantiates a new PlaybackReportingApiCustomQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaybackReportingApiCustomQueryWithDefaults() *PlaybackReportingApiCustomQuery {
	this := PlaybackReportingApiCustomQuery{}
	return &this
}

// GetCustomQueryString returns the CustomQueryString field value if set, zero value otherwise.
func (o *PlaybackReportingApiCustomQuery) GetCustomQueryString() string {
	if o == nil || IsNil(o.CustomQueryString) {
		var ret string
		return ret
	}
	return *o.CustomQueryString
}

// GetCustomQueryStringOk returns a tuple with the CustomQueryString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaybackReportingApiCustomQuery) GetCustomQueryStringOk() (*string, bool) {
	if o == nil || IsNil(o.CustomQueryString) {
		return nil, false
	}
	return o.CustomQueryString, true
}

// HasCustomQueryString returns a boolean if a field has been set.
func (o *PlaybackReportingApiCustomQuery) HasCustomQueryString() bool {
	if o != nil && !IsNil(o.CustomQueryString) {
		return true
	}

	return false
}

// SetCustomQueryString gets a reference to the given string and assigns it to the CustomQueryString field.
func (o *PlaybackReportingApiCustomQuery) SetCustomQueryString(v string) {
	o.CustomQueryString = &v
}

// GetReplaceUserId returns the ReplaceUserId field value if set, zero value otherwise.
func (o *PlaybackReportingApiCustomQuery) GetReplaceUserId() bool {
	if o == nil || IsNil(o.ReplaceUserId) {
		var ret bool
		return ret
	}
	return *o.ReplaceUserId
}

// GetReplaceUserIdOk returns a tuple with the ReplaceUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaybackReportingApiCustomQuery) GetReplaceUserIdOk() (*bool, bool) {
	if o == nil || IsNil(o.ReplaceUserId) {
		return nil, false
	}
	return o.ReplaceUserId, true
}

// HasReplaceUserId returns a boolean if a field has been set.
func (o *PlaybackReportingApiCustomQuery) HasReplaceUserId() bool {
	if o != nil && !IsNil(o.ReplaceUserId) {
		return true
	}

	return false
}

// SetReplaceUserId gets a reference to the given bool and assigns it to the ReplaceUserId field.
func (o *PlaybackReportingApiCustomQuery) SetReplaceUserId(v bool) {
	o.ReplaceUserId = &v
}

func (o PlaybackReportingApiCustomQuery) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaybackReportingApiCustomQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomQueryString) {
		toSerialize["CustomQueryString"] = o.CustomQueryString
	}
	if !IsNil(o.ReplaceUserId) {
		toSerialize["ReplaceUserId"] = o.ReplaceUserId
	}
	return toSerialize, nil
}

type NullablePlaybackReportingApiCustomQuery struct {
	value *PlaybackReportingApiCustomQuery
	isSet bool
}

func (v NullablePlaybackReportingApiCustomQuery) Get() *PlaybackReportingApiCustomQuery {
	return v.value
}

func (v *NullablePlaybackReportingApiCustomQuery) Set(val *PlaybackReportingApiCustomQuery) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaybackReportingApiCustomQuery) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaybackReportingApiCustomQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaybackReportingApiCustomQuery(val *PlaybackReportingApiCustomQuery) *NullablePlaybackReportingApiCustomQuery {
	return &NullablePlaybackReportingApiCustomQuery{value: val, isSet: true}
}

func (v NullablePlaybackReportingApiCustomQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaybackReportingApiCustomQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


