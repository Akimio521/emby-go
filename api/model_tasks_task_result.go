/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the TasksTaskResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TasksTaskResult{}

// TasksTaskResult struct for TasksTaskResult
type TasksTaskResult struct {
	StartTimeUtc *time.Time `json:"StartTimeUtc,omitempty"`
	EndTimeUtc *time.Time `json:"EndTimeUtc,omitempty"`
	Status *string `json:"Status,omitempty"`
	Name *string `json:"Name,omitempty"`
	Key *string `json:"Key,omitempty"`
	Id *string `json:"Id,omitempty"`
	ErrorMessage *string `json:"ErrorMessage,omitempty"`
	LongErrorMessage *string `json:"LongErrorMessage,omitempty"`
}

// NewTasksTaskResult instantiates a new TasksTaskResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTasksTaskResult() *TasksTaskResult {
	this := TasksTaskResult{}
	return &this
}

// NewTasksTaskResultWithDefaults instantiates a new TasksTaskResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTasksTaskResultWithDefaults() *TasksTaskResult {
	this := TasksTaskResult{}
	return &this
}

// GetStartTimeUtc returns the StartTimeUtc field value if set, zero value otherwise.
func (o *TasksTaskResult) GetStartTimeUtc() time.Time {
	if o == nil || IsNil(o.StartTimeUtc) {
		var ret time.Time
		return ret
	}
	return *o.StartTimeUtc
}

// GetStartTimeUtcOk returns a tuple with the StartTimeUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasksTaskResult) GetStartTimeUtcOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTimeUtc) {
		return nil, false
	}
	return o.StartTimeUtc, true
}

// HasStartTimeUtc returns a boolean if a field has been set.
func (o *TasksTaskResult) HasStartTimeUtc() bool {
	if o != nil && !IsNil(o.StartTimeUtc) {
		return true
	}

	return false
}

// SetStartTimeUtc gets a reference to the given time.Time and assigns it to the StartTimeUtc field.
func (o *TasksTaskResult) SetStartTimeUtc(v time.Time) {
	o.StartTimeUtc = &v
}

// GetEndTimeUtc returns the EndTimeUtc field value if set, zero value otherwise.
func (o *TasksTaskResult) GetEndTimeUtc() time.Time {
	if o == nil || IsNil(o.EndTimeUtc) {
		var ret time.Time
		return ret
	}
	return *o.EndTimeUtc
}

// GetEndTimeUtcOk returns a tuple with the EndTimeUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasksTaskResult) GetEndTimeUtcOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTimeUtc) {
		return nil, false
	}
	return o.EndTimeUtc, true
}

// HasEndTimeUtc returns a boolean if a field has been set.
func (o *TasksTaskResult) HasEndTimeUtc() bool {
	if o != nil && !IsNil(o.EndTimeUtc) {
		return true
	}

	return false
}

// SetEndTimeUtc gets a reference to the given time.Time and assigns it to the EndTimeUtc field.
func (o *TasksTaskResult) SetEndTimeUtc(v time.Time) {
	o.EndTimeUtc = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TasksTaskResult) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasksTaskResult) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TasksTaskResult) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TasksTaskResult) SetStatus(v string) {
	o.Status = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TasksTaskResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasksTaskResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TasksTaskResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TasksTaskResult) SetName(v string) {
	o.Name = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *TasksTaskResult) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasksTaskResult) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *TasksTaskResult) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *TasksTaskResult) SetKey(v string) {
	o.Key = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TasksTaskResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasksTaskResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TasksTaskResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TasksTaskResult) SetId(v string) {
	o.Id = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *TasksTaskResult) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasksTaskResult) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *TasksTaskResult) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *TasksTaskResult) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetLongErrorMessage returns the LongErrorMessage field value if set, zero value otherwise.
func (o *TasksTaskResult) GetLongErrorMessage() string {
	if o == nil || IsNil(o.LongErrorMessage) {
		var ret string
		return ret
	}
	return *o.LongErrorMessage
}

// GetLongErrorMessageOk returns a tuple with the LongErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TasksTaskResult) GetLongErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.LongErrorMessage) {
		return nil, false
	}
	return o.LongErrorMessage, true
}

// HasLongErrorMessage returns a boolean if a field has been set.
func (o *TasksTaskResult) HasLongErrorMessage() bool {
	if o != nil && !IsNil(o.LongErrorMessage) {
		return true
	}

	return false
}

// SetLongErrorMessage gets a reference to the given string and assigns it to the LongErrorMessage field.
func (o *TasksTaskResult) SetLongErrorMessage(v string) {
	o.LongErrorMessage = &v
}

func (o TasksTaskResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TasksTaskResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartTimeUtc) {
		toSerialize["StartTimeUtc"] = o.StartTimeUtc
	}
	if !IsNil(o.EndTimeUtc) {
		toSerialize["EndTimeUtc"] = o.EndTimeUtc
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Key) {
		toSerialize["Key"] = o.Key
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["ErrorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.LongErrorMessage) {
		toSerialize["LongErrorMessage"] = o.LongErrorMessage
	}
	return toSerialize, nil
}

type NullableTasksTaskResult struct {
	value *TasksTaskResult
	isSet bool
}

func (v NullableTasksTaskResult) Get() *TasksTaskResult {
	return v.value
}

func (v *NullableTasksTaskResult) Set(val *TasksTaskResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTasksTaskResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTasksTaskResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTasksTaskResult(val *TasksTaskResult) *NullableTasksTaskResult {
	return &NullableTasksTaskResult{value: val, isSet: true}
}

func (v NullableTasksTaskResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTasksTaskResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


