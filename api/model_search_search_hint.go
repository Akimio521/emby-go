/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the SearchSearchHint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchSearchHint{}

// SearchSearchHint struct for SearchSearchHint
type SearchSearchHint struct {
	ItemId *int64 `json:"ItemId,omitempty"`
	Id *int64 `json:"Id,omitempty"`
	Name *string `json:"Name,omitempty"`
	MatchedTerm *string `json:"MatchedTerm,omitempty"`
	IndexNumber NullableInt32 `json:"IndexNumber,omitempty"`
	ProductionYear NullableInt32 `json:"ProductionYear,omitempty"`
	ParentIndexNumber NullableInt32 `json:"ParentIndexNumber,omitempty"`
	PrimaryImageTag *string `json:"PrimaryImageTag,omitempty"`
	ThumbImageTag *string `json:"ThumbImageTag,omitempty"`
	ThumbImageItemId *string `json:"ThumbImageItemId,omitempty"`
	BackdropImageTag *string `json:"BackdropImageTag,omitempty"`
	BackdropImageItemId *string `json:"BackdropImageItemId,omitempty"`
	Type *string `json:"Type,omitempty"`
	IsFolder NullableBool `json:"IsFolder,omitempty"`
	RunTimeTicks NullableInt64 `json:"RunTimeTicks,omitempty"`
	MediaType *string `json:"MediaType,omitempty"`
	StartDate NullableTime `json:"StartDate,omitempty"`
	EndDate NullableTime `json:"EndDate,omitempty"`
	Series *string `json:"Series,omitempty"`
	Status *string `json:"Status,omitempty"`
	Album *string `json:"Album,omitempty"`
	AlbumId *int64 `json:"AlbumId,omitempty"`
	AlbumArtist *string `json:"AlbumArtist,omitempty"`
	Artists []string `json:"Artists,omitempty"`
	SongCount NullableInt32 `json:"SongCount,omitempty"`
	EpisodeCount NullableInt32 `json:"EpisodeCount,omitempty"`
	ChannelName *string `json:"ChannelName,omitempty"`
	PrimaryImageAspectRatio NullableFloat64 `json:"PrimaryImageAspectRatio,omitempty"`
}

// NewSearchSearchHint instantiates a new SearchSearchHint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchSearchHint() *SearchSearchHint {
	this := SearchSearchHint{}
	return &this
}

// NewSearchSearchHintWithDefaults instantiates a new SearchSearchHint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchSearchHintWithDefaults() *SearchSearchHint {
	this := SearchSearchHint{}
	return &this
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *SearchSearchHint) GetItemId() int64 {
	if o == nil || IsNil(o.ItemId) {
		var ret int64
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetItemIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *SearchSearchHint) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given int64 and assigns it to the ItemId field.
func (o *SearchSearchHint) SetItemId(v int64) {
	o.ItemId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SearchSearchHint) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SearchSearchHint) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *SearchSearchHint) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SearchSearchHint) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SearchSearchHint) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SearchSearchHint) SetName(v string) {
	o.Name = &v
}

// GetMatchedTerm returns the MatchedTerm field value if set, zero value otherwise.
func (o *SearchSearchHint) GetMatchedTerm() string {
	if o == nil || IsNil(o.MatchedTerm) {
		var ret string
		return ret
	}
	return *o.MatchedTerm
}

// GetMatchedTermOk returns a tuple with the MatchedTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetMatchedTermOk() (*string, bool) {
	if o == nil || IsNil(o.MatchedTerm) {
		return nil, false
	}
	return o.MatchedTerm, true
}

// HasMatchedTerm returns a boolean if a field has been set.
func (o *SearchSearchHint) HasMatchedTerm() bool {
	if o != nil && !IsNil(o.MatchedTerm) {
		return true
	}

	return false
}

// SetMatchedTerm gets a reference to the given string and assigns it to the MatchedTerm field.
func (o *SearchSearchHint) SetMatchedTerm(v string) {
	o.MatchedTerm = &v
}

// GetIndexNumber returns the IndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchSearchHint) GetIndexNumber() int32 {
	if o == nil || IsNil(o.IndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.IndexNumber.Get()
}

// GetIndexNumberOk returns a tuple with the IndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchSearchHint) GetIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexNumber.Get(), o.IndexNumber.IsSet()
}

// HasIndexNumber returns a boolean if a field has been set.
func (o *SearchSearchHint) HasIndexNumber() bool {
	if o != nil && o.IndexNumber.IsSet() {
		return true
	}

	return false
}

// SetIndexNumber gets a reference to the given NullableInt32 and assigns it to the IndexNumber field.
func (o *SearchSearchHint) SetIndexNumber(v int32) {
	o.IndexNumber.Set(&v)
}
// SetIndexNumberNil sets the value for IndexNumber to be an explicit nil
func (o *SearchSearchHint) SetIndexNumberNil() {
	o.IndexNumber.Set(nil)
}

// UnsetIndexNumber ensures that no value is present for IndexNumber, not even an explicit nil
func (o *SearchSearchHint) UnsetIndexNumber() {
	o.IndexNumber.Unset()
}

// GetProductionYear returns the ProductionYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchSearchHint) GetProductionYear() int32 {
	if o == nil || IsNil(o.ProductionYear.Get()) {
		var ret int32
		return ret
	}
	return *o.ProductionYear.Get()
}

// GetProductionYearOk returns a tuple with the ProductionYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchSearchHint) GetProductionYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductionYear.Get(), o.ProductionYear.IsSet()
}

// HasProductionYear returns a boolean if a field has been set.
func (o *SearchSearchHint) HasProductionYear() bool {
	if o != nil && o.ProductionYear.IsSet() {
		return true
	}

	return false
}

// SetProductionYear gets a reference to the given NullableInt32 and assigns it to the ProductionYear field.
func (o *SearchSearchHint) SetProductionYear(v int32) {
	o.ProductionYear.Set(&v)
}
// SetProductionYearNil sets the value for ProductionYear to be an explicit nil
func (o *SearchSearchHint) SetProductionYearNil() {
	o.ProductionYear.Set(nil)
}

// UnsetProductionYear ensures that no value is present for ProductionYear, not even an explicit nil
func (o *SearchSearchHint) UnsetProductionYear() {
	o.ProductionYear.Unset()
}

// GetParentIndexNumber returns the ParentIndexNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchSearchHint) GetParentIndexNumber() int32 {
	if o == nil || IsNil(o.ParentIndexNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentIndexNumber.Get()
}

// GetParentIndexNumberOk returns a tuple with the ParentIndexNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchSearchHint) GetParentIndexNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentIndexNumber.Get(), o.ParentIndexNumber.IsSet()
}

// HasParentIndexNumber returns a boolean if a field has been set.
func (o *SearchSearchHint) HasParentIndexNumber() bool {
	if o != nil && o.ParentIndexNumber.IsSet() {
		return true
	}

	return false
}

// SetParentIndexNumber gets a reference to the given NullableInt32 and assigns it to the ParentIndexNumber field.
func (o *SearchSearchHint) SetParentIndexNumber(v int32) {
	o.ParentIndexNumber.Set(&v)
}
// SetParentIndexNumberNil sets the value for ParentIndexNumber to be an explicit nil
func (o *SearchSearchHint) SetParentIndexNumberNil() {
	o.ParentIndexNumber.Set(nil)
}

// UnsetParentIndexNumber ensures that no value is present for ParentIndexNumber, not even an explicit nil
func (o *SearchSearchHint) UnsetParentIndexNumber() {
	o.ParentIndexNumber.Unset()
}

// GetPrimaryImageTag returns the PrimaryImageTag field value if set, zero value otherwise.
func (o *SearchSearchHint) GetPrimaryImageTag() string {
	if o == nil || IsNil(o.PrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.PrimaryImageTag
}

// GetPrimaryImageTagOk returns a tuple with the PrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryImageTag) {
		return nil, false
	}
	return o.PrimaryImageTag, true
}

// HasPrimaryImageTag returns a boolean if a field has been set.
func (o *SearchSearchHint) HasPrimaryImageTag() bool {
	if o != nil && !IsNil(o.PrimaryImageTag) {
		return true
	}

	return false
}

// SetPrimaryImageTag gets a reference to the given string and assigns it to the PrimaryImageTag field.
func (o *SearchSearchHint) SetPrimaryImageTag(v string) {
	o.PrimaryImageTag = &v
}

// GetThumbImageTag returns the ThumbImageTag field value if set, zero value otherwise.
func (o *SearchSearchHint) GetThumbImageTag() string {
	if o == nil || IsNil(o.ThumbImageTag) {
		var ret string
		return ret
	}
	return *o.ThumbImageTag
}

// GetThumbImageTagOk returns a tuple with the ThumbImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetThumbImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbImageTag) {
		return nil, false
	}
	return o.ThumbImageTag, true
}

// HasThumbImageTag returns a boolean if a field has been set.
func (o *SearchSearchHint) HasThumbImageTag() bool {
	if o != nil && !IsNil(o.ThumbImageTag) {
		return true
	}

	return false
}

// SetThumbImageTag gets a reference to the given string and assigns it to the ThumbImageTag field.
func (o *SearchSearchHint) SetThumbImageTag(v string) {
	o.ThumbImageTag = &v
}

// GetThumbImageItemId returns the ThumbImageItemId field value if set, zero value otherwise.
func (o *SearchSearchHint) GetThumbImageItemId() string {
	if o == nil || IsNil(o.ThumbImageItemId) {
		var ret string
		return ret
	}
	return *o.ThumbImageItemId
}

// GetThumbImageItemIdOk returns a tuple with the ThumbImageItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetThumbImageItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbImageItemId) {
		return nil, false
	}
	return o.ThumbImageItemId, true
}

// HasThumbImageItemId returns a boolean if a field has been set.
func (o *SearchSearchHint) HasThumbImageItemId() bool {
	if o != nil && !IsNil(o.ThumbImageItemId) {
		return true
	}

	return false
}

// SetThumbImageItemId gets a reference to the given string and assigns it to the ThumbImageItemId field.
func (o *SearchSearchHint) SetThumbImageItemId(v string) {
	o.ThumbImageItemId = &v
}

// GetBackdropImageTag returns the BackdropImageTag field value if set, zero value otherwise.
func (o *SearchSearchHint) GetBackdropImageTag() string {
	if o == nil || IsNil(o.BackdropImageTag) {
		var ret string
		return ret
	}
	return *o.BackdropImageTag
}

// GetBackdropImageTagOk returns a tuple with the BackdropImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetBackdropImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.BackdropImageTag) {
		return nil, false
	}
	return o.BackdropImageTag, true
}

// HasBackdropImageTag returns a boolean if a field has been set.
func (o *SearchSearchHint) HasBackdropImageTag() bool {
	if o != nil && !IsNil(o.BackdropImageTag) {
		return true
	}

	return false
}

// SetBackdropImageTag gets a reference to the given string and assigns it to the BackdropImageTag field.
func (o *SearchSearchHint) SetBackdropImageTag(v string) {
	o.BackdropImageTag = &v
}

// GetBackdropImageItemId returns the BackdropImageItemId field value if set, zero value otherwise.
func (o *SearchSearchHint) GetBackdropImageItemId() string {
	if o == nil || IsNil(o.BackdropImageItemId) {
		var ret string
		return ret
	}
	return *o.BackdropImageItemId
}

// GetBackdropImageItemIdOk returns a tuple with the BackdropImageItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetBackdropImageItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.BackdropImageItemId) {
		return nil, false
	}
	return o.BackdropImageItemId, true
}

// HasBackdropImageItemId returns a boolean if a field has been set.
func (o *SearchSearchHint) HasBackdropImageItemId() bool {
	if o != nil && !IsNil(o.BackdropImageItemId) {
		return true
	}

	return false
}

// SetBackdropImageItemId gets a reference to the given string and assigns it to the BackdropImageItemId field.
func (o *SearchSearchHint) SetBackdropImageItemId(v string) {
	o.BackdropImageItemId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SearchSearchHint) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SearchSearchHint) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SearchSearchHint) SetType(v string) {
	o.Type = &v
}

// GetIsFolder returns the IsFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchSearchHint) GetIsFolder() bool {
	if o == nil || IsNil(o.IsFolder.Get()) {
		var ret bool
		return ret
	}
	return *o.IsFolder.Get()
}

// GetIsFolderOk returns a tuple with the IsFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchSearchHint) GetIsFolderOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsFolder.Get(), o.IsFolder.IsSet()
}

// HasIsFolder returns a boolean if a field has been set.
func (o *SearchSearchHint) HasIsFolder() bool {
	if o != nil && o.IsFolder.IsSet() {
		return true
	}

	return false
}

// SetIsFolder gets a reference to the given NullableBool and assigns it to the IsFolder field.
func (o *SearchSearchHint) SetIsFolder(v bool) {
	o.IsFolder.Set(&v)
}
// SetIsFolderNil sets the value for IsFolder to be an explicit nil
func (o *SearchSearchHint) SetIsFolderNil() {
	o.IsFolder.Set(nil)
}

// UnsetIsFolder ensures that no value is present for IsFolder, not even an explicit nil
func (o *SearchSearchHint) UnsetIsFolder() {
	o.IsFolder.Unset()
}

// GetRunTimeTicks returns the RunTimeTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchSearchHint) GetRunTimeTicks() int64 {
	if o == nil || IsNil(o.RunTimeTicks.Get()) {
		var ret int64
		return ret
	}
	return *o.RunTimeTicks.Get()
}

// GetRunTimeTicksOk returns a tuple with the RunTimeTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchSearchHint) GetRunTimeTicksOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunTimeTicks.Get(), o.RunTimeTicks.IsSet()
}

// HasRunTimeTicks returns a boolean if a field has been set.
func (o *SearchSearchHint) HasRunTimeTicks() bool {
	if o != nil && o.RunTimeTicks.IsSet() {
		return true
	}

	return false
}

// SetRunTimeTicks gets a reference to the given NullableInt64 and assigns it to the RunTimeTicks field.
func (o *SearchSearchHint) SetRunTimeTicks(v int64) {
	o.RunTimeTicks.Set(&v)
}
// SetRunTimeTicksNil sets the value for RunTimeTicks to be an explicit nil
func (o *SearchSearchHint) SetRunTimeTicksNil() {
	o.RunTimeTicks.Set(nil)
}

// UnsetRunTimeTicks ensures that no value is present for RunTimeTicks, not even an explicit nil
func (o *SearchSearchHint) UnsetRunTimeTicks() {
	o.RunTimeTicks.Unset()
}

// GetMediaType returns the MediaType field value if set, zero value otherwise.
func (o *SearchSearchHint) GetMediaType() string {
	if o == nil || IsNil(o.MediaType) {
		var ret string
		return ret
	}
	return *o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetMediaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MediaType) {
		return nil, false
	}
	return o.MediaType, true
}

// HasMediaType returns a boolean if a field has been set.
func (o *SearchSearchHint) HasMediaType() bool {
	if o != nil && !IsNil(o.MediaType) {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given string and assigns it to the MediaType field.
func (o *SearchSearchHint) SetMediaType(v string) {
	o.MediaType = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchSearchHint) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchSearchHint) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// HasStartDate returns a boolean if a field has been set.
func (o *SearchSearchHint) HasStartDate() bool {
	if o != nil && o.StartDate.IsSet() {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given NullableTime and assigns it to the StartDate field.
func (o *SearchSearchHint) SetStartDate(v time.Time) {
	o.StartDate.Set(&v)
}
// SetStartDateNil sets the value for StartDate to be an explicit nil
func (o *SearchSearchHint) SetStartDateNil() {
	o.StartDate.Set(nil)
}

// UnsetStartDate ensures that no value is present for StartDate, not even an explicit nil
func (o *SearchSearchHint) UnsetStartDate() {
	o.StartDate.Unset()
}

// GetEndDate returns the EndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchSearchHint) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EndDate.Get()
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchSearchHint) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDate.Get(), o.EndDate.IsSet()
}

// HasEndDate returns a boolean if a field has been set.
func (o *SearchSearchHint) HasEndDate() bool {
	if o != nil && o.EndDate.IsSet() {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given NullableTime and assigns it to the EndDate field.
func (o *SearchSearchHint) SetEndDate(v time.Time) {
	o.EndDate.Set(&v)
}
// SetEndDateNil sets the value for EndDate to be an explicit nil
func (o *SearchSearchHint) SetEndDateNil() {
	o.EndDate.Set(nil)
}

// UnsetEndDate ensures that no value is present for EndDate, not even an explicit nil
func (o *SearchSearchHint) UnsetEndDate() {
	o.EndDate.Unset()
}

// GetSeries returns the Series field value if set, zero value otherwise.
func (o *SearchSearchHint) GetSeries() string {
	if o == nil || IsNil(o.Series) {
		var ret string
		return ret
	}
	return *o.Series
}

// GetSeriesOk returns a tuple with the Series field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetSeriesOk() (*string, bool) {
	if o == nil || IsNil(o.Series) {
		return nil, false
	}
	return o.Series, true
}

// HasSeries returns a boolean if a field has been set.
func (o *SearchSearchHint) HasSeries() bool {
	if o != nil && !IsNil(o.Series) {
		return true
	}

	return false
}

// SetSeries gets a reference to the given string and assigns it to the Series field.
func (o *SearchSearchHint) SetSeries(v string) {
	o.Series = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SearchSearchHint) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SearchSearchHint) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SearchSearchHint) SetStatus(v string) {
	o.Status = &v
}

// GetAlbum returns the Album field value if set, zero value otherwise.
func (o *SearchSearchHint) GetAlbum() string {
	if o == nil || IsNil(o.Album) {
		var ret string
		return ret
	}
	return *o.Album
}

// GetAlbumOk returns a tuple with the Album field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetAlbumOk() (*string, bool) {
	if o == nil || IsNil(o.Album) {
		return nil, false
	}
	return o.Album, true
}

// HasAlbum returns a boolean if a field has been set.
func (o *SearchSearchHint) HasAlbum() bool {
	if o != nil && !IsNil(o.Album) {
		return true
	}

	return false
}

// SetAlbum gets a reference to the given string and assigns it to the Album field.
func (o *SearchSearchHint) SetAlbum(v string) {
	o.Album = &v
}

// GetAlbumId returns the AlbumId field value if set, zero value otherwise.
func (o *SearchSearchHint) GetAlbumId() int64 {
	if o == nil || IsNil(o.AlbumId) {
		var ret int64
		return ret
	}
	return *o.AlbumId
}

// GetAlbumIdOk returns a tuple with the AlbumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetAlbumIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AlbumId) {
		return nil, false
	}
	return o.AlbumId, true
}

// HasAlbumId returns a boolean if a field has been set.
func (o *SearchSearchHint) HasAlbumId() bool {
	if o != nil && !IsNil(o.AlbumId) {
		return true
	}

	return false
}

// SetAlbumId gets a reference to the given int64 and assigns it to the AlbumId field.
func (o *SearchSearchHint) SetAlbumId(v int64) {
	o.AlbumId = &v
}

// GetAlbumArtist returns the AlbumArtist field value if set, zero value otherwise.
func (o *SearchSearchHint) GetAlbumArtist() string {
	if o == nil || IsNil(o.AlbumArtist) {
		var ret string
		return ret
	}
	return *o.AlbumArtist
}

// GetAlbumArtistOk returns a tuple with the AlbumArtist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetAlbumArtistOk() (*string, bool) {
	if o == nil || IsNil(o.AlbumArtist) {
		return nil, false
	}
	return o.AlbumArtist, true
}

// HasAlbumArtist returns a boolean if a field has been set.
func (o *SearchSearchHint) HasAlbumArtist() bool {
	if o != nil && !IsNil(o.AlbumArtist) {
		return true
	}

	return false
}

// SetAlbumArtist gets a reference to the given string and assigns it to the AlbumArtist field.
func (o *SearchSearchHint) SetAlbumArtist(v string) {
	o.AlbumArtist = &v
}

// GetArtists returns the Artists field value if set, zero value otherwise.
func (o *SearchSearchHint) GetArtists() []string {
	if o == nil || IsNil(o.Artists) {
		var ret []string
		return ret
	}
	return o.Artists
}

// GetArtistsOk returns a tuple with the Artists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetArtistsOk() ([]string, bool) {
	if o == nil || IsNil(o.Artists) {
		return nil, false
	}
	return o.Artists, true
}

// HasArtists returns a boolean if a field has been set.
func (o *SearchSearchHint) HasArtists() bool {
	if o != nil && !IsNil(o.Artists) {
		return true
	}

	return false
}

// SetArtists gets a reference to the given []string and assigns it to the Artists field.
func (o *SearchSearchHint) SetArtists(v []string) {
	o.Artists = v
}

// GetSongCount returns the SongCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchSearchHint) GetSongCount() int32 {
	if o == nil || IsNil(o.SongCount.Get()) {
		var ret int32
		return ret
	}
	return *o.SongCount.Get()
}

// GetSongCountOk returns a tuple with the SongCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchSearchHint) GetSongCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SongCount.Get(), o.SongCount.IsSet()
}

// HasSongCount returns a boolean if a field has been set.
func (o *SearchSearchHint) HasSongCount() bool {
	if o != nil && o.SongCount.IsSet() {
		return true
	}

	return false
}

// SetSongCount gets a reference to the given NullableInt32 and assigns it to the SongCount field.
func (o *SearchSearchHint) SetSongCount(v int32) {
	o.SongCount.Set(&v)
}
// SetSongCountNil sets the value for SongCount to be an explicit nil
func (o *SearchSearchHint) SetSongCountNil() {
	o.SongCount.Set(nil)
}

// UnsetSongCount ensures that no value is present for SongCount, not even an explicit nil
func (o *SearchSearchHint) UnsetSongCount() {
	o.SongCount.Unset()
}

// GetEpisodeCount returns the EpisodeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchSearchHint) GetEpisodeCount() int32 {
	if o == nil || IsNil(o.EpisodeCount.Get()) {
		var ret int32
		return ret
	}
	return *o.EpisodeCount.Get()
}

// GetEpisodeCountOk returns a tuple with the EpisodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchSearchHint) GetEpisodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EpisodeCount.Get(), o.EpisodeCount.IsSet()
}

// HasEpisodeCount returns a boolean if a field has been set.
func (o *SearchSearchHint) HasEpisodeCount() bool {
	if o != nil && o.EpisodeCount.IsSet() {
		return true
	}

	return false
}

// SetEpisodeCount gets a reference to the given NullableInt32 and assigns it to the EpisodeCount field.
func (o *SearchSearchHint) SetEpisodeCount(v int32) {
	o.EpisodeCount.Set(&v)
}
// SetEpisodeCountNil sets the value for EpisodeCount to be an explicit nil
func (o *SearchSearchHint) SetEpisodeCountNil() {
	o.EpisodeCount.Set(nil)
}

// UnsetEpisodeCount ensures that no value is present for EpisodeCount, not even an explicit nil
func (o *SearchSearchHint) UnsetEpisodeCount() {
	o.EpisodeCount.Unset()
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise.
func (o *SearchSearchHint) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName) {
		var ret string
		return ret
	}
	return *o.ChannelName
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSearchHint) GetChannelNameOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelName) {
		return nil, false
	}
	return o.ChannelName, true
}

// HasChannelName returns a boolean if a field has been set.
func (o *SearchSearchHint) HasChannelName() bool {
	if o != nil && !IsNil(o.ChannelName) {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given string and assigns it to the ChannelName field.
func (o *SearchSearchHint) SetChannelName(v string) {
	o.ChannelName = &v
}

// GetPrimaryImageAspectRatio returns the PrimaryImageAspectRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchSearchHint) GetPrimaryImageAspectRatio() float64 {
	if o == nil || IsNil(o.PrimaryImageAspectRatio.Get()) {
		var ret float64
		return ret
	}
	return *o.PrimaryImageAspectRatio.Get()
}

// GetPrimaryImageAspectRatioOk returns a tuple with the PrimaryImageAspectRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchSearchHint) GetPrimaryImageAspectRatioOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryImageAspectRatio.Get(), o.PrimaryImageAspectRatio.IsSet()
}

// HasPrimaryImageAspectRatio returns a boolean if a field has been set.
func (o *SearchSearchHint) HasPrimaryImageAspectRatio() bool {
	if o != nil && o.PrimaryImageAspectRatio.IsSet() {
		return true
	}

	return false
}

// SetPrimaryImageAspectRatio gets a reference to the given NullableFloat64 and assigns it to the PrimaryImageAspectRatio field.
func (o *SearchSearchHint) SetPrimaryImageAspectRatio(v float64) {
	o.PrimaryImageAspectRatio.Set(&v)
}
// SetPrimaryImageAspectRatioNil sets the value for PrimaryImageAspectRatio to be an explicit nil
func (o *SearchSearchHint) SetPrimaryImageAspectRatioNil() {
	o.PrimaryImageAspectRatio.Set(nil)
}

// UnsetPrimaryImageAspectRatio ensures that no value is present for PrimaryImageAspectRatio, not even an explicit nil
func (o *SearchSearchHint) UnsetPrimaryImageAspectRatio() {
	o.PrimaryImageAspectRatio.Unset()
}

func (o SearchSearchHint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchSearchHint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemId) {
		toSerialize["ItemId"] = o.ItemId
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.MatchedTerm) {
		toSerialize["MatchedTerm"] = o.MatchedTerm
	}
	if o.IndexNumber.IsSet() {
		toSerialize["IndexNumber"] = o.IndexNumber.Get()
	}
	if o.ProductionYear.IsSet() {
		toSerialize["ProductionYear"] = o.ProductionYear.Get()
	}
	if o.ParentIndexNumber.IsSet() {
		toSerialize["ParentIndexNumber"] = o.ParentIndexNumber.Get()
	}
	if !IsNil(o.PrimaryImageTag) {
		toSerialize["PrimaryImageTag"] = o.PrimaryImageTag
	}
	if !IsNil(o.ThumbImageTag) {
		toSerialize["ThumbImageTag"] = o.ThumbImageTag
	}
	if !IsNil(o.ThumbImageItemId) {
		toSerialize["ThumbImageItemId"] = o.ThumbImageItemId
	}
	if !IsNil(o.BackdropImageTag) {
		toSerialize["BackdropImageTag"] = o.BackdropImageTag
	}
	if !IsNil(o.BackdropImageItemId) {
		toSerialize["BackdropImageItemId"] = o.BackdropImageItemId
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if o.IsFolder.IsSet() {
		toSerialize["IsFolder"] = o.IsFolder.Get()
	}
	if o.RunTimeTicks.IsSet() {
		toSerialize["RunTimeTicks"] = o.RunTimeTicks.Get()
	}
	if !IsNil(o.MediaType) {
		toSerialize["MediaType"] = o.MediaType
	}
	if o.StartDate.IsSet() {
		toSerialize["StartDate"] = o.StartDate.Get()
	}
	if o.EndDate.IsSet() {
		toSerialize["EndDate"] = o.EndDate.Get()
	}
	if !IsNil(o.Series) {
		toSerialize["Series"] = o.Series
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.Album) {
		toSerialize["Album"] = o.Album
	}
	if !IsNil(o.AlbumId) {
		toSerialize["AlbumId"] = o.AlbumId
	}
	if !IsNil(o.AlbumArtist) {
		toSerialize["AlbumArtist"] = o.AlbumArtist
	}
	if !IsNil(o.Artists) {
		toSerialize["Artists"] = o.Artists
	}
	if o.SongCount.IsSet() {
		toSerialize["SongCount"] = o.SongCount.Get()
	}
	if o.EpisodeCount.IsSet() {
		toSerialize["EpisodeCount"] = o.EpisodeCount.Get()
	}
	if !IsNil(o.ChannelName) {
		toSerialize["ChannelName"] = o.ChannelName
	}
	if o.PrimaryImageAspectRatio.IsSet() {
		toSerialize["PrimaryImageAspectRatio"] = o.PrimaryImageAspectRatio.Get()
	}
	return toSerialize, nil
}

type NullableSearchSearchHint struct {
	value *SearchSearchHint
	isSet bool
}

func (v NullableSearchSearchHint) Get() *SearchSearchHint {
	return v.value
}

func (v *NullableSearchSearchHint) Set(val *SearchSearchHint) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchSearchHint) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchSearchHint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchSearchHint(val *SearchSearchHint) *NullableSearchSearchHint {
	return &NullableSearchSearchHint{value: val, isSet: true}
}

func (v NullableSearchSearchHint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchSearchHint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


