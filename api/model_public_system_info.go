/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PublicSystemInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicSystemInfo{}

// PublicSystemInfo struct for PublicSystemInfo
type PublicSystemInfo struct {
	LocalAddress *string `json:"LocalAddress,omitempty"`
	WanAddress *string `json:"WanAddress,omitempty"`
	ServerName *string `json:"ServerName,omitempty"`
	Version *string `json:"Version,omitempty"`
	OperatingSystem *string `json:"OperatingSystem,omitempty"`
	Id *string `json:"Id,omitempty"`
}

// NewPublicSystemInfo instantiates a new PublicSystemInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicSystemInfo() *PublicSystemInfo {
	this := PublicSystemInfo{}
	return &this
}

// NewPublicSystemInfoWithDefaults instantiates a new PublicSystemInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicSystemInfoWithDefaults() *PublicSystemInfo {
	this := PublicSystemInfo{}
	return &this
}

// GetLocalAddress returns the LocalAddress field value if set, zero value otherwise.
func (o *PublicSystemInfo) GetLocalAddress() string {
	if o == nil || IsNil(o.LocalAddress) {
		var ret string
		return ret
	}
	return *o.LocalAddress
}

// GetLocalAddressOk returns a tuple with the LocalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSystemInfo) GetLocalAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LocalAddress) {
		return nil, false
	}
	return o.LocalAddress, true
}

// HasLocalAddress returns a boolean if a field has been set.
func (o *PublicSystemInfo) HasLocalAddress() bool {
	if o != nil && !IsNil(o.LocalAddress) {
		return true
	}

	return false
}

// SetLocalAddress gets a reference to the given string and assigns it to the LocalAddress field.
func (o *PublicSystemInfo) SetLocalAddress(v string) {
	o.LocalAddress = &v
}

// GetWanAddress returns the WanAddress field value if set, zero value otherwise.
func (o *PublicSystemInfo) GetWanAddress() string {
	if o == nil || IsNil(o.WanAddress) {
		var ret string
		return ret
	}
	return *o.WanAddress
}

// GetWanAddressOk returns a tuple with the WanAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSystemInfo) GetWanAddressOk() (*string, bool) {
	if o == nil || IsNil(o.WanAddress) {
		return nil, false
	}
	return o.WanAddress, true
}

// HasWanAddress returns a boolean if a field has been set.
func (o *PublicSystemInfo) HasWanAddress() bool {
	if o != nil && !IsNil(o.WanAddress) {
		return true
	}

	return false
}

// SetWanAddress gets a reference to the given string and assigns it to the WanAddress field.
func (o *PublicSystemInfo) SetWanAddress(v string) {
	o.WanAddress = &v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *PublicSystemInfo) GetServerName() string {
	if o == nil || IsNil(o.ServerName) {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSystemInfo) GetServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServerName) {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *PublicSystemInfo) HasServerName() bool {
	if o != nil && !IsNil(o.ServerName) {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *PublicSystemInfo) SetServerName(v string) {
	o.ServerName = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *PublicSystemInfo) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSystemInfo) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *PublicSystemInfo) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *PublicSystemInfo) SetVersion(v string) {
	o.Version = &v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *PublicSystemInfo) GetOperatingSystem() string {
	if o == nil || IsNil(o.OperatingSystem) {
		var ret string
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSystemInfo) GetOperatingSystemOk() (*string, bool) {
	if o == nil || IsNil(o.OperatingSystem) {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *PublicSystemInfo) HasOperatingSystem() bool {
	if o != nil && !IsNil(o.OperatingSystem) {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *PublicSystemInfo) SetOperatingSystem(v string) {
	o.OperatingSystem = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PublicSystemInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicSystemInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PublicSystemInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PublicSystemInfo) SetId(v string) {
	o.Id = &v
}

func (o PublicSystemInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicSystemInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LocalAddress) {
		toSerialize["LocalAddress"] = o.LocalAddress
	}
	if !IsNil(o.WanAddress) {
		toSerialize["WanAddress"] = o.WanAddress
	}
	if !IsNil(o.ServerName) {
		toSerialize["ServerName"] = o.ServerName
	}
	if !IsNil(o.Version) {
		toSerialize["Version"] = o.Version
	}
	if !IsNil(o.OperatingSystem) {
		toSerialize["OperatingSystem"] = o.OperatingSystem
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	return toSerialize, nil
}

type NullablePublicSystemInfo struct {
	value *PublicSystemInfo
	isSet bool
}

func (v NullablePublicSystemInfo) Get() *PublicSystemInfo {
	return v.value
}

func (v *NullablePublicSystemInfo) Set(val *PublicSystemInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicSystemInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicSystemInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicSystemInfo(val *PublicSystemInfo) *NullablePublicSystemInfo {
	return &NullablePublicSystemInfo{value: val, isSet: true}
}

func (v NullablePublicSystemInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicSystemInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


