/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the UsersPinRedeemResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsersPinRedeemResult{}

// UsersPinRedeemResult struct for UsersPinRedeemResult
type UsersPinRedeemResult struct {
	Success *bool `json:"Success,omitempty"`
	UsersReset []string `json:"UsersReset,omitempty"`
}

// NewUsersPinRedeemResult instantiates a new UsersPinRedeemResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersPinRedeemResult() *UsersPinRedeemResult {
	this := UsersPinRedeemResult{}
	return &this
}

// NewUsersPinRedeemResultWithDefaults instantiates a new UsersPinRedeemResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersPinRedeemResultWithDefaults() *UsersPinRedeemResult {
	this := UsersPinRedeemResult{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *UsersPinRedeemResult) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersPinRedeemResult) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *UsersPinRedeemResult) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *UsersPinRedeemResult) SetSuccess(v bool) {
	o.Success = &v
}

// GetUsersReset returns the UsersReset field value if set, zero value otherwise.
func (o *UsersPinRedeemResult) GetUsersReset() []string {
	if o == nil || IsNil(o.UsersReset) {
		var ret []string
		return ret
	}
	return o.UsersReset
}

// GetUsersResetOk returns a tuple with the UsersReset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersPinRedeemResult) GetUsersResetOk() ([]string, bool) {
	if o == nil || IsNil(o.UsersReset) {
		return nil, false
	}
	return o.UsersReset, true
}

// HasUsersReset returns a boolean if a field has been set.
func (o *UsersPinRedeemResult) HasUsersReset() bool {
	if o != nil && !IsNil(o.UsersReset) {
		return true
	}

	return false
}

// SetUsersReset gets a reference to the given []string and assigns it to the UsersReset field.
func (o *UsersPinRedeemResult) SetUsersReset(v []string) {
	o.UsersReset = v
}

func (o UsersPinRedeemResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsersPinRedeemResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["Success"] = o.Success
	}
	if !IsNil(o.UsersReset) {
		toSerialize["UsersReset"] = o.UsersReset
	}
	return toSerialize, nil
}

type NullableUsersPinRedeemResult struct {
	value *UsersPinRedeemResult
	isSet bool
}

func (v NullableUsersPinRedeemResult) Get() *UsersPinRedeemResult {
	return v.value
}

func (v *NullableUsersPinRedeemResult) Set(val *UsersPinRedeemResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersPinRedeemResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersPinRedeemResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersPinRedeemResult(val *UsersPinRedeemResult) *NullableUsersPinRedeemResult {
	return &NullableUsersPinRedeemResult{value: val, isSet: true}
}

func (v NullableUsersPinRedeemResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersPinRedeemResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


