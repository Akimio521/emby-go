/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the EmbyNotificationsApiNotificationsSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbyNotificationsApiNotificationsSummary{}

// EmbyNotificationsApiNotificationsSummary struct for EmbyNotificationsApiNotificationsSummary
type EmbyNotificationsApiNotificationsSummary struct {
	UnreadCount *int32 `json:"UnreadCount,omitempty"`
	MaxUnreadNotificationLevel *string `json:"MaxUnreadNotificationLevel,omitempty"`
}

// NewEmbyNotificationsApiNotificationsSummary instantiates a new EmbyNotificationsApiNotificationsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbyNotificationsApiNotificationsSummary() *EmbyNotificationsApiNotificationsSummary {
	this := EmbyNotificationsApiNotificationsSummary{}
	return &this
}

// NewEmbyNotificationsApiNotificationsSummaryWithDefaults instantiates a new EmbyNotificationsApiNotificationsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbyNotificationsApiNotificationsSummaryWithDefaults() *EmbyNotificationsApiNotificationsSummary {
	this := EmbyNotificationsApiNotificationsSummary{}
	return &this
}

// GetUnreadCount returns the UnreadCount field value if set, zero value otherwise.
func (o *EmbyNotificationsApiNotificationsSummary) GetUnreadCount() int32 {
	if o == nil || IsNil(o.UnreadCount) {
		var ret int32
		return ret
	}
	return *o.UnreadCount
}

// GetUnreadCountOk returns a tuple with the UnreadCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyNotificationsApiNotificationsSummary) GetUnreadCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UnreadCount) {
		return nil, false
	}
	return o.UnreadCount, true
}

// HasUnreadCount returns a boolean if a field has been set.
func (o *EmbyNotificationsApiNotificationsSummary) HasUnreadCount() bool {
	if o != nil && !IsNil(o.UnreadCount) {
		return true
	}

	return false
}

// SetUnreadCount gets a reference to the given int32 and assigns it to the UnreadCount field.
func (o *EmbyNotificationsApiNotificationsSummary) SetUnreadCount(v int32) {
	o.UnreadCount = &v
}

// GetMaxUnreadNotificationLevel returns the MaxUnreadNotificationLevel field value if set, zero value otherwise.
func (o *EmbyNotificationsApiNotificationsSummary) GetMaxUnreadNotificationLevel() string {
	if o == nil || IsNil(o.MaxUnreadNotificationLevel) {
		var ret string
		return ret
	}
	return *o.MaxUnreadNotificationLevel
}

// GetMaxUnreadNotificationLevelOk returns a tuple with the MaxUnreadNotificationLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyNotificationsApiNotificationsSummary) GetMaxUnreadNotificationLevelOk() (*string, bool) {
	if o == nil || IsNil(o.MaxUnreadNotificationLevel) {
		return nil, false
	}
	return o.MaxUnreadNotificationLevel, true
}

// HasMaxUnreadNotificationLevel returns a boolean if a field has been set.
func (o *EmbyNotificationsApiNotificationsSummary) HasMaxUnreadNotificationLevel() bool {
	if o != nil && !IsNil(o.MaxUnreadNotificationLevel) {
		return true
	}

	return false
}

// SetMaxUnreadNotificationLevel gets a reference to the given string and assigns it to the MaxUnreadNotificationLevel field.
func (o *EmbyNotificationsApiNotificationsSummary) SetMaxUnreadNotificationLevel(v string) {
	o.MaxUnreadNotificationLevel = &v
}

func (o EmbyNotificationsApiNotificationsSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbyNotificationsApiNotificationsSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UnreadCount) {
		toSerialize["UnreadCount"] = o.UnreadCount
	}
	if !IsNil(o.MaxUnreadNotificationLevel) {
		toSerialize["MaxUnreadNotificationLevel"] = o.MaxUnreadNotificationLevel
	}
	return toSerialize, nil
}

type NullableEmbyNotificationsApiNotificationsSummary struct {
	value *EmbyNotificationsApiNotificationsSummary
	isSet bool
}

func (v NullableEmbyNotificationsApiNotificationsSummary) Get() *EmbyNotificationsApiNotificationsSummary {
	return v.value
}

func (v *NullableEmbyNotificationsApiNotificationsSummary) Set(val *EmbyNotificationsApiNotificationsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbyNotificationsApiNotificationsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbyNotificationsApiNotificationsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbyNotificationsApiNotificationsSummary(val *EmbyNotificationsApiNotificationsSummary) *NullableEmbyNotificationsApiNotificationsSummary {
	return &NullableEmbyNotificationsApiNotificationsSummary{value: val, isSet: true}
}

func (v NullableEmbyNotificationsApiNotificationsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbyNotificationsApiNotificationsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


