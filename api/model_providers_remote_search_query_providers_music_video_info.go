/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ProvidersRemoteSearchQueryProvidersMusicVideoInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvidersRemoteSearchQueryProvidersMusicVideoInfo{}

// ProvidersRemoteSearchQueryProvidersMusicVideoInfo struct for ProvidersRemoteSearchQueryProvidersMusicVideoInfo
type ProvidersRemoteSearchQueryProvidersMusicVideoInfo struct {
	SearchInfo *ProvidersMusicVideoInfo `json:"SearchInfo,omitempty"`
	ItemId *int64 `json:"ItemId,omitempty"`
	SearchProviderName *string `json:"SearchProviderName,omitempty"`
	IncludeDisabledProviders *bool `json:"IncludeDisabledProviders,omitempty"`
}

// NewProvidersRemoteSearchQueryProvidersMusicVideoInfo instantiates a new ProvidersRemoteSearchQueryProvidersMusicVideoInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvidersRemoteSearchQueryProvidersMusicVideoInfo() *ProvidersRemoteSearchQueryProvidersMusicVideoInfo {
	this := ProvidersRemoteSearchQueryProvidersMusicVideoInfo{}
	return &this
}

// NewProvidersRemoteSearchQueryProvidersMusicVideoInfoWithDefaults instantiates a new ProvidersRemoteSearchQueryProvidersMusicVideoInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvidersRemoteSearchQueryProvidersMusicVideoInfoWithDefaults() *ProvidersRemoteSearchQueryProvidersMusicVideoInfo {
	this := ProvidersRemoteSearchQueryProvidersMusicVideoInfo{}
	return &this
}

// GetSearchInfo returns the SearchInfo field value if set, zero value otherwise.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) GetSearchInfo() ProvidersMusicVideoInfo {
	if o == nil || IsNil(o.SearchInfo) {
		var ret ProvidersMusicVideoInfo
		return ret
	}
	return *o.SearchInfo
}

// GetSearchInfoOk returns a tuple with the SearchInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) GetSearchInfoOk() (*ProvidersMusicVideoInfo, bool) {
	if o == nil || IsNil(o.SearchInfo) {
		return nil, false
	}
	return o.SearchInfo, true
}

// HasSearchInfo returns a boolean if a field has been set.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) HasSearchInfo() bool {
	if o != nil && !IsNil(o.SearchInfo) {
		return true
	}

	return false
}

// SetSearchInfo gets a reference to the given ProvidersMusicVideoInfo and assigns it to the SearchInfo field.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) SetSearchInfo(v ProvidersMusicVideoInfo) {
	o.SearchInfo = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) GetItemId() int64 {
	if o == nil || IsNil(o.ItemId) {
		var ret int64
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) GetItemIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given int64 and assigns it to the ItemId field.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) SetItemId(v int64) {
	o.ItemId = &v
}

// GetSearchProviderName returns the SearchProviderName field value if set, zero value otherwise.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) GetSearchProviderName() string {
	if o == nil || IsNil(o.SearchProviderName) {
		var ret string
		return ret
	}
	return *o.SearchProviderName
}

// GetSearchProviderNameOk returns a tuple with the SearchProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) GetSearchProviderNameOk() (*string, bool) {
	if o == nil || IsNil(o.SearchProviderName) {
		return nil, false
	}
	return o.SearchProviderName, true
}

// HasSearchProviderName returns a boolean if a field has been set.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) HasSearchProviderName() bool {
	if o != nil && !IsNil(o.SearchProviderName) {
		return true
	}

	return false
}

// SetSearchProviderName gets a reference to the given string and assigns it to the SearchProviderName field.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) SetSearchProviderName(v string) {
	o.SearchProviderName = &v
}

// GetIncludeDisabledProviders returns the IncludeDisabledProviders field value if set, zero value otherwise.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) GetIncludeDisabledProviders() bool {
	if o == nil || IsNil(o.IncludeDisabledProviders) {
		var ret bool
		return ret
	}
	return *o.IncludeDisabledProviders
}

// GetIncludeDisabledProvidersOk returns a tuple with the IncludeDisabledProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) GetIncludeDisabledProvidersOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeDisabledProviders) {
		return nil, false
	}
	return o.IncludeDisabledProviders, true
}

// HasIncludeDisabledProviders returns a boolean if a field has been set.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) HasIncludeDisabledProviders() bool {
	if o != nil && !IsNil(o.IncludeDisabledProviders) {
		return true
	}

	return false
}

// SetIncludeDisabledProviders gets a reference to the given bool and assigns it to the IncludeDisabledProviders field.
func (o *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) SetIncludeDisabledProviders(v bool) {
	o.IncludeDisabledProviders = &v
}

func (o ProvidersRemoteSearchQueryProvidersMusicVideoInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvidersRemoteSearchQueryProvidersMusicVideoInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SearchInfo) {
		toSerialize["SearchInfo"] = o.SearchInfo
	}
	if !IsNil(o.ItemId) {
		toSerialize["ItemId"] = o.ItemId
	}
	if !IsNil(o.SearchProviderName) {
		toSerialize["SearchProviderName"] = o.SearchProviderName
	}
	if !IsNil(o.IncludeDisabledProviders) {
		toSerialize["IncludeDisabledProviders"] = o.IncludeDisabledProviders
	}
	return toSerialize, nil
}

type NullableProvidersRemoteSearchQueryProvidersMusicVideoInfo struct {
	value *ProvidersRemoteSearchQueryProvidersMusicVideoInfo
	isSet bool
}

func (v NullableProvidersRemoteSearchQueryProvidersMusicVideoInfo) Get() *ProvidersRemoteSearchQueryProvidersMusicVideoInfo {
	return v.value
}

func (v *NullableProvidersRemoteSearchQueryProvidersMusicVideoInfo) Set(val *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableProvidersRemoteSearchQueryProvidersMusicVideoInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableProvidersRemoteSearchQueryProvidersMusicVideoInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvidersRemoteSearchQueryProvidersMusicVideoInfo(val *ProvidersRemoteSearchQueryProvidersMusicVideoInfo) *NullableProvidersRemoteSearchQueryProvidersMusicVideoInfo {
	return &NullableProvidersRemoteSearchQueryProvidersMusicVideoInfo{value: val, isSet: true}
}

func (v NullableProvidersRemoteSearchQueryProvidersMusicVideoInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvidersRemoteSearchQueryProvidersMusicVideoInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


