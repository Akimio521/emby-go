/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the LibraryPostUpdatedMedia type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LibraryPostUpdatedMedia{}

// LibraryPostUpdatedMedia struct for LibraryPostUpdatedMedia
type LibraryPostUpdatedMedia struct {
	Updates []LibraryMediaUpdateInfo `json:"Updates,omitempty"`
}

// NewLibraryPostUpdatedMedia instantiates a new LibraryPostUpdatedMedia object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLibraryPostUpdatedMedia() *LibraryPostUpdatedMedia {
	this := LibraryPostUpdatedMedia{}
	return &this
}

// NewLibraryPostUpdatedMediaWithDefaults instantiates a new LibraryPostUpdatedMedia object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLibraryPostUpdatedMediaWithDefaults() *LibraryPostUpdatedMedia {
	this := LibraryPostUpdatedMedia{}
	return &this
}

// GetUpdates returns the Updates field value if set, zero value otherwise.
func (o *LibraryPostUpdatedMedia) GetUpdates() []LibraryMediaUpdateInfo {
	if o == nil || IsNil(o.Updates) {
		var ret []LibraryMediaUpdateInfo
		return ret
	}
	return o.Updates
}

// GetUpdatesOk returns a tuple with the Updates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LibraryPostUpdatedMedia) GetUpdatesOk() ([]LibraryMediaUpdateInfo, bool) {
	if o == nil || IsNil(o.Updates) {
		return nil, false
	}
	return o.Updates, true
}

// HasUpdates returns a boolean if a field has been set.
func (o *LibraryPostUpdatedMedia) HasUpdates() bool {
	if o != nil && !IsNil(o.Updates) {
		return true
	}

	return false
}

// SetUpdates gets a reference to the given []LibraryMediaUpdateInfo and assigns it to the Updates field.
func (o *LibraryPostUpdatedMedia) SetUpdates(v []LibraryMediaUpdateInfo) {
	o.Updates = v
}

func (o LibraryPostUpdatedMedia) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LibraryPostUpdatedMedia) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Updates) {
		toSerialize["Updates"] = o.Updates
	}
	return toSerialize, nil
}

type NullableLibraryPostUpdatedMedia struct {
	value *LibraryPostUpdatedMedia
	isSet bool
}

func (v NullableLibraryPostUpdatedMedia) Get() *LibraryPostUpdatedMedia {
	return v.value
}

func (v *NullableLibraryPostUpdatedMedia) Set(val *LibraryPostUpdatedMedia) {
	v.value = val
	v.isSet = true
}

func (v NullableLibraryPostUpdatedMedia) IsSet() bool {
	return v.isSet
}

func (v *NullableLibraryPostUpdatedMedia) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLibraryPostUpdatedMedia(val *LibraryPostUpdatedMedia) *NullableLibraryPostUpdatedMedia {
	return &NullableLibraryPostUpdatedMedia{value: val, isSet: true}
}

func (v NullableLibraryPostUpdatedMedia) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLibraryPostUpdatedMedia) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


