/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the LiveTvGetPrograms type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LiveTvGetPrograms{}

// LiveTvGetPrograms struct for LiveTvGetPrograms
type LiveTvGetPrograms struct {
	IsAiring NullableBool `json:"IsAiring,omitempty"`
	EnableTotalRecordCount *bool `json:"EnableTotalRecordCount,omitempty"`
	SeriesTimerId *string `json:"SeriesTimerId,omitempty"`
	LibrarySeriesId *string `json:"LibrarySeriesId,omitempty"`
}

// NewLiveTvGetPrograms instantiates a new LiveTvGetPrograms object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveTvGetPrograms() *LiveTvGetPrograms {
	this := LiveTvGetPrograms{}
	return &this
}

// NewLiveTvGetProgramsWithDefaults instantiates a new LiveTvGetPrograms object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveTvGetProgramsWithDefaults() *LiveTvGetPrograms {
	this := LiveTvGetPrograms{}
	return &this
}

// GetIsAiring returns the IsAiring field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LiveTvGetPrograms) GetIsAiring() bool {
	if o == nil || IsNil(o.IsAiring.Get()) {
		var ret bool
		return ret
	}
	return *o.IsAiring.Get()
}

// GetIsAiringOk returns a tuple with the IsAiring field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveTvGetPrograms) GetIsAiringOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsAiring.Get(), o.IsAiring.IsSet()
}

// HasIsAiring returns a boolean if a field has been set.
func (o *LiveTvGetPrograms) HasIsAiring() bool {
	if o != nil && o.IsAiring.IsSet() {
		return true
	}

	return false
}

// SetIsAiring gets a reference to the given NullableBool and assigns it to the IsAiring field.
func (o *LiveTvGetPrograms) SetIsAiring(v bool) {
	o.IsAiring.Set(&v)
}
// SetIsAiringNil sets the value for IsAiring to be an explicit nil
func (o *LiveTvGetPrograms) SetIsAiringNil() {
	o.IsAiring.Set(nil)
}

// UnsetIsAiring ensures that no value is present for IsAiring, not even an explicit nil
func (o *LiveTvGetPrograms) UnsetIsAiring() {
	o.IsAiring.Unset()
}

// GetEnableTotalRecordCount returns the EnableTotalRecordCount field value if set, zero value otherwise.
func (o *LiveTvGetPrograms) GetEnableTotalRecordCount() bool {
	if o == nil || IsNil(o.EnableTotalRecordCount) {
		var ret bool
		return ret
	}
	return *o.EnableTotalRecordCount
}

// GetEnableTotalRecordCountOk returns a tuple with the EnableTotalRecordCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvGetPrograms) GetEnableTotalRecordCountOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableTotalRecordCount) {
		return nil, false
	}
	return o.EnableTotalRecordCount, true
}

// HasEnableTotalRecordCount returns a boolean if a field has been set.
func (o *LiveTvGetPrograms) HasEnableTotalRecordCount() bool {
	if o != nil && !IsNil(o.EnableTotalRecordCount) {
		return true
	}

	return false
}

// SetEnableTotalRecordCount gets a reference to the given bool and assigns it to the EnableTotalRecordCount field.
func (o *LiveTvGetPrograms) SetEnableTotalRecordCount(v bool) {
	o.EnableTotalRecordCount = &v
}

// GetSeriesTimerId returns the SeriesTimerId field value if set, zero value otherwise.
func (o *LiveTvGetPrograms) GetSeriesTimerId() string {
	if o == nil || IsNil(o.SeriesTimerId) {
		var ret string
		return ret
	}
	return *o.SeriesTimerId
}

// GetSeriesTimerIdOk returns a tuple with the SeriesTimerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvGetPrograms) GetSeriesTimerIdOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesTimerId) {
		return nil, false
	}
	return o.SeriesTimerId, true
}

// HasSeriesTimerId returns a boolean if a field has been set.
func (o *LiveTvGetPrograms) HasSeriesTimerId() bool {
	if o != nil && !IsNil(o.SeriesTimerId) {
		return true
	}

	return false
}

// SetSeriesTimerId gets a reference to the given string and assigns it to the SeriesTimerId field.
func (o *LiveTvGetPrograms) SetSeriesTimerId(v string) {
	o.SeriesTimerId = &v
}

// GetLibrarySeriesId returns the LibrarySeriesId field value if set, zero value otherwise.
func (o *LiveTvGetPrograms) GetLibrarySeriesId() string {
	if o == nil || IsNil(o.LibrarySeriesId) {
		var ret string
		return ret
	}
	return *o.LibrarySeriesId
}

// GetLibrarySeriesIdOk returns a tuple with the LibrarySeriesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvGetPrograms) GetLibrarySeriesIdOk() (*string, bool) {
	if o == nil || IsNil(o.LibrarySeriesId) {
		return nil, false
	}
	return o.LibrarySeriesId, true
}

// HasLibrarySeriesId returns a boolean if a field has been set.
func (o *LiveTvGetPrograms) HasLibrarySeriesId() bool {
	if o != nil && !IsNil(o.LibrarySeriesId) {
		return true
	}

	return false
}

// SetLibrarySeriesId gets a reference to the given string and assigns it to the LibrarySeriesId field.
func (o *LiveTvGetPrograms) SetLibrarySeriesId(v string) {
	o.LibrarySeriesId = &v
}

func (o LiveTvGetPrograms) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LiveTvGetPrograms) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IsAiring.IsSet() {
		toSerialize["IsAiring"] = o.IsAiring.Get()
	}
	if !IsNil(o.EnableTotalRecordCount) {
		toSerialize["EnableTotalRecordCount"] = o.EnableTotalRecordCount
	}
	if !IsNil(o.SeriesTimerId) {
		toSerialize["SeriesTimerId"] = o.SeriesTimerId
	}
	if !IsNil(o.LibrarySeriesId) {
		toSerialize["LibrarySeriesId"] = o.LibrarySeriesId
	}
	return toSerialize, nil
}

type NullableLiveTvGetPrograms struct {
	value *LiveTvGetPrograms
	isSet bool
}

func (v NullableLiveTvGetPrograms) Get() *LiveTvGetPrograms {
	return v.value
}

func (v *NullableLiveTvGetPrograms) Set(val *LiveTvGetPrograms) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveTvGetPrograms) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveTvGetPrograms) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveTvGetPrograms(val *LiveTvGetPrograms) *NullableLiveTvGetPrograms {
	return &NullableLiveTvGetPrograms{value: val, isSet: true}
}

func (v NullableLiveTvGetPrograms) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveTvGetPrograms) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


