/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the EmbyReportsApiModelReportHeader type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbyReportsApiModelReportHeader{}

// EmbyReportsApiModelReportHeader struct for EmbyReportsApiModelReportHeader
type EmbyReportsApiModelReportHeader struct {
	HeaderFieldType *string `json:"HeaderFieldType,omitempty"`
	Name *string `json:"Name,omitempty"`
	FieldName *string `json:"FieldName,omitempty"`
	SortField *string `json:"SortField,omitempty"`
	Type *string `json:"Type,omitempty"`
	ItemViewType *string `json:"ItemViewType,omitempty"`
	Visible *bool `json:"Visible,omitempty"`
	DisplayType *string `json:"DisplayType,omitempty"`
	ShowHeaderLabel *bool `json:"ShowHeaderLabel,omitempty"`
	CanGroup *bool `json:"CanGroup,omitempty"`
}

// NewEmbyReportsApiModelReportHeader instantiates a new EmbyReportsApiModelReportHeader object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbyReportsApiModelReportHeader() *EmbyReportsApiModelReportHeader {
	this := EmbyReportsApiModelReportHeader{}
	return &this
}

// NewEmbyReportsApiModelReportHeaderWithDefaults instantiates a new EmbyReportsApiModelReportHeader object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbyReportsApiModelReportHeaderWithDefaults() *EmbyReportsApiModelReportHeader {
	this := EmbyReportsApiModelReportHeader{}
	return &this
}

// GetHeaderFieldType returns the HeaderFieldType field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportHeader) GetHeaderFieldType() string {
	if o == nil || IsNil(o.HeaderFieldType) {
		var ret string
		return ret
	}
	return *o.HeaderFieldType
}

// GetHeaderFieldTypeOk returns a tuple with the HeaderFieldType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportHeader) GetHeaderFieldTypeOk() (*string, bool) {
	if o == nil || IsNil(o.HeaderFieldType) {
		return nil, false
	}
	return o.HeaderFieldType, true
}

// HasHeaderFieldType returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportHeader) HasHeaderFieldType() bool {
	if o != nil && !IsNil(o.HeaderFieldType) {
		return true
	}

	return false
}

// SetHeaderFieldType gets a reference to the given string and assigns it to the HeaderFieldType field.
func (o *EmbyReportsApiModelReportHeader) SetHeaderFieldType(v string) {
	o.HeaderFieldType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportHeader) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportHeader) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportHeader) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EmbyReportsApiModelReportHeader) SetName(v string) {
	o.Name = &v
}

// GetFieldName returns the FieldName field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportHeader) GetFieldName() string {
	if o == nil || IsNil(o.FieldName) {
		var ret string
		return ret
	}
	return *o.FieldName
}

// GetFieldNameOk returns a tuple with the FieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportHeader) GetFieldNameOk() (*string, bool) {
	if o == nil || IsNil(o.FieldName) {
		return nil, false
	}
	return o.FieldName, true
}

// HasFieldName returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportHeader) HasFieldName() bool {
	if o != nil && !IsNil(o.FieldName) {
		return true
	}

	return false
}

// SetFieldName gets a reference to the given string and assigns it to the FieldName field.
func (o *EmbyReportsApiModelReportHeader) SetFieldName(v string) {
	o.FieldName = &v
}

// GetSortField returns the SortField field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportHeader) GetSortField() string {
	if o == nil || IsNil(o.SortField) {
		var ret string
		return ret
	}
	return *o.SortField
}

// GetSortFieldOk returns a tuple with the SortField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportHeader) GetSortFieldOk() (*string, bool) {
	if o == nil || IsNil(o.SortField) {
		return nil, false
	}
	return o.SortField, true
}

// HasSortField returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportHeader) HasSortField() bool {
	if o != nil && !IsNil(o.SortField) {
		return true
	}

	return false
}

// SetSortField gets a reference to the given string and assigns it to the SortField field.
func (o *EmbyReportsApiModelReportHeader) SetSortField(v string) {
	o.SortField = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportHeader) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportHeader) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportHeader) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EmbyReportsApiModelReportHeader) SetType(v string) {
	o.Type = &v
}

// GetItemViewType returns the ItemViewType field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportHeader) GetItemViewType() string {
	if o == nil || IsNil(o.ItemViewType) {
		var ret string
		return ret
	}
	return *o.ItemViewType
}

// GetItemViewTypeOk returns a tuple with the ItemViewType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportHeader) GetItemViewTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ItemViewType) {
		return nil, false
	}
	return o.ItemViewType, true
}

// HasItemViewType returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportHeader) HasItemViewType() bool {
	if o != nil && !IsNil(o.ItemViewType) {
		return true
	}

	return false
}

// SetItemViewType gets a reference to the given string and assigns it to the ItemViewType field.
func (o *EmbyReportsApiModelReportHeader) SetItemViewType(v string) {
	o.ItemViewType = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportHeader) GetVisible() bool {
	if o == nil || IsNil(o.Visible) {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportHeader) GetVisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportHeader) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *EmbyReportsApiModelReportHeader) SetVisible(v bool) {
	o.Visible = &v
}

// GetDisplayType returns the DisplayType field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportHeader) GetDisplayType() string {
	if o == nil || IsNil(o.DisplayType) {
		var ret string
		return ret
	}
	return *o.DisplayType
}

// GetDisplayTypeOk returns a tuple with the DisplayType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportHeader) GetDisplayTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayType) {
		return nil, false
	}
	return o.DisplayType, true
}

// HasDisplayType returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportHeader) HasDisplayType() bool {
	if o != nil && !IsNil(o.DisplayType) {
		return true
	}

	return false
}

// SetDisplayType gets a reference to the given string and assigns it to the DisplayType field.
func (o *EmbyReportsApiModelReportHeader) SetDisplayType(v string) {
	o.DisplayType = &v
}

// GetShowHeaderLabel returns the ShowHeaderLabel field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportHeader) GetShowHeaderLabel() bool {
	if o == nil || IsNil(o.ShowHeaderLabel) {
		var ret bool
		return ret
	}
	return *o.ShowHeaderLabel
}

// GetShowHeaderLabelOk returns a tuple with the ShowHeaderLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportHeader) GetShowHeaderLabelOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowHeaderLabel) {
		return nil, false
	}
	return o.ShowHeaderLabel, true
}

// HasShowHeaderLabel returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportHeader) HasShowHeaderLabel() bool {
	if o != nil && !IsNil(o.ShowHeaderLabel) {
		return true
	}

	return false
}

// SetShowHeaderLabel gets a reference to the given bool and assigns it to the ShowHeaderLabel field.
func (o *EmbyReportsApiModelReportHeader) SetShowHeaderLabel(v bool) {
	o.ShowHeaderLabel = &v
}

// GetCanGroup returns the CanGroup field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportHeader) GetCanGroup() bool {
	if o == nil || IsNil(o.CanGroup) {
		var ret bool
		return ret
	}
	return *o.CanGroup
}

// GetCanGroupOk returns a tuple with the CanGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportHeader) GetCanGroupOk() (*bool, bool) {
	if o == nil || IsNil(o.CanGroup) {
		return nil, false
	}
	return o.CanGroup, true
}

// HasCanGroup returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportHeader) HasCanGroup() bool {
	if o != nil && !IsNil(o.CanGroup) {
		return true
	}

	return false
}

// SetCanGroup gets a reference to the given bool and assigns it to the CanGroup field.
func (o *EmbyReportsApiModelReportHeader) SetCanGroup(v bool) {
	o.CanGroup = &v
}

func (o EmbyReportsApiModelReportHeader) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbyReportsApiModelReportHeader) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HeaderFieldType) {
		toSerialize["HeaderFieldType"] = o.HeaderFieldType
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.FieldName) {
		toSerialize["FieldName"] = o.FieldName
	}
	if !IsNil(o.SortField) {
		toSerialize["SortField"] = o.SortField
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.ItemViewType) {
		toSerialize["ItemViewType"] = o.ItemViewType
	}
	if !IsNil(o.Visible) {
		toSerialize["Visible"] = o.Visible
	}
	if !IsNil(o.DisplayType) {
		toSerialize["DisplayType"] = o.DisplayType
	}
	if !IsNil(o.ShowHeaderLabel) {
		toSerialize["ShowHeaderLabel"] = o.ShowHeaderLabel
	}
	if !IsNil(o.CanGroup) {
		toSerialize["CanGroup"] = o.CanGroup
	}
	return toSerialize, nil
}

type NullableEmbyReportsApiModelReportHeader struct {
	value *EmbyReportsApiModelReportHeader
	isSet bool
}

func (v NullableEmbyReportsApiModelReportHeader) Get() *EmbyReportsApiModelReportHeader {
	return v.value
}

func (v *NullableEmbyReportsApiModelReportHeader) Set(val *EmbyReportsApiModelReportHeader) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbyReportsApiModelReportHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbyReportsApiModelReportHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbyReportsApiModelReportHeader(val *EmbyReportsApiModelReportHeader) *NullableEmbyReportsApiModelReportHeader {
	return &NullableEmbyReportsApiModelReportHeader{value: val, isSet: true}
}

func (v NullableEmbyReportsApiModelReportHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbyReportsApiModelReportHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


