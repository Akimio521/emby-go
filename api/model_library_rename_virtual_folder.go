/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the LibraryRenameVirtualFolder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LibraryRenameVirtualFolder{}

// LibraryRenameVirtualFolder struct for LibraryRenameVirtualFolder
type LibraryRenameVirtualFolder struct {
	Name *string `json:"Name,omitempty"`
	NewName *string `json:"NewName,omitempty"`
	RefreshLibrary *bool `json:"RefreshLibrary,omitempty"`
}

// NewLibraryRenameVirtualFolder instantiates a new LibraryRenameVirtualFolder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLibraryRenameVirtualFolder() *LibraryRenameVirtualFolder {
	this := LibraryRenameVirtualFolder{}
	return &this
}

// NewLibraryRenameVirtualFolderWithDefaults instantiates a new LibraryRenameVirtualFolder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLibraryRenameVirtualFolderWithDefaults() *LibraryRenameVirtualFolder {
	this := LibraryRenameVirtualFolder{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LibraryRenameVirtualFolder) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LibraryRenameVirtualFolder) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LibraryRenameVirtualFolder) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LibraryRenameVirtualFolder) SetName(v string) {
	o.Name = &v
}

// GetNewName returns the NewName field value if set, zero value otherwise.
func (o *LibraryRenameVirtualFolder) GetNewName() string {
	if o == nil || IsNil(o.NewName) {
		var ret string
		return ret
	}
	return *o.NewName
}

// GetNewNameOk returns a tuple with the NewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LibraryRenameVirtualFolder) GetNewNameOk() (*string, bool) {
	if o == nil || IsNil(o.NewName) {
		return nil, false
	}
	return o.NewName, true
}

// HasNewName returns a boolean if a field has been set.
func (o *LibraryRenameVirtualFolder) HasNewName() bool {
	if o != nil && !IsNil(o.NewName) {
		return true
	}

	return false
}

// SetNewName gets a reference to the given string and assigns it to the NewName field.
func (o *LibraryRenameVirtualFolder) SetNewName(v string) {
	o.NewName = &v
}

// GetRefreshLibrary returns the RefreshLibrary field value if set, zero value otherwise.
func (o *LibraryRenameVirtualFolder) GetRefreshLibrary() bool {
	if o == nil || IsNil(o.RefreshLibrary) {
		var ret bool
		return ret
	}
	return *o.RefreshLibrary
}

// GetRefreshLibraryOk returns a tuple with the RefreshLibrary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LibraryRenameVirtualFolder) GetRefreshLibraryOk() (*bool, bool) {
	if o == nil || IsNil(o.RefreshLibrary) {
		return nil, false
	}
	return o.RefreshLibrary, true
}

// HasRefreshLibrary returns a boolean if a field has been set.
func (o *LibraryRenameVirtualFolder) HasRefreshLibrary() bool {
	if o != nil && !IsNil(o.RefreshLibrary) {
		return true
	}

	return false
}

// SetRefreshLibrary gets a reference to the given bool and assigns it to the RefreshLibrary field.
func (o *LibraryRenameVirtualFolder) SetRefreshLibrary(v bool) {
	o.RefreshLibrary = &v
}

func (o LibraryRenameVirtualFolder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LibraryRenameVirtualFolder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.NewName) {
		toSerialize["NewName"] = o.NewName
	}
	if !IsNil(o.RefreshLibrary) {
		toSerialize["RefreshLibrary"] = o.RefreshLibrary
	}
	return toSerialize, nil
}

type NullableLibraryRenameVirtualFolder struct {
	value *LibraryRenameVirtualFolder
	isSet bool
}

func (v NullableLibraryRenameVirtualFolder) Get() *LibraryRenameVirtualFolder {
	return v.value
}

func (v *NullableLibraryRenameVirtualFolder) Set(val *LibraryRenameVirtualFolder) {
	v.value = val
	v.isSet = true
}

func (v NullableLibraryRenameVirtualFolder) IsSet() bool {
	return v.isSet
}

func (v *NullableLibraryRenameVirtualFolder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLibraryRenameVirtualFolder(val *LibraryRenameVirtualFolder) *NullableLibraryRenameVirtualFolder {
	return &NullableLibraryRenameVirtualFolder{value: val, isSet: true}
}

func (v NullableLibraryRenameVirtualFolder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLibraryRenameVirtualFolder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


