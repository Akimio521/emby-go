/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the LiveTvSeriesTimerInfoDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LiveTvSeriesTimerInfoDto{}

// LiveTvSeriesTimerInfoDto struct for LiveTvSeriesTimerInfoDto
type LiveTvSeriesTimerInfoDto struct {
	RecordAnyTime *bool `json:"RecordAnyTime,omitempty"`
	SkipEpisodesInLibrary *bool `json:"SkipEpisodesInLibrary,omitempty"`
	RecordAnyChannel *bool `json:"RecordAnyChannel,omitempty"`
	KeepUpTo *int32 `json:"KeepUpTo,omitempty"`
	RecordNewOnly *bool `json:"RecordNewOnly,omitempty"`
	Days []string `json:"Days,omitempty"`
	DayPattern *string `json:"DayPattern,omitempty"`
	ImageTags *map[string]string `json:"ImageTags,omitempty"`
	ParentThumbItemId *string `json:"ParentThumbItemId,omitempty"`
	ParentThumbImageTag *string `json:"ParentThumbImageTag,omitempty"`
	ParentPrimaryImageItemId *string `json:"ParentPrimaryImageItemId,omitempty"`
	ParentPrimaryImageTag *string `json:"ParentPrimaryImageTag,omitempty"`
	Id *string `json:"Id,omitempty"`
	Type *string `json:"Type,omitempty"`
	ServerId *string `json:"ServerId,omitempty"`
	ExternalId *string `json:"ExternalId,omitempty"`
	ChannelId *string `json:"ChannelId,omitempty"`
	ExternalChannelId *string `json:"ExternalChannelId,omitempty"`
	ChannelName *string `json:"ChannelName,omitempty"`
	ChannelPrimaryImageTag *string `json:"ChannelPrimaryImageTag,omitempty"`
	ProgramId *string `json:"ProgramId,omitempty"`
	ExternalProgramId *string `json:"ExternalProgramId,omitempty"`
	Name *string `json:"Name,omitempty"`
	Overview *string `json:"Overview,omitempty"`
	StartDate *time.Time `json:"StartDate,omitempty"`
	EndDate *time.Time `json:"EndDate,omitempty"`
	ServiceName *string `json:"ServiceName,omitempty"`
	Priority *int32 `json:"Priority,omitempty"`
	PrePaddingSeconds *int32 `json:"PrePaddingSeconds,omitempty"`
	PostPaddingSeconds *int32 `json:"PostPaddingSeconds,omitempty"`
	IsPrePaddingRequired *bool `json:"IsPrePaddingRequired,omitempty"`
	ParentBackdropItemId *string `json:"ParentBackdropItemId,omitempty"`
	ParentBackdropImageTags []string `json:"ParentBackdropImageTags,omitempty"`
	IsPostPaddingRequired *bool `json:"IsPostPaddingRequired,omitempty"`
	KeepUntil *string `json:"KeepUntil,omitempty"`
}

// NewLiveTvSeriesTimerInfoDto instantiates a new LiveTvSeriesTimerInfoDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveTvSeriesTimerInfoDto() *LiveTvSeriesTimerInfoDto {
	this := LiveTvSeriesTimerInfoDto{}
	return &this
}

// NewLiveTvSeriesTimerInfoDtoWithDefaults instantiates a new LiveTvSeriesTimerInfoDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveTvSeriesTimerInfoDtoWithDefaults() *LiveTvSeriesTimerInfoDto {
	this := LiveTvSeriesTimerInfoDto{}
	return &this
}

// GetRecordAnyTime returns the RecordAnyTime field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetRecordAnyTime() bool {
	if o == nil || IsNil(o.RecordAnyTime) {
		var ret bool
		return ret
	}
	return *o.RecordAnyTime
}

// GetRecordAnyTimeOk returns a tuple with the RecordAnyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetRecordAnyTimeOk() (*bool, bool) {
	if o == nil || IsNil(o.RecordAnyTime) {
		return nil, false
	}
	return o.RecordAnyTime, true
}

// HasRecordAnyTime returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasRecordAnyTime() bool {
	if o != nil && !IsNil(o.RecordAnyTime) {
		return true
	}

	return false
}

// SetRecordAnyTime gets a reference to the given bool and assigns it to the RecordAnyTime field.
func (o *LiveTvSeriesTimerInfoDto) SetRecordAnyTime(v bool) {
	o.RecordAnyTime = &v
}

// GetSkipEpisodesInLibrary returns the SkipEpisodesInLibrary field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetSkipEpisodesInLibrary() bool {
	if o == nil || IsNil(o.SkipEpisodesInLibrary) {
		var ret bool
		return ret
	}
	return *o.SkipEpisodesInLibrary
}

// GetSkipEpisodesInLibraryOk returns a tuple with the SkipEpisodesInLibrary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetSkipEpisodesInLibraryOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipEpisodesInLibrary) {
		return nil, false
	}
	return o.SkipEpisodesInLibrary, true
}

// HasSkipEpisodesInLibrary returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasSkipEpisodesInLibrary() bool {
	if o != nil && !IsNil(o.SkipEpisodesInLibrary) {
		return true
	}

	return false
}

// SetSkipEpisodesInLibrary gets a reference to the given bool and assigns it to the SkipEpisodesInLibrary field.
func (o *LiveTvSeriesTimerInfoDto) SetSkipEpisodesInLibrary(v bool) {
	o.SkipEpisodesInLibrary = &v
}

// GetRecordAnyChannel returns the RecordAnyChannel field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetRecordAnyChannel() bool {
	if o == nil || IsNil(o.RecordAnyChannel) {
		var ret bool
		return ret
	}
	return *o.RecordAnyChannel
}

// GetRecordAnyChannelOk returns a tuple with the RecordAnyChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetRecordAnyChannelOk() (*bool, bool) {
	if o == nil || IsNil(o.RecordAnyChannel) {
		return nil, false
	}
	return o.RecordAnyChannel, true
}

// HasRecordAnyChannel returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasRecordAnyChannel() bool {
	if o != nil && !IsNil(o.RecordAnyChannel) {
		return true
	}

	return false
}

// SetRecordAnyChannel gets a reference to the given bool and assigns it to the RecordAnyChannel field.
func (o *LiveTvSeriesTimerInfoDto) SetRecordAnyChannel(v bool) {
	o.RecordAnyChannel = &v
}

// GetKeepUpTo returns the KeepUpTo field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetKeepUpTo() int32 {
	if o == nil || IsNil(o.KeepUpTo) {
		var ret int32
		return ret
	}
	return *o.KeepUpTo
}

// GetKeepUpToOk returns a tuple with the KeepUpTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetKeepUpToOk() (*int32, bool) {
	if o == nil || IsNil(o.KeepUpTo) {
		return nil, false
	}
	return o.KeepUpTo, true
}

// HasKeepUpTo returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasKeepUpTo() bool {
	if o != nil && !IsNil(o.KeepUpTo) {
		return true
	}

	return false
}

// SetKeepUpTo gets a reference to the given int32 and assigns it to the KeepUpTo field.
func (o *LiveTvSeriesTimerInfoDto) SetKeepUpTo(v int32) {
	o.KeepUpTo = &v
}

// GetRecordNewOnly returns the RecordNewOnly field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetRecordNewOnly() bool {
	if o == nil || IsNil(o.RecordNewOnly) {
		var ret bool
		return ret
	}
	return *o.RecordNewOnly
}

// GetRecordNewOnlyOk returns a tuple with the RecordNewOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetRecordNewOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.RecordNewOnly) {
		return nil, false
	}
	return o.RecordNewOnly, true
}

// HasRecordNewOnly returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasRecordNewOnly() bool {
	if o != nil && !IsNil(o.RecordNewOnly) {
		return true
	}

	return false
}

// SetRecordNewOnly gets a reference to the given bool and assigns it to the RecordNewOnly field.
func (o *LiveTvSeriesTimerInfoDto) SetRecordNewOnly(v bool) {
	o.RecordNewOnly = &v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetDays() []string {
	if o == nil || IsNil(o.Days) {
		var ret []string
		return ret
	}
	return o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetDaysOk() ([]string, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given []string and assigns it to the Days field.
func (o *LiveTvSeriesTimerInfoDto) SetDays(v []string) {
	o.Days = v
}

// GetDayPattern returns the DayPattern field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetDayPattern() string {
	if o == nil || IsNil(o.DayPattern) {
		var ret string
		return ret
	}
	return *o.DayPattern
}

// GetDayPatternOk returns a tuple with the DayPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetDayPatternOk() (*string, bool) {
	if o == nil || IsNil(o.DayPattern) {
		return nil, false
	}
	return o.DayPattern, true
}

// HasDayPattern returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasDayPattern() bool {
	if o != nil && !IsNil(o.DayPattern) {
		return true
	}

	return false
}

// SetDayPattern gets a reference to the given string and assigns it to the DayPattern field.
func (o *LiveTvSeriesTimerInfoDto) SetDayPattern(v string) {
	o.DayPattern = &v
}

// GetImageTags returns the ImageTags field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetImageTags() map[string]string {
	if o == nil || IsNil(o.ImageTags) {
		var ret map[string]string
		return ret
	}
	return *o.ImageTags
}

// GetImageTagsOk returns a tuple with the ImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetImageTagsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ImageTags) {
		return nil, false
	}
	return o.ImageTags, true
}

// HasImageTags returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasImageTags() bool {
	if o != nil && !IsNil(o.ImageTags) {
		return true
	}

	return false
}

// SetImageTags gets a reference to the given map[string]string and assigns it to the ImageTags field.
func (o *LiveTvSeriesTimerInfoDto) SetImageTags(v map[string]string) {
	o.ImageTags = &v
}

// GetParentThumbItemId returns the ParentThumbItemId field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetParentThumbItemId() string {
	if o == nil || IsNil(o.ParentThumbItemId) {
		var ret string
		return ret
	}
	return *o.ParentThumbItemId
}

// GetParentThumbItemIdOk returns a tuple with the ParentThumbItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetParentThumbItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentThumbItemId) {
		return nil, false
	}
	return o.ParentThumbItemId, true
}

// HasParentThumbItemId returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasParentThumbItemId() bool {
	if o != nil && !IsNil(o.ParentThumbItemId) {
		return true
	}

	return false
}

// SetParentThumbItemId gets a reference to the given string and assigns it to the ParentThumbItemId field.
func (o *LiveTvSeriesTimerInfoDto) SetParentThumbItemId(v string) {
	o.ParentThumbItemId = &v
}

// GetParentThumbImageTag returns the ParentThumbImageTag field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetParentThumbImageTag() string {
	if o == nil || IsNil(o.ParentThumbImageTag) {
		var ret string
		return ret
	}
	return *o.ParentThumbImageTag
}

// GetParentThumbImageTagOk returns a tuple with the ParentThumbImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetParentThumbImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ParentThumbImageTag) {
		return nil, false
	}
	return o.ParentThumbImageTag, true
}

// HasParentThumbImageTag returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasParentThumbImageTag() bool {
	if o != nil && !IsNil(o.ParentThumbImageTag) {
		return true
	}

	return false
}

// SetParentThumbImageTag gets a reference to the given string and assigns it to the ParentThumbImageTag field.
func (o *LiveTvSeriesTimerInfoDto) SetParentThumbImageTag(v string) {
	o.ParentThumbImageTag = &v
}

// GetParentPrimaryImageItemId returns the ParentPrimaryImageItemId field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetParentPrimaryImageItemId() string {
	if o == nil || IsNil(o.ParentPrimaryImageItemId) {
		var ret string
		return ret
	}
	return *o.ParentPrimaryImageItemId
}

// GetParentPrimaryImageItemIdOk returns a tuple with the ParentPrimaryImageItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetParentPrimaryImageItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentPrimaryImageItemId) {
		return nil, false
	}
	return o.ParentPrimaryImageItemId, true
}

// HasParentPrimaryImageItemId returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasParentPrimaryImageItemId() bool {
	if o != nil && !IsNil(o.ParentPrimaryImageItemId) {
		return true
	}

	return false
}

// SetParentPrimaryImageItemId gets a reference to the given string and assigns it to the ParentPrimaryImageItemId field.
func (o *LiveTvSeriesTimerInfoDto) SetParentPrimaryImageItemId(v string) {
	o.ParentPrimaryImageItemId = &v
}

// GetParentPrimaryImageTag returns the ParentPrimaryImageTag field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetParentPrimaryImageTag() string {
	if o == nil || IsNil(o.ParentPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.ParentPrimaryImageTag
}

// GetParentPrimaryImageTagOk returns a tuple with the ParentPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetParentPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ParentPrimaryImageTag) {
		return nil, false
	}
	return o.ParentPrimaryImageTag, true
}

// HasParentPrimaryImageTag returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasParentPrimaryImageTag() bool {
	if o != nil && !IsNil(o.ParentPrimaryImageTag) {
		return true
	}

	return false
}

// SetParentPrimaryImageTag gets a reference to the given string and assigns it to the ParentPrimaryImageTag field.
func (o *LiveTvSeriesTimerInfoDto) SetParentPrimaryImageTag(v string) {
	o.ParentPrimaryImageTag = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LiveTvSeriesTimerInfoDto) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *LiveTvSeriesTimerInfoDto) SetType(v string) {
	o.Type = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *LiveTvSeriesTimerInfoDto) SetServerId(v string) {
	o.ServerId = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *LiveTvSeriesTimerInfoDto) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId) {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *LiveTvSeriesTimerInfoDto) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetExternalChannelId returns the ExternalChannelId field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetExternalChannelId() string {
	if o == nil || IsNil(o.ExternalChannelId) {
		var ret string
		return ret
	}
	return *o.ExternalChannelId
}

// GetExternalChannelIdOk returns a tuple with the ExternalChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetExternalChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalChannelId) {
		return nil, false
	}
	return o.ExternalChannelId, true
}

// HasExternalChannelId returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasExternalChannelId() bool {
	if o != nil && !IsNil(o.ExternalChannelId) {
		return true
	}

	return false
}

// SetExternalChannelId gets a reference to the given string and assigns it to the ExternalChannelId field.
func (o *LiveTvSeriesTimerInfoDto) SetExternalChannelId(v string) {
	o.ExternalChannelId = &v
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName) {
		var ret string
		return ret
	}
	return *o.ChannelName
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetChannelNameOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelName) {
		return nil, false
	}
	return o.ChannelName, true
}

// HasChannelName returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasChannelName() bool {
	if o != nil && !IsNil(o.ChannelName) {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given string and assigns it to the ChannelName field.
func (o *LiveTvSeriesTimerInfoDto) SetChannelName(v string) {
	o.ChannelName = &v
}

// GetChannelPrimaryImageTag returns the ChannelPrimaryImageTag field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetChannelPrimaryImageTag() string {
	if o == nil || IsNil(o.ChannelPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.ChannelPrimaryImageTag
}

// GetChannelPrimaryImageTagOk returns a tuple with the ChannelPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetChannelPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelPrimaryImageTag) {
		return nil, false
	}
	return o.ChannelPrimaryImageTag, true
}

// HasChannelPrimaryImageTag returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasChannelPrimaryImageTag() bool {
	if o != nil && !IsNil(o.ChannelPrimaryImageTag) {
		return true
	}

	return false
}

// SetChannelPrimaryImageTag gets a reference to the given string and assigns it to the ChannelPrimaryImageTag field.
func (o *LiveTvSeriesTimerInfoDto) SetChannelPrimaryImageTag(v string) {
	o.ChannelPrimaryImageTag = &v
}

// GetProgramId returns the ProgramId field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetProgramId() string {
	if o == nil || IsNil(o.ProgramId) {
		var ret string
		return ret
	}
	return *o.ProgramId
}

// GetProgramIdOk returns a tuple with the ProgramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetProgramIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProgramId) {
		return nil, false
	}
	return o.ProgramId, true
}

// HasProgramId returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasProgramId() bool {
	if o != nil && !IsNil(o.ProgramId) {
		return true
	}

	return false
}

// SetProgramId gets a reference to the given string and assigns it to the ProgramId field.
func (o *LiveTvSeriesTimerInfoDto) SetProgramId(v string) {
	o.ProgramId = &v
}

// GetExternalProgramId returns the ExternalProgramId field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetExternalProgramId() string {
	if o == nil || IsNil(o.ExternalProgramId) {
		var ret string
		return ret
	}
	return *o.ExternalProgramId
}

// GetExternalProgramIdOk returns a tuple with the ExternalProgramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetExternalProgramIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalProgramId) {
		return nil, false
	}
	return o.ExternalProgramId, true
}

// HasExternalProgramId returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasExternalProgramId() bool {
	if o != nil && !IsNil(o.ExternalProgramId) {
		return true
	}

	return false
}

// SetExternalProgramId gets a reference to the given string and assigns it to the ExternalProgramId field.
func (o *LiveTvSeriesTimerInfoDto) SetExternalProgramId(v string) {
	o.ExternalProgramId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LiveTvSeriesTimerInfoDto) SetName(v string) {
	o.Name = &v
}

// GetOverview returns the Overview field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetOverview() string {
	if o == nil || IsNil(o.Overview) {
		var ret string
		return ret
	}
	return *o.Overview
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetOverviewOk() (*string, bool) {
	if o == nil || IsNil(o.Overview) {
		return nil, false
	}
	return o.Overview, true
}

// HasOverview returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasOverview() bool {
	if o != nil && !IsNil(o.Overview) {
		return true
	}

	return false
}

// SetOverview gets a reference to the given string and assigns it to the Overview field.
func (o *LiveTvSeriesTimerInfoDto) SetOverview(v string) {
	o.Overview = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *LiveTvSeriesTimerInfoDto) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *LiveTvSeriesTimerInfoDto) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *LiveTvSeriesTimerInfoDto) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *LiveTvSeriesTimerInfoDto) SetPriority(v int32) {
	o.Priority = &v
}

// GetPrePaddingSeconds returns the PrePaddingSeconds field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetPrePaddingSeconds() int32 {
	if o == nil || IsNil(o.PrePaddingSeconds) {
		var ret int32
		return ret
	}
	return *o.PrePaddingSeconds
}

// GetPrePaddingSecondsOk returns a tuple with the PrePaddingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetPrePaddingSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PrePaddingSeconds) {
		return nil, false
	}
	return o.PrePaddingSeconds, true
}

// HasPrePaddingSeconds returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasPrePaddingSeconds() bool {
	if o != nil && !IsNil(o.PrePaddingSeconds) {
		return true
	}

	return false
}

// SetPrePaddingSeconds gets a reference to the given int32 and assigns it to the PrePaddingSeconds field.
func (o *LiveTvSeriesTimerInfoDto) SetPrePaddingSeconds(v int32) {
	o.PrePaddingSeconds = &v
}

// GetPostPaddingSeconds returns the PostPaddingSeconds field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetPostPaddingSeconds() int32 {
	if o == nil || IsNil(o.PostPaddingSeconds) {
		var ret int32
		return ret
	}
	return *o.PostPaddingSeconds
}

// GetPostPaddingSecondsOk returns a tuple with the PostPaddingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetPostPaddingSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PostPaddingSeconds) {
		return nil, false
	}
	return o.PostPaddingSeconds, true
}

// HasPostPaddingSeconds returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasPostPaddingSeconds() bool {
	if o != nil && !IsNil(o.PostPaddingSeconds) {
		return true
	}

	return false
}

// SetPostPaddingSeconds gets a reference to the given int32 and assigns it to the PostPaddingSeconds field.
func (o *LiveTvSeriesTimerInfoDto) SetPostPaddingSeconds(v int32) {
	o.PostPaddingSeconds = &v
}

// GetIsPrePaddingRequired returns the IsPrePaddingRequired field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetIsPrePaddingRequired() bool {
	if o == nil || IsNil(o.IsPrePaddingRequired) {
		var ret bool
		return ret
	}
	return *o.IsPrePaddingRequired
}

// GetIsPrePaddingRequiredOk returns a tuple with the IsPrePaddingRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetIsPrePaddingRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrePaddingRequired) {
		return nil, false
	}
	return o.IsPrePaddingRequired, true
}

// HasIsPrePaddingRequired returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasIsPrePaddingRequired() bool {
	if o != nil && !IsNil(o.IsPrePaddingRequired) {
		return true
	}

	return false
}

// SetIsPrePaddingRequired gets a reference to the given bool and assigns it to the IsPrePaddingRequired field.
func (o *LiveTvSeriesTimerInfoDto) SetIsPrePaddingRequired(v bool) {
	o.IsPrePaddingRequired = &v
}

// GetParentBackdropItemId returns the ParentBackdropItemId field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetParentBackdropItemId() string {
	if o == nil || IsNil(o.ParentBackdropItemId) {
		var ret string
		return ret
	}
	return *o.ParentBackdropItemId
}

// GetParentBackdropItemIdOk returns a tuple with the ParentBackdropItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetParentBackdropItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentBackdropItemId) {
		return nil, false
	}
	return o.ParentBackdropItemId, true
}

// HasParentBackdropItemId returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasParentBackdropItemId() bool {
	if o != nil && !IsNil(o.ParentBackdropItemId) {
		return true
	}

	return false
}

// SetParentBackdropItemId gets a reference to the given string and assigns it to the ParentBackdropItemId field.
func (o *LiveTvSeriesTimerInfoDto) SetParentBackdropItemId(v string) {
	o.ParentBackdropItemId = &v
}

// GetParentBackdropImageTags returns the ParentBackdropImageTags field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetParentBackdropImageTags() []string {
	if o == nil || IsNil(o.ParentBackdropImageTags) {
		var ret []string
		return ret
	}
	return o.ParentBackdropImageTags
}

// GetParentBackdropImageTagsOk returns a tuple with the ParentBackdropImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetParentBackdropImageTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.ParentBackdropImageTags) {
		return nil, false
	}
	return o.ParentBackdropImageTags, true
}

// HasParentBackdropImageTags returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasParentBackdropImageTags() bool {
	if o != nil && !IsNil(o.ParentBackdropImageTags) {
		return true
	}

	return false
}

// SetParentBackdropImageTags gets a reference to the given []string and assigns it to the ParentBackdropImageTags field.
func (o *LiveTvSeriesTimerInfoDto) SetParentBackdropImageTags(v []string) {
	o.ParentBackdropImageTags = v
}

// GetIsPostPaddingRequired returns the IsPostPaddingRequired field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetIsPostPaddingRequired() bool {
	if o == nil || IsNil(o.IsPostPaddingRequired) {
		var ret bool
		return ret
	}
	return *o.IsPostPaddingRequired
}

// GetIsPostPaddingRequiredOk returns a tuple with the IsPostPaddingRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetIsPostPaddingRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPostPaddingRequired) {
		return nil, false
	}
	return o.IsPostPaddingRequired, true
}

// HasIsPostPaddingRequired returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasIsPostPaddingRequired() bool {
	if o != nil && !IsNil(o.IsPostPaddingRequired) {
		return true
	}

	return false
}

// SetIsPostPaddingRequired gets a reference to the given bool and assigns it to the IsPostPaddingRequired field.
func (o *LiveTvSeriesTimerInfoDto) SetIsPostPaddingRequired(v bool) {
	o.IsPostPaddingRequired = &v
}

// GetKeepUntil returns the KeepUntil field value if set, zero value otherwise.
func (o *LiveTvSeriesTimerInfoDto) GetKeepUntil() string {
	if o == nil || IsNil(o.KeepUntil) {
		var ret string
		return ret
	}
	return *o.KeepUntil
}

// GetKeepUntilOk returns a tuple with the KeepUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvSeriesTimerInfoDto) GetKeepUntilOk() (*string, bool) {
	if o == nil || IsNil(o.KeepUntil) {
		return nil, false
	}
	return o.KeepUntil, true
}

// HasKeepUntil returns a boolean if a field has been set.
func (o *LiveTvSeriesTimerInfoDto) HasKeepUntil() bool {
	if o != nil && !IsNil(o.KeepUntil) {
		return true
	}

	return false
}

// SetKeepUntil gets a reference to the given string and assigns it to the KeepUntil field.
func (o *LiveTvSeriesTimerInfoDto) SetKeepUntil(v string) {
	o.KeepUntil = &v
}

func (o LiveTvSeriesTimerInfoDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LiveTvSeriesTimerInfoDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordAnyTime) {
		toSerialize["RecordAnyTime"] = o.RecordAnyTime
	}
	if !IsNil(o.SkipEpisodesInLibrary) {
		toSerialize["SkipEpisodesInLibrary"] = o.SkipEpisodesInLibrary
	}
	if !IsNil(o.RecordAnyChannel) {
		toSerialize["RecordAnyChannel"] = o.RecordAnyChannel
	}
	if !IsNil(o.KeepUpTo) {
		toSerialize["KeepUpTo"] = o.KeepUpTo
	}
	if !IsNil(o.RecordNewOnly) {
		toSerialize["RecordNewOnly"] = o.RecordNewOnly
	}
	if !IsNil(o.Days) {
		toSerialize["Days"] = o.Days
	}
	if !IsNil(o.DayPattern) {
		toSerialize["DayPattern"] = o.DayPattern
	}
	if !IsNil(o.ImageTags) {
		toSerialize["ImageTags"] = o.ImageTags
	}
	if !IsNil(o.ParentThumbItemId) {
		toSerialize["ParentThumbItemId"] = o.ParentThumbItemId
	}
	if !IsNil(o.ParentThumbImageTag) {
		toSerialize["ParentThumbImageTag"] = o.ParentThumbImageTag
	}
	if !IsNil(o.ParentPrimaryImageItemId) {
		toSerialize["ParentPrimaryImageItemId"] = o.ParentPrimaryImageItemId
	}
	if !IsNil(o.ParentPrimaryImageTag) {
		toSerialize["ParentPrimaryImageTag"] = o.ParentPrimaryImageTag
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.ServerId) {
		toSerialize["ServerId"] = o.ServerId
	}
	if !IsNil(o.ExternalId) {
		toSerialize["ExternalId"] = o.ExternalId
	}
	if !IsNil(o.ChannelId) {
		toSerialize["ChannelId"] = o.ChannelId
	}
	if !IsNil(o.ExternalChannelId) {
		toSerialize["ExternalChannelId"] = o.ExternalChannelId
	}
	if !IsNil(o.ChannelName) {
		toSerialize["ChannelName"] = o.ChannelName
	}
	if !IsNil(o.ChannelPrimaryImageTag) {
		toSerialize["ChannelPrimaryImageTag"] = o.ChannelPrimaryImageTag
	}
	if !IsNil(o.ProgramId) {
		toSerialize["ProgramId"] = o.ProgramId
	}
	if !IsNil(o.ExternalProgramId) {
		toSerialize["ExternalProgramId"] = o.ExternalProgramId
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Overview) {
		toSerialize["Overview"] = o.Overview
	}
	if !IsNil(o.StartDate) {
		toSerialize["StartDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["EndDate"] = o.EndDate
	}
	if !IsNil(o.ServiceName) {
		toSerialize["ServiceName"] = o.ServiceName
	}
	if !IsNil(o.Priority) {
		toSerialize["Priority"] = o.Priority
	}
	if !IsNil(o.PrePaddingSeconds) {
		toSerialize["PrePaddingSeconds"] = o.PrePaddingSeconds
	}
	if !IsNil(o.PostPaddingSeconds) {
		toSerialize["PostPaddingSeconds"] = o.PostPaddingSeconds
	}
	if !IsNil(o.IsPrePaddingRequired) {
		toSerialize["IsPrePaddingRequired"] = o.IsPrePaddingRequired
	}
	if !IsNil(o.ParentBackdropItemId) {
		toSerialize["ParentBackdropItemId"] = o.ParentBackdropItemId
	}
	if !IsNil(o.ParentBackdropImageTags) {
		toSerialize["ParentBackdropImageTags"] = o.ParentBackdropImageTags
	}
	if !IsNil(o.IsPostPaddingRequired) {
		toSerialize["IsPostPaddingRequired"] = o.IsPostPaddingRequired
	}
	if !IsNil(o.KeepUntil) {
		toSerialize["KeepUntil"] = o.KeepUntil
	}
	return toSerialize, nil
}

type NullableLiveTvSeriesTimerInfoDto struct {
	value *LiveTvSeriesTimerInfoDto
	isSet bool
}

func (v NullableLiveTvSeriesTimerInfoDto) Get() *LiveTvSeriesTimerInfoDto {
	return v.value
}

func (v *NullableLiveTvSeriesTimerInfoDto) Set(val *LiveTvSeriesTimerInfoDto) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveTvSeriesTimerInfoDto) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveTvSeriesTimerInfoDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveTvSeriesTimerInfoDto(val *LiveTvSeriesTimerInfoDto) *NullableLiveTvSeriesTimerInfoDto {
	return &NullableLiveTvSeriesTimerInfoDto{value: val, isSet: true}
}

func (v NullableLiveTvSeriesTimerInfoDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveTvSeriesTimerInfoDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


