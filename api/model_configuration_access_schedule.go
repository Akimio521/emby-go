/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ConfigurationAccessSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigurationAccessSchedule{}

// ConfigurationAccessSchedule struct for ConfigurationAccessSchedule
type ConfigurationAccessSchedule struct {
	DayOfWeek *string `json:"DayOfWeek,omitempty"`
	StartHour *float64 `json:"StartHour,omitempty"`
	EndHour *float64 `json:"EndHour,omitempty"`
}

// NewConfigurationAccessSchedule instantiates a new ConfigurationAccessSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigurationAccessSchedule() *ConfigurationAccessSchedule {
	this := ConfigurationAccessSchedule{}
	return &this
}

// NewConfigurationAccessScheduleWithDefaults instantiates a new ConfigurationAccessSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigurationAccessScheduleWithDefaults() *ConfigurationAccessSchedule {
	this := ConfigurationAccessSchedule{}
	return &this
}

// GetDayOfWeek returns the DayOfWeek field value if set, zero value otherwise.
func (o *ConfigurationAccessSchedule) GetDayOfWeek() string {
	if o == nil || IsNil(o.DayOfWeek) {
		var ret string
		return ret
	}
	return *o.DayOfWeek
}

// GetDayOfWeekOk returns a tuple with the DayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationAccessSchedule) GetDayOfWeekOk() (*string, bool) {
	if o == nil || IsNil(o.DayOfWeek) {
		return nil, false
	}
	return o.DayOfWeek, true
}

// HasDayOfWeek returns a boolean if a field has been set.
func (o *ConfigurationAccessSchedule) HasDayOfWeek() bool {
	if o != nil && !IsNil(o.DayOfWeek) {
		return true
	}

	return false
}

// SetDayOfWeek gets a reference to the given string and assigns it to the DayOfWeek field.
func (o *ConfigurationAccessSchedule) SetDayOfWeek(v string) {
	o.DayOfWeek = &v
}

// GetStartHour returns the StartHour field value if set, zero value otherwise.
func (o *ConfigurationAccessSchedule) GetStartHour() float64 {
	if o == nil || IsNil(o.StartHour) {
		var ret float64
		return ret
	}
	return *o.StartHour
}

// GetStartHourOk returns a tuple with the StartHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationAccessSchedule) GetStartHourOk() (*float64, bool) {
	if o == nil || IsNil(o.StartHour) {
		return nil, false
	}
	return o.StartHour, true
}

// HasStartHour returns a boolean if a field has been set.
func (o *ConfigurationAccessSchedule) HasStartHour() bool {
	if o != nil && !IsNil(o.StartHour) {
		return true
	}

	return false
}

// SetStartHour gets a reference to the given float64 and assigns it to the StartHour field.
func (o *ConfigurationAccessSchedule) SetStartHour(v float64) {
	o.StartHour = &v
}

// GetEndHour returns the EndHour field value if set, zero value otherwise.
func (o *ConfigurationAccessSchedule) GetEndHour() float64 {
	if o == nil || IsNil(o.EndHour) {
		var ret float64
		return ret
	}
	return *o.EndHour
}

// GetEndHourOk returns a tuple with the EndHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationAccessSchedule) GetEndHourOk() (*float64, bool) {
	if o == nil || IsNil(o.EndHour) {
		return nil, false
	}
	return o.EndHour, true
}

// HasEndHour returns a boolean if a field has been set.
func (o *ConfigurationAccessSchedule) HasEndHour() bool {
	if o != nil && !IsNil(o.EndHour) {
		return true
	}

	return false
}

// SetEndHour gets a reference to the given float64 and assigns it to the EndHour field.
func (o *ConfigurationAccessSchedule) SetEndHour(v float64) {
	o.EndHour = &v
}

func (o ConfigurationAccessSchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigurationAccessSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DayOfWeek) {
		toSerialize["DayOfWeek"] = o.DayOfWeek
	}
	if !IsNil(o.StartHour) {
		toSerialize["StartHour"] = o.StartHour
	}
	if !IsNil(o.EndHour) {
		toSerialize["EndHour"] = o.EndHour
	}
	return toSerialize, nil
}

type NullableConfigurationAccessSchedule struct {
	value *ConfigurationAccessSchedule
	isSet bool
}

func (v NullableConfigurationAccessSchedule) Get() *ConfigurationAccessSchedule {
	return v.value
}

func (v *NullableConfigurationAccessSchedule) Set(val *ConfigurationAccessSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigurationAccessSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigurationAccessSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigurationAccessSchedule(val *ConfigurationAccessSchedule) *NullableConfigurationAccessSchedule {
	return &NullableConfigurationAccessSchedule{value: val, isSet: true}
}

func (v NullableConfigurationAccessSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigurationAccessSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


