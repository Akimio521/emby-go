/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the NewsNewsItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewsNewsItem{}

// NewsNewsItem struct for NewsNewsItem
type NewsNewsItem struct {
	Title *string `json:"Title,omitempty"`
	Link *string `json:"Link,omitempty"`
	Description *string `json:"Description,omitempty"`
	DescriptionHtml *string `json:"DescriptionHtml,omitempty"`
	Guid *string `json:"Guid,omitempty"`
	Date *time.Time `json:"Date,omitempty"`
}

// NewNewsNewsItem instantiates a new NewsNewsItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewsNewsItem() *NewsNewsItem {
	this := NewsNewsItem{}
	return &this
}

// NewNewsNewsItemWithDefaults instantiates a new NewsNewsItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewsNewsItemWithDefaults() *NewsNewsItem {
	this := NewsNewsItem{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *NewsNewsItem) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsNewsItem) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *NewsNewsItem) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *NewsNewsItem) SetTitle(v string) {
	o.Title = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *NewsNewsItem) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsNewsItem) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *NewsNewsItem) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *NewsNewsItem) SetLink(v string) {
	o.Link = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NewsNewsItem) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsNewsItem) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NewsNewsItem) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NewsNewsItem) SetDescription(v string) {
	o.Description = &v
}

// GetDescriptionHtml returns the DescriptionHtml field value if set, zero value otherwise.
func (o *NewsNewsItem) GetDescriptionHtml() string {
	if o == nil || IsNil(o.DescriptionHtml) {
		var ret string
		return ret
	}
	return *o.DescriptionHtml
}

// GetDescriptionHtmlOk returns a tuple with the DescriptionHtml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsNewsItem) GetDescriptionHtmlOk() (*string, bool) {
	if o == nil || IsNil(o.DescriptionHtml) {
		return nil, false
	}
	return o.DescriptionHtml, true
}

// HasDescriptionHtml returns a boolean if a field has been set.
func (o *NewsNewsItem) HasDescriptionHtml() bool {
	if o != nil && !IsNil(o.DescriptionHtml) {
		return true
	}

	return false
}

// SetDescriptionHtml gets a reference to the given string and assigns it to the DescriptionHtml field.
func (o *NewsNewsItem) SetDescriptionHtml(v string) {
	o.DescriptionHtml = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *NewsNewsItem) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsNewsItem) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *NewsNewsItem) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *NewsNewsItem) SetGuid(v string) {
	o.Guid = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *NewsNewsItem) GetDate() time.Time {
	if o == nil || IsNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewsNewsItem) GetDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *NewsNewsItem) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *NewsNewsItem) SetDate(v time.Time) {
	o.Date = &v
}

func (o NewsNewsItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewsNewsItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["Title"] = o.Title
	}
	if !IsNil(o.Link) {
		toSerialize["Link"] = o.Link
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.DescriptionHtml) {
		toSerialize["DescriptionHtml"] = o.DescriptionHtml
	}
	if !IsNil(o.Guid) {
		toSerialize["Guid"] = o.Guid
	}
	if !IsNil(o.Date) {
		toSerialize["Date"] = o.Date
	}
	return toSerialize, nil
}

type NullableNewsNewsItem struct {
	value *NewsNewsItem
	isSet bool
}

func (v NullableNewsNewsItem) Get() *NewsNewsItem {
	return v.value
}

func (v *NullableNewsNewsItem) Set(val *NewsNewsItem) {
	v.value = val
	v.isSet = true
}

func (v NullableNewsNewsItem) IsSet() bool {
	return v.isSet
}

func (v *NullableNewsNewsItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewsNewsItem(val *NewsNewsItem) *NullableNewsNewsItem {
	return &NullableNewsNewsItem{value: val, isSet: true}
}

func (v NullableNewsNewsItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewsNewsItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


