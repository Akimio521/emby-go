/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the DisplayPreferences type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisplayPreferences{}

// DisplayPreferences struct for DisplayPreferences
type DisplayPreferences struct {
	Id *string `json:"Id,omitempty"`
	ViewType *string `json:"ViewType,omitempty"`
	SortBy *string `json:"SortBy,omitempty"`
	IndexBy *string `json:"IndexBy,omitempty"`
	RememberIndexing *bool `json:"RememberIndexing,omitempty"`
	PrimaryImageHeight *int32 `json:"PrimaryImageHeight,omitempty"`
	PrimaryImageWidth *int32 `json:"PrimaryImageWidth,omitempty"`
	CustomPrefs *map[string]string `json:"CustomPrefs,omitempty"`
	ScrollDirection *string `json:"ScrollDirection,omitempty"`
	ShowBackdrop *bool `json:"ShowBackdrop,omitempty"`
	RememberSorting *bool `json:"RememberSorting,omitempty"`
	SortOrder *string `json:"SortOrder,omitempty"`
	ShowSidebar *bool `json:"ShowSidebar,omitempty"`
	Client *string `json:"Client,omitempty"`
}

// NewDisplayPreferences instantiates a new DisplayPreferences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisplayPreferences() *DisplayPreferences {
	this := DisplayPreferences{}
	return &this
}

// NewDisplayPreferencesWithDefaults instantiates a new DisplayPreferences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisplayPreferencesWithDefaults() *DisplayPreferences {
	this := DisplayPreferences{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DisplayPreferences) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DisplayPreferences) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DisplayPreferences) SetId(v string) {
	o.Id = &v
}

// GetViewType returns the ViewType field value if set, zero value otherwise.
func (o *DisplayPreferences) GetViewType() string {
	if o == nil || IsNil(o.ViewType) {
		var ret string
		return ret
	}
	return *o.ViewType
}

// GetViewTypeOk returns a tuple with the ViewType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetViewTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ViewType) {
		return nil, false
	}
	return o.ViewType, true
}

// HasViewType returns a boolean if a field has been set.
func (o *DisplayPreferences) HasViewType() bool {
	if o != nil && !IsNil(o.ViewType) {
		return true
	}

	return false
}

// SetViewType gets a reference to the given string and assigns it to the ViewType field.
func (o *DisplayPreferences) SetViewType(v string) {
	o.ViewType = &v
}

// GetSortBy returns the SortBy field value if set, zero value otherwise.
func (o *DisplayPreferences) GetSortBy() string {
	if o == nil || IsNil(o.SortBy) {
		var ret string
		return ret
	}
	return *o.SortBy
}

// GetSortByOk returns a tuple with the SortBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetSortByOk() (*string, bool) {
	if o == nil || IsNil(o.SortBy) {
		return nil, false
	}
	return o.SortBy, true
}

// HasSortBy returns a boolean if a field has been set.
func (o *DisplayPreferences) HasSortBy() bool {
	if o != nil && !IsNil(o.SortBy) {
		return true
	}

	return false
}

// SetSortBy gets a reference to the given string and assigns it to the SortBy field.
func (o *DisplayPreferences) SetSortBy(v string) {
	o.SortBy = &v
}

// GetIndexBy returns the IndexBy field value if set, zero value otherwise.
func (o *DisplayPreferences) GetIndexBy() string {
	if o == nil || IsNil(o.IndexBy) {
		var ret string
		return ret
	}
	return *o.IndexBy
}

// GetIndexByOk returns a tuple with the IndexBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetIndexByOk() (*string, bool) {
	if o == nil || IsNil(o.IndexBy) {
		return nil, false
	}
	return o.IndexBy, true
}

// HasIndexBy returns a boolean if a field has been set.
func (o *DisplayPreferences) HasIndexBy() bool {
	if o != nil && !IsNil(o.IndexBy) {
		return true
	}

	return false
}

// SetIndexBy gets a reference to the given string and assigns it to the IndexBy field.
func (o *DisplayPreferences) SetIndexBy(v string) {
	o.IndexBy = &v
}

// GetRememberIndexing returns the RememberIndexing field value if set, zero value otherwise.
func (o *DisplayPreferences) GetRememberIndexing() bool {
	if o == nil || IsNil(o.RememberIndexing) {
		var ret bool
		return ret
	}
	return *o.RememberIndexing
}

// GetRememberIndexingOk returns a tuple with the RememberIndexing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetRememberIndexingOk() (*bool, bool) {
	if o == nil || IsNil(o.RememberIndexing) {
		return nil, false
	}
	return o.RememberIndexing, true
}

// HasRememberIndexing returns a boolean if a field has been set.
func (o *DisplayPreferences) HasRememberIndexing() bool {
	if o != nil && !IsNil(o.RememberIndexing) {
		return true
	}

	return false
}

// SetRememberIndexing gets a reference to the given bool and assigns it to the RememberIndexing field.
func (o *DisplayPreferences) SetRememberIndexing(v bool) {
	o.RememberIndexing = &v
}

// GetPrimaryImageHeight returns the PrimaryImageHeight field value if set, zero value otherwise.
func (o *DisplayPreferences) GetPrimaryImageHeight() int32 {
	if o == nil || IsNil(o.PrimaryImageHeight) {
		var ret int32
		return ret
	}
	return *o.PrimaryImageHeight
}

// GetPrimaryImageHeightOk returns a tuple with the PrimaryImageHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetPrimaryImageHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.PrimaryImageHeight) {
		return nil, false
	}
	return o.PrimaryImageHeight, true
}

// HasPrimaryImageHeight returns a boolean if a field has been set.
func (o *DisplayPreferences) HasPrimaryImageHeight() bool {
	if o != nil && !IsNil(o.PrimaryImageHeight) {
		return true
	}

	return false
}

// SetPrimaryImageHeight gets a reference to the given int32 and assigns it to the PrimaryImageHeight field.
func (o *DisplayPreferences) SetPrimaryImageHeight(v int32) {
	o.PrimaryImageHeight = &v
}

// GetPrimaryImageWidth returns the PrimaryImageWidth field value if set, zero value otherwise.
func (o *DisplayPreferences) GetPrimaryImageWidth() int32 {
	if o == nil || IsNil(o.PrimaryImageWidth) {
		var ret int32
		return ret
	}
	return *o.PrimaryImageWidth
}

// GetPrimaryImageWidthOk returns a tuple with the PrimaryImageWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetPrimaryImageWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.PrimaryImageWidth) {
		return nil, false
	}
	return o.PrimaryImageWidth, true
}

// HasPrimaryImageWidth returns a boolean if a field has been set.
func (o *DisplayPreferences) HasPrimaryImageWidth() bool {
	if o != nil && !IsNil(o.PrimaryImageWidth) {
		return true
	}

	return false
}

// SetPrimaryImageWidth gets a reference to the given int32 and assigns it to the PrimaryImageWidth field.
func (o *DisplayPreferences) SetPrimaryImageWidth(v int32) {
	o.PrimaryImageWidth = &v
}

// GetCustomPrefs returns the CustomPrefs field value if set, zero value otherwise.
func (o *DisplayPreferences) GetCustomPrefs() map[string]string {
	if o == nil || IsNil(o.CustomPrefs) {
		var ret map[string]string
		return ret
	}
	return *o.CustomPrefs
}

// GetCustomPrefsOk returns a tuple with the CustomPrefs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetCustomPrefsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CustomPrefs) {
		return nil, false
	}
	return o.CustomPrefs, true
}

// HasCustomPrefs returns a boolean if a field has been set.
func (o *DisplayPreferences) HasCustomPrefs() bool {
	if o != nil && !IsNil(o.CustomPrefs) {
		return true
	}

	return false
}

// SetCustomPrefs gets a reference to the given map[string]string and assigns it to the CustomPrefs field.
func (o *DisplayPreferences) SetCustomPrefs(v map[string]string) {
	o.CustomPrefs = &v
}

// GetScrollDirection returns the ScrollDirection field value if set, zero value otherwise.
func (o *DisplayPreferences) GetScrollDirection() string {
	if o == nil || IsNil(o.ScrollDirection) {
		var ret string
		return ret
	}
	return *o.ScrollDirection
}

// GetScrollDirectionOk returns a tuple with the ScrollDirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetScrollDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.ScrollDirection) {
		return nil, false
	}
	return o.ScrollDirection, true
}

// HasScrollDirection returns a boolean if a field has been set.
func (o *DisplayPreferences) HasScrollDirection() bool {
	if o != nil && !IsNil(o.ScrollDirection) {
		return true
	}

	return false
}

// SetScrollDirection gets a reference to the given string and assigns it to the ScrollDirection field.
func (o *DisplayPreferences) SetScrollDirection(v string) {
	o.ScrollDirection = &v
}

// GetShowBackdrop returns the ShowBackdrop field value if set, zero value otherwise.
func (o *DisplayPreferences) GetShowBackdrop() bool {
	if o == nil || IsNil(o.ShowBackdrop) {
		var ret bool
		return ret
	}
	return *o.ShowBackdrop
}

// GetShowBackdropOk returns a tuple with the ShowBackdrop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetShowBackdropOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowBackdrop) {
		return nil, false
	}
	return o.ShowBackdrop, true
}

// HasShowBackdrop returns a boolean if a field has been set.
func (o *DisplayPreferences) HasShowBackdrop() bool {
	if o != nil && !IsNil(o.ShowBackdrop) {
		return true
	}

	return false
}

// SetShowBackdrop gets a reference to the given bool and assigns it to the ShowBackdrop field.
func (o *DisplayPreferences) SetShowBackdrop(v bool) {
	o.ShowBackdrop = &v
}

// GetRememberSorting returns the RememberSorting field value if set, zero value otherwise.
func (o *DisplayPreferences) GetRememberSorting() bool {
	if o == nil || IsNil(o.RememberSorting) {
		var ret bool
		return ret
	}
	return *o.RememberSorting
}

// GetRememberSortingOk returns a tuple with the RememberSorting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetRememberSortingOk() (*bool, bool) {
	if o == nil || IsNil(o.RememberSorting) {
		return nil, false
	}
	return o.RememberSorting, true
}

// HasRememberSorting returns a boolean if a field has been set.
func (o *DisplayPreferences) HasRememberSorting() bool {
	if o != nil && !IsNil(o.RememberSorting) {
		return true
	}

	return false
}

// SetRememberSorting gets a reference to the given bool and assigns it to the RememberSorting field.
func (o *DisplayPreferences) SetRememberSorting(v bool) {
	o.RememberSorting = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *DisplayPreferences) GetSortOrder() string {
	if o == nil || IsNil(o.SortOrder) {
		var ret string
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetSortOrderOk() (*string, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *DisplayPreferences) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given string and assigns it to the SortOrder field.
func (o *DisplayPreferences) SetSortOrder(v string) {
	o.SortOrder = &v
}

// GetShowSidebar returns the ShowSidebar field value if set, zero value otherwise.
func (o *DisplayPreferences) GetShowSidebar() bool {
	if o == nil || IsNil(o.ShowSidebar) {
		var ret bool
		return ret
	}
	return *o.ShowSidebar
}

// GetShowSidebarOk returns a tuple with the ShowSidebar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetShowSidebarOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowSidebar) {
		return nil, false
	}
	return o.ShowSidebar, true
}

// HasShowSidebar returns a boolean if a field has been set.
func (o *DisplayPreferences) HasShowSidebar() bool {
	if o != nil && !IsNil(o.ShowSidebar) {
		return true
	}

	return false
}

// SetShowSidebar gets a reference to the given bool and assigns it to the ShowSidebar field.
func (o *DisplayPreferences) SetShowSidebar(v bool) {
	o.ShowSidebar = &v
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *DisplayPreferences) GetClient() string {
	if o == nil || IsNil(o.Client) {
		var ret string
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayPreferences) GetClientOk() (*string, bool) {
	if o == nil || IsNil(o.Client) {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *DisplayPreferences) HasClient() bool {
	if o != nil && !IsNil(o.Client) {
		return true
	}

	return false
}

// SetClient gets a reference to the given string and assigns it to the Client field.
func (o *DisplayPreferences) SetClient(v string) {
	o.Client = &v
}

func (o DisplayPreferences) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisplayPreferences) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.ViewType) {
		toSerialize["ViewType"] = o.ViewType
	}
	if !IsNil(o.SortBy) {
		toSerialize["SortBy"] = o.SortBy
	}
	if !IsNil(o.IndexBy) {
		toSerialize["IndexBy"] = o.IndexBy
	}
	if !IsNil(o.RememberIndexing) {
		toSerialize["RememberIndexing"] = o.RememberIndexing
	}
	if !IsNil(o.PrimaryImageHeight) {
		toSerialize["PrimaryImageHeight"] = o.PrimaryImageHeight
	}
	if !IsNil(o.PrimaryImageWidth) {
		toSerialize["PrimaryImageWidth"] = o.PrimaryImageWidth
	}
	if !IsNil(o.CustomPrefs) {
		toSerialize["CustomPrefs"] = o.CustomPrefs
	}
	if !IsNil(o.ScrollDirection) {
		toSerialize["ScrollDirection"] = o.ScrollDirection
	}
	if !IsNil(o.ShowBackdrop) {
		toSerialize["ShowBackdrop"] = o.ShowBackdrop
	}
	if !IsNil(o.RememberSorting) {
		toSerialize["RememberSorting"] = o.RememberSorting
	}
	if !IsNil(o.SortOrder) {
		toSerialize["SortOrder"] = o.SortOrder
	}
	if !IsNil(o.ShowSidebar) {
		toSerialize["ShowSidebar"] = o.ShowSidebar
	}
	if !IsNil(o.Client) {
		toSerialize["Client"] = o.Client
	}
	return toSerialize, nil
}

type NullableDisplayPreferences struct {
	value *DisplayPreferences
	isSet bool
}

func (v NullableDisplayPreferences) Get() *DisplayPreferences {
	return v.value
}

func (v *NullableDisplayPreferences) Set(val *DisplayPreferences) {
	v.value = val
	v.isSet = true
}

func (v NullableDisplayPreferences) IsSet() bool {
	return v.isSet
}

func (v *NullableDisplayPreferences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisplayPreferences(val *DisplayPreferences) *NullableDisplayPreferences {
	return &NullableDisplayPreferences{value: val, isSet: true}
}

func (v NullableDisplayPreferences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisplayPreferences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


