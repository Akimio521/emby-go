/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the DevicesDeviceOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DevicesDeviceOptions{}

// DevicesDeviceOptions struct for DevicesDeviceOptions
type DevicesDeviceOptions struct {
	CustomName *string `json:"CustomName,omitempty"`
}

// NewDevicesDeviceOptions instantiates a new DevicesDeviceOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevicesDeviceOptions() *DevicesDeviceOptions {
	this := DevicesDeviceOptions{}
	return &this
}

// NewDevicesDeviceOptionsWithDefaults instantiates a new DevicesDeviceOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevicesDeviceOptionsWithDefaults() *DevicesDeviceOptions {
	this := DevicesDeviceOptions{}
	return &this
}

// GetCustomName returns the CustomName field value if set, zero value otherwise.
func (o *DevicesDeviceOptions) GetCustomName() string {
	if o == nil || IsNil(o.CustomName) {
		var ret string
		return ret
	}
	return *o.CustomName
}

// GetCustomNameOk returns a tuple with the CustomName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesDeviceOptions) GetCustomNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomName) {
		return nil, false
	}
	return o.CustomName, true
}

// HasCustomName returns a boolean if a field has been set.
func (o *DevicesDeviceOptions) HasCustomName() bool {
	if o != nil && !IsNil(o.CustomName) {
		return true
	}

	return false
}

// SetCustomName gets a reference to the given string and assigns it to the CustomName field.
func (o *DevicesDeviceOptions) SetCustomName(v string) {
	o.CustomName = &v
}

func (o DevicesDeviceOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DevicesDeviceOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomName) {
		toSerialize["CustomName"] = o.CustomName
	}
	return toSerialize, nil
}

type NullableDevicesDeviceOptions struct {
	value *DevicesDeviceOptions
	isSet bool
}

func (v NullableDevicesDeviceOptions) Get() *DevicesDeviceOptions {
	return v.value
}

func (v *NullableDevicesDeviceOptions) Set(val *DevicesDeviceOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableDevicesDeviceOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableDevicesDeviceOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevicesDeviceOptions(val *DevicesDeviceOptions) *NullableDevicesDeviceOptions {
	return &NullableDevicesDeviceOptions{value: val, isSet: true}
}

func (v NullableDevicesDeviceOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevicesDeviceOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


