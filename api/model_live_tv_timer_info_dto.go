/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the LiveTvTimerInfoDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LiveTvTimerInfoDto{}

// LiveTvTimerInfoDto struct for LiveTvTimerInfoDto
type LiveTvTimerInfoDto struct {
	Status *string `json:"Status,omitempty"`
	SeriesTimerId *string `json:"SeriesTimerId,omitempty"`
	ExternalSeriesTimerId *string `json:"ExternalSeriesTimerId,omitempty"`
	RunTimeTicks NullableInt64 `json:"RunTimeTicks,omitempty"`
	ProgramInfo *BaseItemDto `json:"ProgramInfo,omitempty"`
	Id *string `json:"Id,omitempty"`
	Type *string `json:"Type,omitempty"`
	ServerId *string `json:"ServerId,omitempty"`
	ExternalId *string `json:"ExternalId,omitempty"`
	ChannelId *string `json:"ChannelId,omitempty"`
	ExternalChannelId *string `json:"ExternalChannelId,omitempty"`
	ChannelName *string `json:"ChannelName,omitempty"`
	ChannelPrimaryImageTag *string `json:"ChannelPrimaryImageTag,omitempty"`
	ProgramId *string `json:"ProgramId,omitempty"`
	ExternalProgramId *string `json:"ExternalProgramId,omitempty"`
	Name *string `json:"Name,omitempty"`
	Overview *string `json:"Overview,omitempty"`
	StartDate *time.Time `json:"StartDate,omitempty"`
	EndDate *time.Time `json:"EndDate,omitempty"`
	ServiceName *string `json:"ServiceName,omitempty"`
	Priority *int32 `json:"Priority,omitempty"`
	PrePaddingSeconds *int32 `json:"PrePaddingSeconds,omitempty"`
	PostPaddingSeconds *int32 `json:"PostPaddingSeconds,omitempty"`
	IsPrePaddingRequired *bool `json:"IsPrePaddingRequired,omitempty"`
	ParentBackdropItemId *string `json:"ParentBackdropItemId,omitempty"`
	ParentBackdropImageTags []string `json:"ParentBackdropImageTags,omitempty"`
	IsPostPaddingRequired *bool `json:"IsPostPaddingRequired,omitempty"`
	KeepUntil *string `json:"KeepUntil,omitempty"`
}

// NewLiveTvTimerInfoDto instantiates a new LiveTvTimerInfoDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveTvTimerInfoDto() *LiveTvTimerInfoDto {
	this := LiveTvTimerInfoDto{}
	return &this
}

// NewLiveTvTimerInfoDtoWithDefaults instantiates a new LiveTvTimerInfoDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveTvTimerInfoDtoWithDefaults() *LiveTvTimerInfoDto {
	this := LiveTvTimerInfoDto{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *LiveTvTimerInfoDto) SetStatus(v string) {
	o.Status = &v
}

// GetSeriesTimerId returns the SeriesTimerId field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetSeriesTimerId() string {
	if o == nil || IsNil(o.SeriesTimerId) {
		var ret string
		return ret
	}
	return *o.SeriesTimerId
}

// GetSeriesTimerIdOk returns a tuple with the SeriesTimerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetSeriesTimerIdOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesTimerId) {
		return nil, false
	}
	return o.SeriesTimerId, true
}

// HasSeriesTimerId returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasSeriesTimerId() bool {
	if o != nil && !IsNil(o.SeriesTimerId) {
		return true
	}

	return false
}

// SetSeriesTimerId gets a reference to the given string and assigns it to the SeriesTimerId field.
func (o *LiveTvTimerInfoDto) SetSeriesTimerId(v string) {
	o.SeriesTimerId = &v
}

// GetExternalSeriesTimerId returns the ExternalSeriesTimerId field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetExternalSeriesTimerId() string {
	if o == nil || IsNil(o.ExternalSeriesTimerId) {
		var ret string
		return ret
	}
	return *o.ExternalSeriesTimerId
}

// GetExternalSeriesTimerIdOk returns a tuple with the ExternalSeriesTimerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetExternalSeriesTimerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalSeriesTimerId) {
		return nil, false
	}
	return o.ExternalSeriesTimerId, true
}

// HasExternalSeriesTimerId returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasExternalSeriesTimerId() bool {
	if o != nil && !IsNil(o.ExternalSeriesTimerId) {
		return true
	}

	return false
}

// SetExternalSeriesTimerId gets a reference to the given string and assigns it to the ExternalSeriesTimerId field.
func (o *LiveTvTimerInfoDto) SetExternalSeriesTimerId(v string) {
	o.ExternalSeriesTimerId = &v
}

// GetRunTimeTicks returns the RunTimeTicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LiveTvTimerInfoDto) GetRunTimeTicks() int64 {
	if o == nil || IsNil(o.RunTimeTicks.Get()) {
		var ret int64
		return ret
	}
	return *o.RunTimeTicks.Get()
}

// GetRunTimeTicksOk returns a tuple with the RunTimeTicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LiveTvTimerInfoDto) GetRunTimeTicksOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunTimeTicks.Get(), o.RunTimeTicks.IsSet()
}

// HasRunTimeTicks returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasRunTimeTicks() bool {
	if o != nil && o.RunTimeTicks.IsSet() {
		return true
	}

	return false
}

// SetRunTimeTicks gets a reference to the given NullableInt64 and assigns it to the RunTimeTicks field.
func (o *LiveTvTimerInfoDto) SetRunTimeTicks(v int64) {
	o.RunTimeTicks.Set(&v)
}
// SetRunTimeTicksNil sets the value for RunTimeTicks to be an explicit nil
func (o *LiveTvTimerInfoDto) SetRunTimeTicksNil() {
	o.RunTimeTicks.Set(nil)
}

// UnsetRunTimeTicks ensures that no value is present for RunTimeTicks, not even an explicit nil
func (o *LiveTvTimerInfoDto) UnsetRunTimeTicks() {
	o.RunTimeTicks.Unset()
}

// GetProgramInfo returns the ProgramInfo field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetProgramInfo() BaseItemDto {
	if o == nil || IsNil(o.ProgramInfo) {
		var ret BaseItemDto
		return ret
	}
	return *o.ProgramInfo
}

// GetProgramInfoOk returns a tuple with the ProgramInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetProgramInfoOk() (*BaseItemDto, bool) {
	if o == nil || IsNil(o.ProgramInfo) {
		return nil, false
	}
	return o.ProgramInfo, true
}

// HasProgramInfo returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasProgramInfo() bool {
	if o != nil && !IsNil(o.ProgramInfo) {
		return true
	}

	return false
}

// SetProgramInfo gets a reference to the given BaseItemDto and assigns it to the ProgramInfo field.
func (o *LiveTvTimerInfoDto) SetProgramInfo(v BaseItemDto) {
	o.ProgramInfo = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LiveTvTimerInfoDto) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *LiveTvTimerInfoDto) SetType(v string) {
	o.Type = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *LiveTvTimerInfoDto) SetServerId(v string) {
	o.ServerId = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *LiveTvTimerInfoDto) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId) {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *LiveTvTimerInfoDto) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetExternalChannelId returns the ExternalChannelId field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetExternalChannelId() string {
	if o == nil || IsNil(o.ExternalChannelId) {
		var ret string
		return ret
	}
	return *o.ExternalChannelId
}

// GetExternalChannelIdOk returns a tuple with the ExternalChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetExternalChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalChannelId) {
		return nil, false
	}
	return o.ExternalChannelId, true
}

// HasExternalChannelId returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasExternalChannelId() bool {
	if o != nil && !IsNil(o.ExternalChannelId) {
		return true
	}

	return false
}

// SetExternalChannelId gets a reference to the given string and assigns it to the ExternalChannelId field.
func (o *LiveTvTimerInfoDto) SetExternalChannelId(v string) {
	o.ExternalChannelId = &v
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName) {
		var ret string
		return ret
	}
	return *o.ChannelName
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetChannelNameOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelName) {
		return nil, false
	}
	return o.ChannelName, true
}

// HasChannelName returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasChannelName() bool {
	if o != nil && !IsNil(o.ChannelName) {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given string and assigns it to the ChannelName field.
func (o *LiveTvTimerInfoDto) SetChannelName(v string) {
	o.ChannelName = &v
}

// GetChannelPrimaryImageTag returns the ChannelPrimaryImageTag field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetChannelPrimaryImageTag() string {
	if o == nil || IsNil(o.ChannelPrimaryImageTag) {
		var ret string
		return ret
	}
	return *o.ChannelPrimaryImageTag
}

// GetChannelPrimaryImageTagOk returns a tuple with the ChannelPrimaryImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetChannelPrimaryImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelPrimaryImageTag) {
		return nil, false
	}
	return o.ChannelPrimaryImageTag, true
}

// HasChannelPrimaryImageTag returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasChannelPrimaryImageTag() bool {
	if o != nil && !IsNil(o.ChannelPrimaryImageTag) {
		return true
	}

	return false
}

// SetChannelPrimaryImageTag gets a reference to the given string and assigns it to the ChannelPrimaryImageTag field.
func (o *LiveTvTimerInfoDto) SetChannelPrimaryImageTag(v string) {
	o.ChannelPrimaryImageTag = &v
}

// GetProgramId returns the ProgramId field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetProgramId() string {
	if o == nil || IsNil(o.ProgramId) {
		var ret string
		return ret
	}
	return *o.ProgramId
}

// GetProgramIdOk returns a tuple with the ProgramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetProgramIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProgramId) {
		return nil, false
	}
	return o.ProgramId, true
}

// HasProgramId returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasProgramId() bool {
	if o != nil && !IsNil(o.ProgramId) {
		return true
	}

	return false
}

// SetProgramId gets a reference to the given string and assigns it to the ProgramId field.
func (o *LiveTvTimerInfoDto) SetProgramId(v string) {
	o.ProgramId = &v
}

// GetExternalProgramId returns the ExternalProgramId field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetExternalProgramId() string {
	if o == nil || IsNil(o.ExternalProgramId) {
		var ret string
		return ret
	}
	return *o.ExternalProgramId
}

// GetExternalProgramIdOk returns a tuple with the ExternalProgramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetExternalProgramIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalProgramId) {
		return nil, false
	}
	return o.ExternalProgramId, true
}

// HasExternalProgramId returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasExternalProgramId() bool {
	if o != nil && !IsNil(o.ExternalProgramId) {
		return true
	}

	return false
}

// SetExternalProgramId gets a reference to the given string and assigns it to the ExternalProgramId field.
func (o *LiveTvTimerInfoDto) SetExternalProgramId(v string) {
	o.ExternalProgramId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LiveTvTimerInfoDto) SetName(v string) {
	o.Name = &v
}

// GetOverview returns the Overview field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetOverview() string {
	if o == nil || IsNil(o.Overview) {
		var ret string
		return ret
	}
	return *o.Overview
}

// GetOverviewOk returns a tuple with the Overview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetOverviewOk() (*string, bool) {
	if o == nil || IsNil(o.Overview) {
		return nil, false
	}
	return o.Overview, true
}

// HasOverview returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasOverview() bool {
	if o != nil && !IsNil(o.Overview) {
		return true
	}

	return false
}

// SetOverview gets a reference to the given string and assigns it to the Overview field.
func (o *LiveTvTimerInfoDto) SetOverview(v string) {
	o.Overview = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *LiveTvTimerInfoDto) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *LiveTvTimerInfoDto) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *LiveTvTimerInfoDto) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *LiveTvTimerInfoDto) SetPriority(v int32) {
	o.Priority = &v
}

// GetPrePaddingSeconds returns the PrePaddingSeconds field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetPrePaddingSeconds() int32 {
	if o == nil || IsNil(o.PrePaddingSeconds) {
		var ret int32
		return ret
	}
	return *o.PrePaddingSeconds
}

// GetPrePaddingSecondsOk returns a tuple with the PrePaddingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetPrePaddingSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PrePaddingSeconds) {
		return nil, false
	}
	return o.PrePaddingSeconds, true
}

// HasPrePaddingSeconds returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasPrePaddingSeconds() bool {
	if o != nil && !IsNil(o.PrePaddingSeconds) {
		return true
	}

	return false
}

// SetPrePaddingSeconds gets a reference to the given int32 and assigns it to the PrePaddingSeconds field.
func (o *LiveTvTimerInfoDto) SetPrePaddingSeconds(v int32) {
	o.PrePaddingSeconds = &v
}

// GetPostPaddingSeconds returns the PostPaddingSeconds field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetPostPaddingSeconds() int32 {
	if o == nil || IsNil(o.PostPaddingSeconds) {
		var ret int32
		return ret
	}
	return *o.PostPaddingSeconds
}

// GetPostPaddingSecondsOk returns a tuple with the PostPaddingSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetPostPaddingSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PostPaddingSeconds) {
		return nil, false
	}
	return o.PostPaddingSeconds, true
}

// HasPostPaddingSeconds returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasPostPaddingSeconds() bool {
	if o != nil && !IsNil(o.PostPaddingSeconds) {
		return true
	}

	return false
}

// SetPostPaddingSeconds gets a reference to the given int32 and assigns it to the PostPaddingSeconds field.
func (o *LiveTvTimerInfoDto) SetPostPaddingSeconds(v int32) {
	o.PostPaddingSeconds = &v
}

// GetIsPrePaddingRequired returns the IsPrePaddingRequired field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetIsPrePaddingRequired() bool {
	if o == nil || IsNil(o.IsPrePaddingRequired) {
		var ret bool
		return ret
	}
	return *o.IsPrePaddingRequired
}

// GetIsPrePaddingRequiredOk returns a tuple with the IsPrePaddingRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetIsPrePaddingRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrePaddingRequired) {
		return nil, false
	}
	return o.IsPrePaddingRequired, true
}

// HasIsPrePaddingRequired returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasIsPrePaddingRequired() bool {
	if o != nil && !IsNil(o.IsPrePaddingRequired) {
		return true
	}

	return false
}

// SetIsPrePaddingRequired gets a reference to the given bool and assigns it to the IsPrePaddingRequired field.
func (o *LiveTvTimerInfoDto) SetIsPrePaddingRequired(v bool) {
	o.IsPrePaddingRequired = &v
}

// GetParentBackdropItemId returns the ParentBackdropItemId field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetParentBackdropItemId() string {
	if o == nil || IsNil(o.ParentBackdropItemId) {
		var ret string
		return ret
	}
	return *o.ParentBackdropItemId
}

// GetParentBackdropItemIdOk returns a tuple with the ParentBackdropItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetParentBackdropItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentBackdropItemId) {
		return nil, false
	}
	return o.ParentBackdropItemId, true
}

// HasParentBackdropItemId returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasParentBackdropItemId() bool {
	if o != nil && !IsNil(o.ParentBackdropItemId) {
		return true
	}

	return false
}

// SetParentBackdropItemId gets a reference to the given string and assigns it to the ParentBackdropItemId field.
func (o *LiveTvTimerInfoDto) SetParentBackdropItemId(v string) {
	o.ParentBackdropItemId = &v
}

// GetParentBackdropImageTags returns the ParentBackdropImageTags field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetParentBackdropImageTags() []string {
	if o == nil || IsNil(o.ParentBackdropImageTags) {
		var ret []string
		return ret
	}
	return o.ParentBackdropImageTags
}

// GetParentBackdropImageTagsOk returns a tuple with the ParentBackdropImageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetParentBackdropImageTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.ParentBackdropImageTags) {
		return nil, false
	}
	return o.ParentBackdropImageTags, true
}

// HasParentBackdropImageTags returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasParentBackdropImageTags() bool {
	if o != nil && !IsNil(o.ParentBackdropImageTags) {
		return true
	}

	return false
}

// SetParentBackdropImageTags gets a reference to the given []string and assigns it to the ParentBackdropImageTags field.
func (o *LiveTvTimerInfoDto) SetParentBackdropImageTags(v []string) {
	o.ParentBackdropImageTags = v
}

// GetIsPostPaddingRequired returns the IsPostPaddingRequired field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetIsPostPaddingRequired() bool {
	if o == nil || IsNil(o.IsPostPaddingRequired) {
		var ret bool
		return ret
	}
	return *o.IsPostPaddingRequired
}

// GetIsPostPaddingRequiredOk returns a tuple with the IsPostPaddingRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetIsPostPaddingRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPostPaddingRequired) {
		return nil, false
	}
	return o.IsPostPaddingRequired, true
}

// HasIsPostPaddingRequired returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasIsPostPaddingRequired() bool {
	if o != nil && !IsNil(o.IsPostPaddingRequired) {
		return true
	}

	return false
}

// SetIsPostPaddingRequired gets a reference to the given bool and assigns it to the IsPostPaddingRequired field.
func (o *LiveTvTimerInfoDto) SetIsPostPaddingRequired(v bool) {
	o.IsPostPaddingRequired = &v
}

// GetKeepUntil returns the KeepUntil field value if set, zero value otherwise.
func (o *LiveTvTimerInfoDto) GetKeepUntil() string {
	if o == nil || IsNil(o.KeepUntil) {
		var ret string
		return ret
	}
	return *o.KeepUntil
}

// GetKeepUntilOk returns a tuple with the KeepUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveTvTimerInfoDto) GetKeepUntilOk() (*string, bool) {
	if o == nil || IsNil(o.KeepUntil) {
		return nil, false
	}
	return o.KeepUntil, true
}

// HasKeepUntil returns a boolean if a field has been set.
func (o *LiveTvTimerInfoDto) HasKeepUntil() bool {
	if o != nil && !IsNil(o.KeepUntil) {
		return true
	}

	return false
}

// SetKeepUntil gets a reference to the given string and assigns it to the KeepUntil field.
func (o *LiveTvTimerInfoDto) SetKeepUntil(v string) {
	o.KeepUntil = &v
}

func (o LiveTvTimerInfoDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LiveTvTimerInfoDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.SeriesTimerId) {
		toSerialize["SeriesTimerId"] = o.SeriesTimerId
	}
	if !IsNil(o.ExternalSeriesTimerId) {
		toSerialize["ExternalSeriesTimerId"] = o.ExternalSeriesTimerId
	}
	if o.RunTimeTicks.IsSet() {
		toSerialize["RunTimeTicks"] = o.RunTimeTicks.Get()
	}
	if !IsNil(o.ProgramInfo) {
		toSerialize["ProgramInfo"] = o.ProgramInfo
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.ServerId) {
		toSerialize["ServerId"] = o.ServerId
	}
	if !IsNil(o.ExternalId) {
		toSerialize["ExternalId"] = o.ExternalId
	}
	if !IsNil(o.ChannelId) {
		toSerialize["ChannelId"] = o.ChannelId
	}
	if !IsNil(o.ExternalChannelId) {
		toSerialize["ExternalChannelId"] = o.ExternalChannelId
	}
	if !IsNil(o.ChannelName) {
		toSerialize["ChannelName"] = o.ChannelName
	}
	if !IsNil(o.ChannelPrimaryImageTag) {
		toSerialize["ChannelPrimaryImageTag"] = o.ChannelPrimaryImageTag
	}
	if !IsNil(o.ProgramId) {
		toSerialize["ProgramId"] = o.ProgramId
	}
	if !IsNil(o.ExternalProgramId) {
		toSerialize["ExternalProgramId"] = o.ExternalProgramId
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Overview) {
		toSerialize["Overview"] = o.Overview
	}
	if !IsNil(o.StartDate) {
		toSerialize["StartDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["EndDate"] = o.EndDate
	}
	if !IsNil(o.ServiceName) {
		toSerialize["ServiceName"] = o.ServiceName
	}
	if !IsNil(o.Priority) {
		toSerialize["Priority"] = o.Priority
	}
	if !IsNil(o.PrePaddingSeconds) {
		toSerialize["PrePaddingSeconds"] = o.PrePaddingSeconds
	}
	if !IsNil(o.PostPaddingSeconds) {
		toSerialize["PostPaddingSeconds"] = o.PostPaddingSeconds
	}
	if !IsNil(o.IsPrePaddingRequired) {
		toSerialize["IsPrePaddingRequired"] = o.IsPrePaddingRequired
	}
	if !IsNil(o.ParentBackdropItemId) {
		toSerialize["ParentBackdropItemId"] = o.ParentBackdropItemId
	}
	if !IsNil(o.ParentBackdropImageTags) {
		toSerialize["ParentBackdropImageTags"] = o.ParentBackdropImageTags
	}
	if !IsNil(o.IsPostPaddingRequired) {
		toSerialize["IsPostPaddingRequired"] = o.IsPostPaddingRequired
	}
	if !IsNil(o.KeepUntil) {
		toSerialize["KeepUntil"] = o.KeepUntil
	}
	return toSerialize, nil
}

type NullableLiveTvTimerInfoDto struct {
	value *LiveTvTimerInfoDto
	isSet bool
}

func (v NullableLiveTvTimerInfoDto) Get() *LiveTvTimerInfoDto {
	return v.value
}

func (v *NullableLiveTvTimerInfoDto) Set(val *LiveTvTimerInfoDto) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveTvTimerInfoDto) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveTvTimerInfoDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveTvTimerInfoDto(val *LiveTvTimerInfoDto) *NullableLiveTvTimerInfoDto {
	return &NullableLiveTvTimerInfoDto{value: val, isSet: true}
}

func (v NullableLiveTvTimerInfoDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveTvTimerInfoDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


