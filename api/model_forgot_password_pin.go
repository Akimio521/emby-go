/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ForgotPasswordPin type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ForgotPasswordPin{}

// ForgotPasswordPin struct for ForgotPasswordPin
type ForgotPasswordPin struct {
	Pin *string `json:"Pin,omitempty"`
}

// NewForgotPasswordPin instantiates a new ForgotPasswordPin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForgotPasswordPin() *ForgotPasswordPin {
	this := ForgotPasswordPin{}
	return &this
}

// NewForgotPasswordPinWithDefaults instantiates a new ForgotPasswordPin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForgotPasswordPinWithDefaults() *ForgotPasswordPin {
	this := ForgotPasswordPin{}
	return &this
}

// GetPin returns the Pin field value if set, zero value otherwise.
func (o *ForgotPasswordPin) GetPin() string {
	if o == nil || IsNil(o.Pin) {
		var ret string
		return ret
	}
	return *o.Pin
}

// GetPinOk returns a tuple with the Pin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForgotPasswordPin) GetPinOk() (*string, bool) {
	if o == nil || IsNil(o.Pin) {
		return nil, false
	}
	return o.Pin, true
}

// HasPin returns a boolean if a field has been set.
func (o *ForgotPasswordPin) HasPin() bool {
	if o != nil && !IsNil(o.Pin) {
		return true
	}

	return false
}

// SetPin gets a reference to the given string and assigns it to the Pin field.
func (o *ForgotPasswordPin) SetPin(v string) {
	o.Pin = &v
}

func (o ForgotPasswordPin) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ForgotPasswordPin) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pin) {
		toSerialize["Pin"] = o.Pin
	}
	return toSerialize, nil
}

type NullableForgotPasswordPin struct {
	value *ForgotPasswordPin
	isSet bool
}

func (v NullableForgotPasswordPin) Get() *ForgotPasswordPin {
	return v.value
}

func (v *NullableForgotPasswordPin) Set(val *ForgotPasswordPin) {
	v.value = val
	v.isSet = true
}

func (v NullableForgotPasswordPin) IsSet() bool {
	return v.isSet
}

func (v *NullableForgotPasswordPin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForgotPasswordPin(val *ForgotPasswordPin) *NullableForgotPasswordPin {
	return &NullableForgotPasswordPin{value: val, isSet: true}
}

func (v NullableForgotPasswordPin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForgotPasswordPin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


