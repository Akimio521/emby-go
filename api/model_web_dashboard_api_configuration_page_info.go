/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the WebDashboardApiConfigurationPageInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebDashboardApiConfigurationPageInfo{}

// WebDashboardApiConfigurationPageInfo struct for WebDashboardApiConfigurationPageInfo
type WebDashboardApiConfigurationPageInfo struct {
	Name *string `json:"Name,omitempty"`
	EnableInMainMenu *bool `json:"EnableInMainMenu,omitempty"`
	MenuSection *string `json:"MenuSection,omitempty"`
	MenuIcon *string `json:"MenuIcon,omitempty"`
	DisplayName *string `json:"DisplayName,omitempty"`
	ConfigurationPageType *string `json:"ConfigurationPageType,omitempty"`
	PluginId *string `json:"PluginId,omitempty"`
}

// NewWebDashboardApiConfigurationPageInfo instantiates a new WebDashboardApiConfigurationPageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebDashboardApiConfigurationPageInfo() *WebDashboardApiConfigurationPageInfo {
	this := WebDashboardApiConfigurationPageInfo{}
	return &this
}

// NewWebDashboardApiConfigurationPageInfoWithDefaults instantiates a new WebDashboardApiConfigurationPageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebDashboardApiConfigurationPageInfoWithDefaults() *WebDashboardApiConfigurationPageInfo {
	this := WebDashboardApiConfigurationPageInfo{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WebDashboardApiConfigurationPageInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebDashboardApiConfigurationPageInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WebDashboardApiConfigurationPageInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WebDashboardApiConfigurationPageInfo) SetName(v string) {
	o.Name = &v
}

// GetEnableInMainMenu returns the EnableInMainMenu field value if set, zero value otherwise.
func (o *WebDashboardApiConfigurationPageInfo) GetEnableInMainMenu() bool {
	if o == nil || IsNil(o.EnableInMainMenu) {
		var ret bool
		return ret
	}
	return *o.EnableInMainMenu
}

// GetEnableInMainMenuOk returns a tuple with the EnableInMainMenu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebDashboardApiConfigurationPageInfo) GetEnableInMainMenuOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableInMainMenu) {
		return nil, false
	}
	return o.EnableInMainMenu, true
}

// HasEnableInMainMenu returns a boolean if a field has been set.
func (o *WebDashboardApiConfigurationPageInfo) HasEnableInMainMenu() bool {
	if o != nil && !IsNil(o.EnableInMainMenu) {
		return true
	}

	return false
}

// SetEnableInMainMenu gets a reference to the given bool and assigns it to the EnableInMainMenu field.
func (o *WebDashboardApiConfigurationPageInfo) SetEnableInMainMenu(v bool) {
	o.EnableInMainMenu = &v
}

// GetMenuSection returns the MenuSection field value if set, zero value otherwise.
func (o *WebDashboardApiConfigurationPageInfo) GetMenuSection() string {
	if o == nil || IsNil(o.MenuSection) {
		var ret string
		return ret
	}
	return *o.MenuSection
}

// GetMenuSectionOk returns a tuple with the MenuSection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebDashboardApiConfigurationPageInfo) GetMenuSectionOk() (*string, bool) {
	if o == nil || IsNil(o.MenuSection) {
		return nil, false
	}
	return o.MenuSection, true
}

// HasMenuSection returns a boolean if a field has been set.
func (o *WebDashboardApiConfigurationPageInfo) HasMenuSection() bool {
	if o != nil && !IsNil(o.MenuSection) {
		return true
	}

	return false
}

// SetMenuSection gets a reference to the given string and assigns it to the MenuSection field.
func (o *WebDashboardApiConfigurationPageInfo) SetMenuSection(v string) {
	o.MenuSection = &v
}

// GetMenuIcon returns the MenuIcon field value if set, zero value otherwise.
func (o *WebDashboardApiConfigurationPageInfo) GetMenuIcon() string {
	if o == nil || IsNil(o.MenuIcon) {
		var ret string
		return ret
	}
	return *o.MenuIcon
}

// GetMenuIconOk returns a tuple with the MenuIcon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebDashboardApiConfigurationPageInfo) GetMenuIconOk() (*string, bool) {
	if o == nil || IsNil(o.MenuIcon) {
		return nil, false
	}
	return o.MenuIcon, true
}

// HasMenuIcon returns a boolean if a field has been set.
func (o *WebDashboardApiConfigurationPageInfo) HasMenuIcon() bool {
	if o != nil && !IsNil(o.MenuIcon) {
		return true
	}

	return false
}

// SetMenuIcon gets a reference to the given string and assigns it to the MenuIcon field.
func (o *WebDashboardApiConfigurationPageInfo) SetMenuIcon(v string) {
	o.MenuIcon = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *WebDashboardApiConfigurationPageInfo) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebDashboardApiConfigurationPageInfo) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *WebDashboardApiConfigurationPageInfo) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *WebDashboardApiConfigurationPageInfo) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetConfigurationPageType returns the ConfigurationPageType field value if set, zero value otherwise.
func (o *WebDashboardApiConfigurationPageInfo) GetConfigurationPageType() string {
	if o == nil || IsNil(o.ConfigurationPageType) {
		var ret string
		return ret
	}
	return *o.ConfigurationPageType
}

// GetConfigurationPageTypeOk returns a tuple with the ConfigurationPageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebDashboardApiConfigurationPageInfo) GetConfigurationPageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigurationPageType) {
		return nil, false
	}
	return o.ConfigurationPageType, true
}

// HasConfigurationPageType returns a boolean if a field has been set.
func (o *WebDashboardApiConfigurationPageInfo) HasConfigurationPageType() bool {
	if o != nil && !IsNil(o.ConfigurationPageType) {
		return true
	}

	return false
}

// SetConfigurationPageType gets a reference to the given string and assigns it to the ConfigurationPageType field.
func (o *WebDashboardApiConfigurationPageInfo) SetConfigurationPageType(v string) {
	o.ConfigurationPageType = &v
}

// GetPluginId returns the PluginId field value if set, zero value otherwise.
func (o *WebDashboardApiConfigurationPageInfo) GetPluginId() string {
	if o == nil || IsNil(o.PluginId) {
		var ret string
		return ret
	}
	return *o.PluginId
}

// GetPluginIdOk returns a tuple with the PluginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebDashboardApiConfigurationPageInfo) GetPluginIdOk() (*string, bool) {
	if o == nil || IsNil(o.PluginId) {
		return nil, false
	}
	return o.PluginId, true
}

// HasPluginId returns a boolean if a field has been set.
func (o *WebDashboardApiConfigurationPageInfo) HasPluginId() bool {
	if o != nil && !IsNil(o.PluginId) {
		return true
	}

	return false
}

// SetPluginId gets a reference to the given string and assigns it to the PluginId field.
func (o *WebDashboardApiConfigurationPageInfo) SetPluginId(v string) {
	o.PluginId = &v
}

func (o WebDashboardApiConfigurationPageInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebDashboardApiConfigurationPageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.EnableInMainMenu) {
		toSerialize["EnableInMainMenu"] = o.EnableInMainMenu
	}
	if !IsNil(o.MenuSection) {
		toSerialize["MenuSection"] = o.MenuSection
	}
	if !IsNil(o.MenuIcon) {
		toSerialize["MenuIcon"] = o.MenuIcon
	}
	if !IsNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !IsNil(o.ConfigurationPageType) {
		toSerialize["ConfigurationPageType"] = o.ConfigurationPageType
	}
	if !IsNil(o.PluginId) {
		toSerialize["PluginId"] = o.PluginId
	}
	return toSerialize, nil
}

type NullableWebDashboardApiConfigurationPageInfo struct {
	value *WebDashboardApiConfigurationPageInfo
	isSet bool
}

func (v NullableWebDashboardApiConfigurationPageInfo) Get() *WebDashboardApiConfigurationPageInfo {
	return v.value
}

func (v *NullableWebDashboardApiConfigurationPageInfo) Set(val *WebDashboardApiConfigurationPageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableWebDashboardApiConfigurationPageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableWebDashboardApiConfigurationPageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebDashboardApiConfigurationPageInfo(val *WebDashboardApiConfigurationPageInfo) *NullableWebDashboardApiConfigurationPageInfo {
	return &NullableWebDashboardApiConfigurationPageInfo{value: val, isSet: true}
}

func (v NullableWebDashboardApiConfigurationPageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebDashboardApiConfigurationPageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


