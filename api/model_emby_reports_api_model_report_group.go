/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the EmbyReportsApiModelReportGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbyReportsApiModelReportGroup{}

// EmbyReportsApiModelReportGroup struct for EmbyReportsApiModelReportGroup
type EmbyReportsApiModelReportGroup struct {
	Name *string `json:"Name,omitempty"`
	Rows []EmbyReportsApiModelReportRow `json:"Rows,omitempty"`
}

// NewEmbyReportsApiModelReportGroup instantiates a new EmbyReportsApiModelReportGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbyReportsApiModelReportGroup() *EmbyReportsApiModelReportGroup {
	this := EmbyReportsApiModelReportGroup{}
	return &this
}

// NewEmbyReportsApiModelReportGroupWithDefaults instantiates a new EmbyReportsApiModelReportGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbyReportsApiModelReportGroupWithDefaults() *EmbyReportsApiModelReportGroup {
	this := EmbyReportsApiModelReportGroup{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportGroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportGroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportGroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EmbyReportsApiModelReportGroup) SetName(v string) {
	o.Name = &v
}

// GetRows returns the Rows field value if set, zero value otherwise.
func (o *EmbyReportsApiModelReportGroup) GetRows() []EmbyReportsApiModelReportRow {
	if o == nil || IsNil(o.Rows) {
		var ret []EmbyReportsApiModelReportRow
		return ret
	}
	return o.Rows
}

// GetRowsOk returns a tuple with the Rows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbyReportsApiModelReportGroup) GetRowsOk() ([]EmbyReportsApiModelReportRow, bool) {
	if o == nil || IsNil(o.Rows) {
		return nil, false
	}
	return o.Rows, true
}

// HasRows returns a boolean if a field has been set.
func (o *EmbyReportsApiModelReportGroup) HasRows() bool {
	if o != nil && !IsNil(o.Rows) {
		return true
	}

	return false
}

// SetRows gets a reference to the given []EmbyReportsApiModelReportRow and assigns it to the Rows field.
func (o *EmbyReportsApiModelReportGroup) SetRows(v []EmbyReportsApiModelReportRow) {
	o.Rows = v
}

func (o EmbyReportsApiModelReportGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbyReportsApiModelReportGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Rows) {
		toSerialize["Rows"] = o.Rows
	}
	return toSerialize, nil
}

type NullableEmbyReportsApiModelReportGroup struct {
	value *EmbyReportsApiModelReportGroup
	isSet bool
}

func (v NullableEmbyReportsApiModelReportGroup) Get() *EmbyReportsApiModelReportGroup {
	return v.value
}

func (v *NullableEmbyReportsApiModelReportGroup) Set(val *EmbyReportsApiModelReportGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbyReportsApiModelReportGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbyReportsApiModelReportGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbyReportsApiModelReportGroup(val *EmbyReportsApiModelReportGroup) *NullableEmbyReportsApiModelReportGroup {
	return &NullableEmbyReportsApiModelReportGroup{value: val, isSet: true}
}

func (v NullableEmbyReportsApiModelReportGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbyReportsApiModelReportGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


