/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the DevicesDeviceInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DevicesDeviceInfo{}

// DevicesDeviceInfo struct for DevicesDeviceInfo
type DevicesDeviceInfo struct {
	Name *string `json:"Name,omitempty"`
	Id *string `json:"Id,omitempty"`
	LastUserName *string `json:"LastUserName,omitempty"`
	AppName *string `json:"AppName,omitempty"`
	AppVersion *string `json:"AppVersion,omitempty"`
	LastUserId *string `json:"LastUserId,omitempty"`
	DateLastActivity *time.Time `json:"DateLastActivity,omitempty"`
	IconUrl *string `json:"IconUrl,omitempty"`
}

// NewDevicesDeviceInfo instantiates a new DevicesDeviceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevicesDeviceInfo() *DevicesDeviceInfo {
	this := DevicesDeviceInfo{}
	return &this
}

// NewDevicesDeviceInfoWithDefaults instantiates a new DevicesDeviceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevicesDeviceInfoWithDefaults() *DevicesDeviceInfo {
	this := DevicesDeviceInfo{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DevicesDeviceInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesDeviceInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DevicesDeviceInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DevicesDeviceInfo) SetName(v string) {
	o.Name = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DevicesDeviceInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesDeviceInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DevicesDeviceInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DevicesDeviceInfo) SetId(v string) {
	o.Id = &v
}

// GetLastUserName returns the LastUserName field value if set, zero value otherwise.
func (o *DevicesDeviceInfo) GetLastUserName() string {
	if o == nil || IsNil(o.LastUserName) {
		var ret string
		return ret
	}
	return *o.LastUserName
}

// GetLastUserNameOk returns a tuple with the LastUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesDeviceInfo) GetLastUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastUserName) {
		return nil, false
	}
	return o.LastUserName, true
}

// HasLastUserName returns a boolean if a field has been set.
func (o *DevicesDeviceInfo) HasLastUserName() bool {
	if o != nil && !IsNil(o.LastUserName) {
		return true
	}

	return false
}

// SetLastUserName gets a reference to the given string and assigns it to the LastUserName field.
func (o *DevicesDeviceInfo) SetLastUserName(v string) {
	o.LastUserName = &v
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *DevicesDeviceInfo) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesDeviceInfo) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *DevicesDeviceInfo) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *DevicesDeviceInfo) SetAppName(v string) {
	o.AppName = &v
}

// GetAppVersion returns the AppVersion field value if set, zero value otherwise.
func (o *DevicesDeviceInfo) GetAppVersion() string {
	if o == nil || IsNil(o.AppVersion) {
		var ret string
		return ret
	}
	return *o.AppVersion
}

// GetAppVersionOk returns a tuple with the AppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesDeviceInfo) GetAppVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AppVersion) {
		return nil, false
	}
	return o.AppVersion, true
}

// HasAppVersion returns a boolean if a field has been set.
func (o *DevicesDeviceInfo) HasAppVersion() bool {
	if o != nil && !IsNil(o.AppVersion) {
		return true
	}

	return false
}

// SetAppVersion gets a reference to the given string and assigns it to the AppVersion field.
func (o *DevicesDeviceInfo) SetAppVersion(v string) {
	o.AppVersion = &v
}

// GetLastUserId returns the LastUserId field value if set, zero value otherwise.
func (o *DevicesDeviceInfo) GetLastUserId() string {
	if o == nil || IsNil(o.LastUserId) {
		var ret string
		return ret
	}
	return *o.LastUserId
}

// GetLastUserIdOk returns a tuple with the LastUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesDeviceInfo) GetLastUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastUserId) {
		return nil, false
	}
	return o.LastUserId, true
}

// HasLastUserId returns a boolean if a field has been set.
func (o *DevicesDeviceInfo) HasLastUserId() bool {
	if o != nil && !IsNil(o.LastUserId) {
		return true
	}

	return false
}

// SetLastUserId gets a reference to the given string and assigns it to the LastUserId field.
func (o *DevicesDeviceInfo) SetLastUserId(v string) {
	o.LastUserId = &v
}

// GetDateLastActivity returns the DateLastActivity field value if set, zero value otherwise.
func (o *DevicesDeviceInfo) GetDateLastActivity() time.Time {
	if o == nil || IsNil(o.DateLastActivity) {
		var ret time.Time
		return ret
	}
	return *o.DateLastActivity
}

// GetDateLastActivityOk returns a tuple with the DateLastActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesDeviceInfo) GetDateLastActivityOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateLastActivity) {
		return nil, false
	}
	return o.DateLastActivity, true
}

// HasDateLastActivity returns a boolean if a field has been set.
func (o *DevicesDeviceInfo) HasDateLastActivity() bool {
	if o != nil && !IsNil(o.DateLastActivity) {
		return true
	}

	return false
}

// SetDateLastActivity gets a reference to the given time.Time and assigns it to the DateLastActivity field.
func (o *DevicesDeviceInfo) SetDateLastActivity(v time.Time) {
	o.DateLastActivity = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *DevicesDeviceInfo) GetIconUrl() string {
	if o == nil || IsNil(o.IconUrl) {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesDeviceInfo) GetIconUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IconUrl) {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *DevicesDeviceInfo) HasIconUrl() bool {
	if o != nil && !IsNil(o.IconUrl) {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *DevicesDeviceInfo) SetIconUrl(v string) {
	o.IconUrl = &v
}

func (o DevicesDeviceInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DevicesDeviceInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.LastUserName) {
		toSerialize["LastUserName"] = o.LastUserName
	}
	if !IsNil(o.AppName) {
		toSerialize["AppName"] = o.AppName
	}
	if !IsNil(o.AppVersion) {
		toSerialize["AppVersion"] = o.AppVersion
	}
	if !IsNil(o.LastUserId) {
		toSerialize["LastUserId"] = o.LastUserId
	}
	if !IsNil(o.DateLastActivity) {
		toSerialize["DateLastActivity"] = o.DateLastActivity
	}
	if !IsNil(o.IconUrl) {
		toSerialize["IconUrl"] = o.IconUrl
	}
	return toSerialize, nil
}

type NullableDevicesDeviceInfo struct {
	value *DevicesDeviceInfo
	isSet bool
}

func (v NullableDevicesDeviceInfo) Get() *DevicesDeviceInfo {
	return v.value
}

func (v *NullableDevicesDeviceInfo) Set(val *DevicesDeviceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDevicesDeviceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDevicesDeviceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevicesDeviceInfo(val *DevicesDeviceInfo) *NullableDevicesDeviceInfo {
	return &NullableDevicesDeviceInfo{value: val, isSet: true}
}

func (v NullableDevicesDeviceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevicesDeviceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


