/*
Emby Server API

Explore the Emby Server API

API version: 4.1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the SyncModelItemFileInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncModelItemFileInfo{}

// SyncModelItemFileInfo struct for SyncModelItemFileInfo
type SyncModelItemFileInfo struct {
	Type *string `json:"Type,omitempty"`
	Name *string `json:"Name,omitempty"`
	Path *string `json:"Path,omitempty"`
	ImageType *string `json:"ImageType,omitempty"`
	Index *int32 `json:"Index,omitempty"`
}

// NewSyncModelItemFileInfo instantiates a new SyncModelItemFileInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncModelItemFileInfo() *SyncModelItemFileInfo {
	this := SyncModelItemFileInfo{}
	return &this
}

// NewSyncModelItemFileInfoWithDefaults instantiates a new SyncModelItemFileInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncModelItemFileInfoWithDefaults() *SyncModelItemFileInfo {
	this := SyncModelItemFileInfo{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SyncModelItemFileInfo) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncModelItemFileInfo) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SyncModelItemFileInfo) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SyncModelItemFileInfo) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SyncModelItemFileInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncModelItemFileInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SyncModelItemFileInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SyncModelItemFileInfo) SetName(v string) {
	o.Name = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *SyncModelItemFileInfo) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncModelItemFileInfo) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SyncModelItemFileInfo) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *SyncModelItemFileInfo) SetPath(v string) {
	o.Path = &v
}

// GetImageType returns the ImageType field value if set, zero value otherwise.
func (o *SyncModelItemFileInfo) GetImageType() string {
	if o == nil || IsNil(o.ImageType) {
		var ret string
		return ret
	}
	return *o.ImageType
}

// GetImageTypeOk returns a tuple with the ImageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncModelItemFileInfo) GetImageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ImageType) {
		return nil, false
	}
	return o.ImageType, true
}

// HasImageType returns a boolean if a field has been set.
func (o *SyncModelItemFileInfo) HasImageType() bool {
	if o != nil && !IsNil(o.ImageType) {
		return true
	}

	return false
}

// SetImageType gets a reference to the given string and assigns it to the ImageType field.
func (o *SyncModelItemFileInfo) SetImageType(v string) {
	o.ImageType = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *SyncModelItemFileInfo) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncModelItemFileInfo) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *SyncModelItemFileInfo) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *SyncModelItemFileInfo) SetIndex(v int32) {
	o.Index = &v
}

func (o SyncModelItemFileInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncModelItemFileInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Path) {
		toSerialize["Path"] = o.Path
	}
	if !IsNil(o.ImageType) {
		toSerialize["ImageType"] = o.ImageType
	}
	if !IsNil(o.Index) {
		toSerialize["Index"] = o.Index
	}
	return toSerialize, nil
}

type NullableSyncModelItemFileInfo struct {
	value *SyncModelItemFileInfo
	isSet bool
}

func (v NullableSyncModelItemFileInfo) Get() *SyncModelItemFileInfo {
	return v.value
}

func (v *NullableSyncModelItemFileInfo) Set(val *SyncModelItemFileInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncModelItemFileInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncModelItemFileInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncModelItemFileInfo(val *SyncModelItemFileInfo) *NullableSyncModelItemFileInfo {
	return &NullableSyncModelItemFileInfo{value: val, isSet: true}
}

func (v NullableSyncModelItemFileInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncModelItemFileInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


